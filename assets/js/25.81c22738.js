(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{590:function(s,a,t){"use strict";t.r(a);var n=t(6),e=Object(n.a)({},(function(){var s=this,a=s.$createElement,t=s._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("p",[t("img",{attrs:{src:"https://gitee.com/WWWWWWWXQ/images/raw/master/JCP-M&A/hz_book.png",alt:"hz_books"}})]),s._v(" "),t("p",[t("img",{attrs:{src:"https://gitee.com/WWWWWWWXQ/images/raw/master/JCP-M&A/Java%E9%AB%98%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3.png",alt:"截屏2021-07-25 下午1.27.12"}})]),s._v(" "),t("h1",{attrs:{id:"§-多线程基础"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#§-多线程基础"}},[s._v("#")]),s._v(" § 多线程基础")]),s._v(" "),t("hr"),s._v(" "),t("h2",{attrs:{id:"_1-快速认识线程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-快速认识线程"}},[s._v("#")]),s._v(" 1. 快速认识线程")]),s._v(" "),t("h3",{attrs:{id:"_1-1-线程介绍"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-线程介绍"}},[s._v("#")]),s._v(" 1.1 线程介绍")]),s._v(" "),t("p",[s._v("对计算机来说每一个任务就是一个"),t("code",[s._v("进程 Process")]),s._v("，每一个"),t("code",[s._v("进程")]),s._v("内部至少要有一个"),t("code",[s._v("线程 Thread")]),s._v("在运行。有时候也称"),t("code",[s._v("轻量级的进程")]),s._v("。")]),s._v(" "),t("p",[t("code",[s._v("线程")]),s._v("是程序执行的一个路径，每一个线程都有自己的"),t("code",[s._v("局部变量表")]),s._v("、"),t("code",[s._v("程序计数器（指向正在执行的命令指针）")]),s._v("以及各自的"),t("code",[s._v("生命周期")]),s._v("。现代操作系统中一般不止一个线程在运行，当启动了一个Java虚拟机（JVM）时，从操作系统中就会创建一个新的"),t("code",[s._v("进程")]),s._v("（JVM进程），JVM进程中将会派生或者创建更多"),t("code",[s._v("线程")]),s._v("。")]),s._v(" "),t("h3",{attrs:{id:"_1-2-创建并启动一个线程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-创建并启动一个线程"}},[s._v("#")]),s._v(" 1.2 创建并启动一个线程")]),s._v(" "),t("p",[s._v("利用"),t("code",[s._v("Thread")]),s._v("类快速创建并启动一个线程。")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("TryConcurrency")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" args"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Thread")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 创建一个线程，并且重写其run方法，将要执行的方法交给它")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Override")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("run")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n          "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("method1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("start")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("           "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 启动新的线程，只有调用了Thread的start放啊，才代表派生了一个新线程")]),s._v("\n                         "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 否则Thread和其他普通的Java对象没有什么区别，")]),s._v("\n                         "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// start方法是一个立即返回方法，并不会让程序陷入阻塞。")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("method2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// Java 8 Lambda")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" main "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" args"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Thread")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Class1")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("::")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("method1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("start")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("method2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br")])]),t("h4",{attrs:{id:"_1-2-1-观察线程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-1-观察线程"}},[s._v("#")]),s._v(" 1.2.1 观察线程")]),s._v(" "),t("p",[s._v("JDK自带了几种可以查看线程状态的工具")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("// Jconsole\n用法: \n    jconsole "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" -interval"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("n "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" -notile "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" -pluginpath "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("path"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" -version "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" connection "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(". "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n\n选项：\n    -interval   将更新间隔设置为 n 秒 "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("默认值为 "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v(" 秒"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    -notile     初始不平铺窗口 "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("对于两个或多个连接"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    -pluginpath 指定 jconsole 用于查找插件的路径\n    -version    输出程序版本\n\n    connection "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" pid "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("||")]),s._v(" host:port "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("||")]),s._v(" JMX URL "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("service:jmx:"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("协议"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("://"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v("."),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    pid         目标进程的进程 ID\n    "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("host")]),s._v("        远程主机名或 IP 地址\n    port        远程连接的端口号\n\n    -J          指定运行 jconsole 的 Java 虚拟机\n                的输入参数\n\n\n// Jstack\nUsage:\n    jstack "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("-l"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("-e"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("pid"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("to connect to running process"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\nOptions:\n    -l  long listing. Prints additional information about locks\n    -e  extended listing. Prints additional information about threads\n    -? -h --help -help to print this "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("help")]),s._v(" message\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br")])]),t("h3",{attrs:{id:"_1-3-线程的生命周期详解"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-线程的生命周期详解"}},[s._v("#")]),s._v(" 1.3 线程的生命周期详解")]),s._v(" "),t("p",[s._v("线程的生命周期大体可以分为如下5个主要的阶段")]),s._v(" "),t("ul",[t("li",[s._v("NEW")]),s._v(" "),t("li",[s._v("RUNNABLE")]),s._v(" "),t("li",[s._v("RUNNING")]),s._v(" "),t("li",[s._v("BLOCKED")]),s._v(" "),t("li",[s._v("TERMINATED")])]),s._v(" "),t("p",[t("img",{attrs:{src:"https://gitee.com/WWWWWWWXQ/images/raw/master/JCP-M&A/1.3_1.png",alt:"status"}})]),s._v(" "),t("blockquote",[t("p",[s._v("NEW 状态")])]),s._v(" "),t("p",[s._v("当使用了关键字"),t("code",[s._v("new")]),s._v("创建于一个"),t("code",[s._v("Thread")]),s._v("对象后，此时它并不处于执行状态，或者准确的说，同其他Java对象一样，我们仅仅创建了一个普通的"),t("code",[s._v("Thread")]),s._v("对象，并未创建新的线程。")]),s._v(" "),t("p",[s._v("在调用"),t("code",[s._v("start()")]),s._v("方法前，线程始终处于"),t("code",[s._v("NEW")]),s._v("状态。")]),s._v(" "),t("blockquote",[t("p",[s._v("RUNNABLE 状态")])]),s._v(" "),t("p",[s._v("当调用了"),t("code",[s._v("Thread")]),s._v("对象的"),t("code",[s._v("start()")]),s._v("方法之后，线程对象便从"),t("code",[s._v("NEW")]),s._v("状态转为了"),t("code",[s._v("RUNNABLE")]),s._v("状态，此时才是真正地在JVM进程中创建了一个新线程。")]),s._v(" "),t("p",[s._v("调用"),t("code",[s._v("start()")]),s._v("方法不代表立刻执行新建的线程，线程的运行与否和进程一样，都要听命于CPU的调度。等待CPU的调度并执行的中间状态即为"),t("code",[s._v("RUNNABLE")]),s._v("状态，也就是可执行状态，表示此线程具备执行的资格但尚未执行。")]),s._v(" "),t("blockquote",[t("p",[s._v("RUNNING 状态")])]),s._v(" "),t("p",[s._v("一旦CPU通过轮询或者其他方式从任务可执行队列中选中了线程，那么此时它才能真正地执行自己的逻辑代码。需要说明的是，一个正在"),t("code",[s._v("RUNNING")]),s._v("状态的线程事实上也是"),t("code",[s._v("RUNNABLE")]),s._v("的，但反过来不成立。")]),s._v(" "),t("p",[s._v("在该状态中，线程的状态可以发生如下的状态转换：")]),s._v(" "),t("ul",[t("li",[s._v("直接进入"),t("code",[s._v("TERMINATED")]),s._v("状态。\n"),t("ul",[t("li",[s._v("调用JDK已经不推荐使用的"),t("code",[s._v("stop")]),s._v("方法或者判断某个逻辑标识")])])]),s._v(" "),t("li",[s._v("进入"),t("code",[s._v("BLOCKED")]),s._v("状态。\n"),t("ul",[t("li",[s._v("调用了"),t("code",[s._v("sleep")]),s._v("或者"),t("code",[s._v("wait")]),s._v("方法而加入了"),t("code",[s._v("waitSet")]),s._v("中")]),s._v(" "),t("li",[s._v("进行了某个阻塞的IO操作，比如网络数据的读写")]),s._v(" "),t("li",[s._v("获取某个锁资源，从而加入到该锁的阻塞队列")])])]),s._v(" "),t("li",[s._v("进入"),t("code",[s._v("RUNNABLE")]),s._v("状态\n"),t("ul",[t("li",[s._v("由于CPU的调度器轮询使该线程放弃执行")]),s._v(" "),t("li",[s._v("线程主动调用"),t("code",[s._v("yield")]),s._v("方法，放弃CPU执行权")])])])]),s._v(" "),t("blockquote",[t("p",[s._v("BLOCKED状态")])]),s._v(" "),t("p",[s._v("线程进入"),t("code",[s._v("BLOCKED")]),s._v("状态的原因上面已经描述。线程在"),t("code",[s._v("BLOCKED")]),s._v("状态中可以切换至如下几个状态：")]),s._v(" "),t("ul",[t("li",[s._v("直接进入"),t("code",[s._v("TERMINATED")]),s._v("状态。\n"),t("ul",[t("li",[s._v("调用JDK已经不推荐使用的"),t("code",[s._v("stop")]),s._v("方法或者意外死亡（JVM Crash）")])])]),s._v(" "),t("li",[s._v("进入"),t("code",[s._v("RUNNABLE")]),s._v("状态\n"),t("ul",[t("li",[s._v("线程阻塞的操作结束，比如读取完了想到的数据字节")]),s._v(" "),t("li",[s._v("线程完成了指定时间的"),t("code",[s._v("sleep")])]),s._v(" "),t("li",[s._v("Wait中的线程被其他线程"),t("code",[s._v("notify/notifyAll")]),s._v("唤醒")]),s._v(" "),t("li",[s._v("线程获取到了等待的锁资源")]),s._v(" "),t("li",[s._v("线程在阻塞的过程中被打断，比如其他线程调用了"),t("code",[s._v("interrupt")]),s._v("方法")])])])]),s._v(" "),t("blockquote",[t("p",[s._v("TERMINATED状态")])]),s._v(" "),t("p",[s._v("线程的最终状态，在该状态中线程将不会切换到其他状态，进入该状态就意味着整个生命周期的结束。使线程进入"),t("code",[s._v("TERMINATED")]),s._v("状态的情况有：")]),s._v(" "),t("ul",[t("li",[s._v("线程运行正常结束")]),s._v(" "),t("li",[s._v("线程运行出错意外结束")]),s._v(" "),t("li",[s._v("JVM Crash，导致所有的线程都结束")])]),s._v(" "),t("h3",{attrs:{id:"_1-4-剖析start-方法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-4-剖析start-方法"}},[s._v("#")]),s._v(" 1.4 剖析"),t("code",[s._v("start()")]),s._v("方法")]),s._v(" "),t("h4",{attrs:{id:"_1-4-1-thread-start"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-4-1-thread-start"}},[s._v("#")]),s._v(" 1.4.1 "),t("code",[s._v("Thread.start()")])]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/**\n* Causes this thread to begin execution; the Java Virtual Machine\n* calls the {@code run} method of this thread.\n* <p>\n* The result is that two threads are running concurrently: the\n* current thread (which returns from the call to the\n* {@code start} method) and the other thread (which executes its\n* {@code run} method).\n* <p>\n* It is never legal to start a thread more than once.\n* In particular, a thread may not be restarted once it has completed\n* execution.\n*\n* @throws     IllegalThreadStateException  if the thread was already started.\n* @see        #run()\n* @see        #stop()\n*/")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("synchronized")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("start")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v('/**\n    * This method is not invoked for the main method thread or "system"\n    * group threads created/set up by the VM. Any new functionality added\n    * to this method in the future may have to also be added to the VM.\n    *\n    * A zero status value corresponds to state "NEW".\n    */')]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("threadStatus "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("throw")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("IllegalThreadStateException")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* Notify the group that this thread is about to be started\n    * so that it can be added to the group's list of threads\n    * and the group's unstarted count can be decremented. */")]),s._v("\n    group"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("boolean")]),s._v(" started "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("try")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("start0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        started "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("finally")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("try")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("started"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n                group"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("threadStartFailed")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("catch")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Throwable")]),s._v(" ignore"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* do nothing. If start0 threw a Throwable then\n            it will be passed up the call stack */")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("native")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("start0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br"),t("span",{staticClass:"line-number"},[s._v("30")]),t("br"),t("span",{staticClass:"line-number"},[s._v("31")]),t("br"),t("span",{staticClass:"line-number"},[s._v("32")]),t("br"),t("span",{staticClass:"line-number"},[s._v("33")]),t("br"),t("span",{staticClass:"line-number"},[s._v("34")]),t("br"),t("span",{staticClass:"line-number"},[s._v("35")]),t("br"),t("span",{staticClass:"line-number"},[s._v("36")]),t("br"),t("span",{staticClass:"line-number"},[s._v("37")]),t("br"),t("span",{staticClass:"line-number"},[s._v("38")]),t("br"),t("span",{staticClass:"line-number"},[s._v("39")]),t("br"),t("span",{staticClass:"line-number"},[s._v("40")]),t("br"),t("span",{staticClass:"line-number"},[s._v("41")]),t("br"),t("span",{staticClass:"line-number"},[s._v("42")]),t("br"),t("span",{staticClass:"line-number"},[s._v("43")]),t("br"),t("span",{staticClass:"line-number"},[s._v("44")]),t("br"),t("span",{staticClass:"line-number"},[s._v("45")]),t("br"),t("span",{staticClass:"line-number"},[s._v("46")]),t("br"),t("span",{staticClass:"line-number"},[s._v("47")]),t("br"),t("span",{staticClass:"line-number"},[s._v("48")]),t("br"),t("span",{staticClass:"line-number"},[s._v("49")]),t("br"),t("span",{staticClass:"line-number"},[s._v("50")]),t("br")])]),t("p",[t("code",[s._v("start()")]),s._v("方法的源码足够简单，其实最核心的部分是"),t("code",[s._v("start0()")]),s._v("这个本地方法，也就是"),t("code",[s._v("JNI方法")]),s._v("。")]),s._v(" "),t("p",[s._v("而我们在利用"),t("code",[s._v("Thread")]),s._v("方法创建一个新线程的时候，希望处理的逻辑是通过重写"),t("code",[s._v("run()")]),s._v("方法传递的。正如方法注释中所述：“在开始执行这个这个线程时，JVM将会调用该线程的run方法”。")]),s._v(" "),t("p",[s._v("通过源码可以推断出：")]),s._v(" "),t("ul",[t("li",[t("code",[s._v("run()")]),s._v("方法被JNI方法"),t("code",[s._v("start0()")]),s._v("调用的")]),s._v(" "),t("li",[t("code",[s._v("Thread")]),s._v("被构造后的"),t("code",[s._v("NEW状态")]),s._v("，事实上对应的是"),t("code",[s._v("threadStatus=0")])]),s._v(" "),t("li",[s._v("不能重复启动"),t("code",[s._v("Thread")]),s._v("，否则就会出现"),t("code",[s._v("IllegalThreadStateException")]),s._v("异常")]),s._v(" "),t("li",[s._v("线程启动后将会被加入到一个"),t("code",[s._v("ThreadGroup")]),s._v("中")]),s._v(" "),t("li",[s._v("一个线程的生命周期结束，即到了"),t("code",[s._v("TERMINATED状态")]),s._v("之后，是不允许再次调用"),t("code",[s._v("start()")]),s._v("方法的，也就是"),t("code",[s._v("TERMINATED")]),s._v("无法回到"),t("code",[s._v("RUNNABLE")]),s._v("/"),t("code",[s._v("RUNNING")]),s._v("状态的原因")])]),s._v(" "),t("blockquote",[t("p",[s._v("以下两种情况都会抛出"),t("code",[s._v("IllegalThreadStateException")]),s._v("异常")])]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// condition 1")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Thread")]),s._v(" thread "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Thread")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Override")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("run")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("try")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("TimeUnit")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("SECONDS"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sleep")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("catch")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("InterruptedException")]),s._v(" e"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            e"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("printStackTrace")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 尝试启动两次")]),s._v("\nthread"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("start")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nthread"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("start")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// condition 2")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Thread")]),s._v(" thread "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Thread")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Override")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("run")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("try")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("TimeUnit")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("SECONDS"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sleep")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("catch")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("InterruptedException")]),s._v(" e"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            e"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("printStackTrace")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nthread"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("start")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("TimeUnit")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("SECONDS"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sleep")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 休眠保证thread结束生命周期")]),s._v("\n\nthread"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("start")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//企图重新激活该线程")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br"),t("span",{staticClass:"line-number"},[s._v("30")]),t("br"),t("span",{staticClass:"line-number"},[s._v("31")]),t("br")])]),t("p",[s._v("虽然抛出的是同一个异常，但是抛出原因却有本质上的区别")]),s._v(" "),t("ul",[t("li",[s._v("第一种情况是重复启动，只是第二次启动的请求是不允许的，但此时该线程处于运行状态的")]),s._v(" "),t("li",[s._v("第二种情况是企图重新激活，但此时没有此线程，因为其生命周期已经结束了")])]),s._v(" "),t("h4",{attrs:{id:"_1-4-2-thread-run"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-4-2-thread-run"}},[s._v("#")]),s._v(" 1.4.2 "),t("code",[s._v("Thread.run()")])]),s._v(" "),t("p",[s._v("通过上节分析，线程真正执行的逻辑是在"),t("code",[s._v("run()")]),s._v("方法中的，通常会讲该方法称为线程的"),t("code",[s._v("执行单元")]),s._v("。")]),s._v(" "),t("p",[s._v("其实"),t("code",[s._v("Thread")]),s._v("的"),t("code",[s._v("run")]),s._v("和"),t("code",[s._v("start")]),s._v("方法就是一个比较典型的模板设计模式：父类编写算法结构代码，子类负责实现逻辑细节。")]),s._v(" "),t("p",[t("code",[s._v("Thread.run()")]),s._v("方法代码如下。如果我们没有使用"),t("code",[s._v("Runnable")]),s._v("接口对其进行构造（构造的时候对"),t("code",[s._v("target")]),s._v("赋值)，则可以认为"),t("code",[s._v("Thread.run()")]),s._v("方法本身就是一个空的实现：")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* What will be run. */")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Runnable")]),s._v(" target"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/**\n* If this thread was constructed using a separate\n* {@code Runnable} run object, then that\n* {@code Runnable} object's {@code run} method is called;\n* otherwise, this method does nothing and returns.\n* <p>\n* Subclasses of {@code Thread} should override this method.\n*\n* @see     #start()\n* @see     #stop()\n* @see     #Thread(ThreadGroup, Runnable, String)\n*/")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Override")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("run")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("target "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("   "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 如果构造Thread时传递了Runnable，则会执行传递的run方法")]),s._v("\n        target"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("run")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 根据继承的构造顺序，如果构造的时候重写了Thread的run方法，那么再传递Runnable就无效了")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 因为会直接执行重写后的run方法，也就是新的执行单元。")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// Thread thread = new Thread(() -> System.out.println("Runnable.run")){')]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//      @Override")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//      public void run() {")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v('//          System.out.println("Thread.run");')]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//    }")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// };")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 只会输出 Thread.run")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br"),t("span",{staticClass:"line-number"},[s._v("30")]),t("br")])]),t("blockquote",[t("p",[s._v("⚠️注意：")]),s._v(" "),t("ol",[t("li",[s._v("创建线程的方法只有一种：构造"),t("code",[s._v("Thread")]),s._v("类")]),s._v(" "),t("li",[s._v("实现线程的执行单元的方法有两种：\n"),t("ol",[t("li",[s._v("重写"),t("code",[s._v("Thread.run()")]),s._v(" => "),t("code",[s._v("new Thread(){@Override public void run(){}}")])]),s._v(" "),t("li",[s._v("实现"),t("code",[s._v("Runnable.run()")]),s._v("，并将"),t("code",[s._v("Runnable")]),s._v("实例用作构造"),t("code",[s._v("Thread")]),s._v("的参数 => "),t("code",[s._v("new Thread(Runnable target)")])])])])])]),s._v(" "),t("h3",{attrs:{id:"_1-5-runnable接口"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-5-runnable接口"}},[s._v("#")]),s._v(" 1.5 Runnable接口")]),s._v(" "),t("h4",{attrs:{id:"_1-5-1-runnable的职责"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-5-1-runnable的职责"}},[s._v("#")]),s._v(" 1.5.1 "),t("code",[s._v("Runnable")]),s._v("的职责")]),s._v(" "),t("p",[s._v("从"),t("code",[s._v("Thread.run()")]),s._v("方法源码中可以看出，如果"),t("code",[s._v("Thread.run()")]),s._v("方法没有被重写，那么线程在执行时会判断"),t("code",[s._v("target")]),s._v("对象是否被赋值，即是否实现了"),t("code",[s._v("Runnable")]),s._v("接口并传入构造。如果没有被赋值，那么该线程的实现方法为空，换句话说就是这个线程在其生命周期内什么事情都没做就结束了。")]),s._v(" "),t("p",[t("code",[s._v("Runnable")]),s._v("接口非常简单，只定义了一个无参数无返回值的"),t("code",[s._v("run()")]),s._v("方法：")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("package")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("java"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("lang")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/**\n * The <code>Runnable</code> interface should be implemented by any\n * class whose instances are intended to be executed by a thread. The\n * class must define a method of no arguments called <code>run</code>.\n * <p>\n * This interface is designed to provide a common protocol for objects that\n * wish to execute code while they are active. For example,\n * <code>Runnable</code> is implemented by class <code>Thread</code>.\n * Being active simply means that a thread has been started and has not\n * yet been stopped.\n * <p>\n * In addition, <code>Runnable</code> provides the means for a class to be\n * active while not subclassing <code>Thread</code>. A class that implements\n * <code>Runnable</code> can run without subclassing <code>Thread</code>\n * by instantiating a <code>Thread</code> instance and passing itself in\n * as the target.  In most cases, the <code>Runnable</code> interface should\n * be used if you are only planning to override the <code>run()</code>\n * method and no other <code>Thread</code> methods.\n * This is important because classes should not be subclassed\n * unless the programmer intends on modifying or enhancing the fundamental\n * behavior of the class.\n *\n * @author  Arthur van Hoff\n * @see     java.lang.Thread\n * @see     java.util.concurrent.Callable\n * @since   1.0\n */")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@FunctionalInterface")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("interface")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Runnable")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/**\n     * When an object implementing interface <code>Runnable</code> is used\n     * to create a thread, starting the thread causes the object's\n     * <code>run</code> method to be called in that separately executing\n     * thread.\n     * <p>\n     * The general contract of the method <code>run</code> is that it may\n     * take any action whatsoever.\n     *\n     * @see     java.lang.Thread#run()\n     */")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("abstract")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("run")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br"),t("span",{staticClass:"line-number"},[s._v("30")]),t("br"),t("span",{staticClass:"line-number"},[s._v("31")]),t("br"),t("span",{staticClass:"line-number"},[s._v("32")]),t("br"),t("span",{staticClass:"line-number"},[s._v("33")]),t("br"),t("span",{staticClass:"line-number"},[s._v("34")]),t("br"),t("span",{staticClass:"line-number"},[s._v("35")]),t("br"),t("span",{staticClass:"line-number"},[s._v("36")]),t("br"),t("span",{staticClass:"line-number"},[s._v("37")]),t("br"),t("span",{staticClass:"line-number"},[s._v("38")]),t("br"),t("span",{staticClass:"line-number"},[s._v("39")]),t("br"),t("span",{staticClass:"line-number"},[s._v("40")]),t("br"),t("span",{staticClass:"line-number"},[s._v("41")]),t("br"),t("span",{staticClass:"line-number"},[s._v("42")]),t("br"),t("span",{staticClass:"line-number"},[s._v("43")]),t("br"),t("span",{staticClass:"line-number"},[s._v("44")]),t("br")])]),t("h4",{attrs:{id:"_1-5-2-策略模式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-5-2-策略模式"}},[s._v("#")]),s._v(" 1.5.2 策略模式")]),s._v(" "),t("p",[s._v("无论是"),t("code",[s._v("Runnable.run()")]),s._v("还是"),t("code",[s._v("Thread.run()")]),s._v("（实际上"),t("code",[s._v("Thread")]),s._v("类也实现了"),t("code",[s._v("Runnable")]),s._v("接口）都是想将线程的控制本身与业务逻辑解耦，达到职责分明、功能单一的原则，这一点与"),t("code",[s._v("GoF")]),s._v("设计模式中的"),t("code",[s._v("策略模式")]),s._v("很相似：")]),s._v(" "),t("ul",[t("li",[t("code",[s._v("Thread")]),s._v("类只负责管理线程本身")]),s._v(" "),t("li",[t("code",[s._v("Runnable.run()")]),s._v("则负责管理业务逻辑，将逻辑执行单元部分独立出来提高可扩展性")])]),s._v(" "),t("blockquote",[t("p",[s._v("⚠️注意")])]),s._v(" "),t("p",[s._v("重写"),t("code",[s._v("Thread.run()")]),s._v("和实现"),t("code",[s._v("Runnable.run()")]),s._v("还有一处不同，那就是"),t("code",[s._v("Thread.run()")]),s._v("是不能共享的，也就是说"),t("code",[s._v("A")]),s._v("线程无法将"),t("code",[s._v("B")]),s._v("线程的"),t("code",[s._v("run()")]),s._v("方法当作自己的执行单元。")]),s._v(" "),t("p",[s._v("而使用"),t("code",[s._v("Runnable")]),s._v("接口将执行单元抽离出来，可以使用同一个"),t("code",[s._v("Runnable")]),s._v("实例来构造多个不同的"),t("code",[s._v("Thread")]),s._v("实例，并且共享资源。")]),s._v(" "),t("hr"),s._v(" "),t("h2",{attrs:{id:"_2-深入理解thread构造函数"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-深入理解thread构造函数"}},[s._v("#")]),s._v(" 2. 深入理解"),t("code",[s._v("Thread")]),s._v("构造函数")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://gitee.com/WWWWWWWXQ/images/raw/master/JCP-M&A/2_1.png",alt:"截屏2021-07-26 下午2.00.55"}})]),s._v(" "),t("table",[t("thead",[t("tr",[t("th",[s._v("Constructor")]),s._v(" "),t("th",[s._v("Description")])])]),s._v(" "),t("tbody",[t("tr",[t("td",[t("code",[s._v("Thread()")])]),s._v(" "),t("td",[s._v("Allocates a new "),t("code",[s._v("Thread")]),s._v(" object.")])]),s._v(" "),t("tr",[t("td",[t("code",[s._v("Thread(Runnable target)")])]),s._v(" "),t("td",[s._v("Allocates a new "),t("code",[s._v("Thread")]),s._v(" object.")])]),s._v(" "),t("tr",[t("td",[t("code",[s._v("Thread(Runnable target, String name)")])]),s._v(" "),t("td",[s._v("Allocates a new "),t("code",[s._v("Thread")]),s._v(" object.")])]),s._v(" "),t("tr",[t("td",[t("code",[s._v("Thread(String name)")])]),s._v(" "),t("td",[s._v("Allocates a new "),t("code",[s._v("Thread")]),s._v(" object.")])]),s._v(" "),t("tr",[t("td",[t("code",[s._v("Thread(ThreadGroup group, Runnable target)")])]),s._v(" "),t("td",[s._v("Allocates a new "),t("code",[s._v("Thread")]),s._v(" object.")])]),s._v(" "),t("tr",[t("td",[t("code",[s._v("Thread(ThreadGroup group, Runnable target, String name)")])]),s._v(" "),t("td",[s._v("Allocates a new "),t("code",[s._v("Thread")]),s._v(" object so that it has "),t("code",[s._v("target")]),s._v(" as its run object, has the specified "),t("code",[s._v("name")]),s._v(" as its name, and belongs to the thread group referred to by "),t("code",[s._v("group")]),s._v(".")])]),s._v(" "),t("tr",[t("td",[t("code",[s._v("Thread(ThreadGroup group, Runnable target, String name, long stackSize)")])]),s._v(" "),t("td",[s._v("Allocates a new "),t("code",[s._v("Thread")]),s._v(" object so that it has "),t("code",[s._v("target")]),s._v(" as its run object, has the specified "),t("code",[s._v("name")]),s._v(" as its name, and belongs to the thread group referred to by "),t("code",[s._v("group")]),s._v(", and has the specified "),t("em",[s._v("stack size")]),s._v(".")])]),s._v(" "),t("tr",[t("td",[t("code",[s._v("Thread(ThreadGroup group, Runnable target, String name, long stackSize, boolean inheritThreadLocals)")])]),s._v(" "),t("td",[s._v("Allocates a new "),t("code",[s._v("Thread")]),s._v(" object so that it has "),t("code",[s._v("target")]),s._v(" as its run object, has the specified "),t("code",[s._v("name")]),s._v(" as its name, belongs to the thread group referred to by "),t("code",[s._v("group")]),s._v(", has the specified "),t("code",[s._v("stackSize")]),s._v(", and inherits initial values for "),t("a",{attrs:{href:"https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/InheritableThreadLocal.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("inheritable thread-local"),t("OutboundLink")],1),s._v(" variables if "),t("code",[s._v("inheritThreadLocals")]),s._v(" is "),t("code",[s._v("true")]),s._v(".")])]),s._v(" "),t("tr",[t("td",[t("code",[s._v("Thread(ThreadGroup group, String name)")])]),s._v(" "),t("td",[s._v("Allocates a new "),t("code",[s._v("Thread")]),s._v(" object.")])])])]),s._v(" "),t("h3",{attrs:{id:"_2-1-线程的命名"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-线程的命名"}},[s._v("#")]),s._v(" 2.1 线程的命名")]),s._v(" "),t("h4",{attrs:{id:"_2-1-1-线程的默认命名"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-1-线程的默认命名"}},[s._v("#")]),s._v(" 2.1.1 线程的默认命名")]),s._v(" "),t("p",[s._v("没有提供为线程命名的构造函数有：")]),s._v(" "),t("ul",[t("li",[t("code",[s._v("Thread()")])]),s._v(" "),t("li",[t("code",[s._v("Thread(Runnning target)")])]),s._v(" "),t("li",[t("code",[s._v("Thread(ThreadGroup group, Runnable target)")])])]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* For autonumbering anonymous threads. */")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" threadInitNumber"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("synchronized")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("nextThreadNum")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" threadInitNumber"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Thread")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Runnable")]),s._v(" target"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" target"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Thread-"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("nextThreadNum")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br")])]),t("p",[s._v("通过源码可以看出，如果没有为线程显示地指定一个名字，那么线程将会以“"),t("code",[s._v("Thread-")]),s._v("”作为前缀与一个自增数字进行组合，这个自增数字在整个JVM中将会不断自增")]),s._v(" "),t("h4",{attrs:{id:"_2-1-2-命名线程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-2-命名线程"}},[s._v("#")]),s._v(" 2.1.2 命名线程")]),s._v(" "),t("p",[s._v("提供了为线程命名的构造函数有")]),s._v(" "),t("ul",[t("li",[t("code",[s._v("Thread(Runnable target, String name)")])]),s._v(" "),t("li",[t("code",[s._v("Thread(String name)")])]),s._v(" "),t("li",[t("code",[s._v("Thread(ThreadGroup group, Runnable target, String name)")])]),s._v(" "),t("li",[t("code",[s._v("Thread(ThreadGroup group, Runnable target, String name, long stackSize)")])]),s._v(" "),t("li",[t("code",[s._v("Thread(ThreadGroup group, String name)")])])]),s._v(" "),t("h4",{attrs:{id:"_2-1-3-修改线程的名字"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-3-修改线程的名字"}},[s._v("#")]),s._v(" 2.1.3 修改线程的名字")]),s._v(" "),t("p",[s._v("不论你使用的是默认的函数命名规则，还是指定了一个特殊的名字，在线程启动之前还有一次机会可以对其进行修改。一旦线程启动，就无法修改其名字")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/**\n* Changes the name of this thread to be equal to the argument {@code name}.\n* <p>\n* First the {@code checkAccess} method of this thread is called\n* with no arguments. This may result in throwing a\n* {@code SecurityException}.\n*\n* @param      name   the new name for this thread.\n* @throws     SecurityException  if the current thread cannot modify this\n*             thread.\n* @see        #getName\n* @see        #checkAccess()\n*/")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("final")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("synchronized")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("setName")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  \t"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("checkAccess")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  \t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("name "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    \t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("throw")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("NullPointerException")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"name cannot be null"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  \t"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n  \t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("name "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  \t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("threadStatus "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//只有在NEW状态下才能修改")]),s._v("\n    \t"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("setNativeName")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  \t"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* Some private helper methods */")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("native")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("setNativeName")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br")])]),t("h3",{attrs:{id:"_2-2-线程的父子关系"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-线程的父子关系"}},[s._v("#")]),s._v(" 2.2 线程的父子关系")]),s._v(" "),t("p",[t("code",[s._v("Thread")]),s._v("的所有构造函数，最终都会调用最终的初始化方法，代码片段如下")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/**\n* Initializes a Thread.\n*\n* @param g the Thread group\n* @param target the object whose run() method gets called\n* @param name the name of the new Thread\n* @param stackSize the desired stack size for the new thread, or\n*        zero to indicate that this parameter is to be ignored.\n* @param acc the AccessControlContext to inherit, or\n*            AccessController.getContext() if null\n* @param inheritThreadLocals if {@code true}, inherit initial values for\n*            inheritable thread-locals from the constructing thread\n*/")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Thread")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ThreadGroup")]),s._v(" g"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Runnable")]),s._v(" target"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n               "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" stackSize"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("AccessControlContext")]),s._v(" acc"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n               "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("boolean")]),s._v(" inheritThreadLocals"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  \t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("name "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    \t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("throw")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("NullPointerException")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"name cannot be null"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  \t"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n  \t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("name "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n  \t"),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Thread")]),s._v(" parent "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("currentThread")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 将当前线程作为父线程")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br")])]),t("p",[s._v("上面代码中的"),t("code",[s._v("currentThread()")]),s._v("可以获取当前线程。在构造"),t("code",[s._v("Thread")]),s._v("实例时，新线程处于"),t("code",[s._v("NEW")]),s._v("状态，所以"),t("code",[s._v("currentThread()")]),s._v("只会获取到目前正在准备创建新线程的线程，可以得出：")]),s._v(" "),t("ul",[t("li",[s._v("一个线程的创建肯定是由另一个线程完成的")]),s._v(" "),t("li",[s._v("负责创建新线程的线程就是它的父线程")])]),s._v(" "),t("p",[s._v("任何一条人为创建的线程，其父线程都是由JVM创建的、"),t("code",[s._v("main")]),s._v("函数所在的线程")]),s._v(" "),t("h3",{attrs:{id:"_2-3-thread与threadgroup"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-thread与threadgroup"}},[s._v("#")]),s._v(" 2.3 "),t("code",[s._v("Thread")]),s._v("与"),t("code",[s._v("ThreadGroup")])]),s._v(" "),t("p",[s._v("在"),t("code",[s._v("Thread")]),s._v("的构造函数中，可以显示地指定线程的"),t("code",[s._v("Group")]),s._v("，也就是"),t("code",[s._v("ThreadGroup")])]),s._v(" "),t("p",[s._v("接上文构造函数的初始化方法:")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("SecurityManager")]),s._v(" security "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("getSecurityManager")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("g "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* Determine if it's an applet or not */")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* If there is a security manager, ask the security manager\n               what to do. */")]),s._v("\n  \t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("security "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    \tg "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" security"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("getThreadGroup")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  \t"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n  \t"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* If the security manager doesn't have a strong opinion\n               on the matter, use the parent thread group. */")]),s._v("\n  \t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("g "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    \tg "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" parent"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("getThreadGroup")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  \t"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br")])]),t("p",[s._v("如果在构造"),t("code",[s._v("Thread")]),s._v("的时候没有显示地指定一个"),t("code",[s._v("ThreadGroup")]),s._v("，那么子线程将会被加入父线程所在的线程组。"),t("code",[s._v("main")]),s._v("线程所在的"),t("code",[s._v("ThreadGroup")]),s._v("叫做"),t("code",[s._v("main")]),s._v("。")]),s._v(" "),t("p",[s._v("另外，在默认设置中，子线程除了和父线程同属一个线程组之外，它还会和父线程拥有同样的优先级、同样的"),t("code",[s._v("daemon")]),s._v("。")]),s._v(" "),t("h3",{attrs:{id:"_2-4-thread与jvm-stack"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-4-thread与jvm-stack"}},[s._v("#")]),s._v(" 2.4 "),t("code",[s._v("Thread")]),s._v("与"),t("code",[s._v("JVM Stack")])]),s._v(" "),t("h4",{attrs:{id:"_2-4-1-stacksize"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-4-1-stacksize"}},[s._v("#")]),s._v(" 2.4.1 "),t("code",[s._v("stackSize")])]),s._v(" "),t("p",[s._v("构造函数中还有一个"),t("code",[s._v("long")]),s._v("类型的特殊参数，"),t("code",[s._v("stackSize")]),s._v("。JDK官方文档描述如下：")]),s._v(" "),t("blockquote",[t("p",[t("em",[s._v("The stack size is the approximate number of bytes of address space that the virtual machine is to allocate for this thread's stack. The effect of the stackSize parameter, if any, is highly platform dependent.")])]),s._v(" "),t("p",[t("em",[s._v("On some platforms, specifying a higher value for the stackSize parameter may allow a thread to achieve greater recursion depth before throwing a StackOverflowError. Similarly, specifying a lower value may allow a greater number of threads to exist concurrently without throwing an OutOfMemoryError (or other internal error). The details of the relationship between the value of the stackSize parameter and the maximum recursion depth and concurrency level are platform-dependent. On some platforms, the value of the stackSize parameter may have no effect whatsoever.")])])]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/*\n* The requested stack size for this thread, or 0 if the creator did\n* not specify a stack size.  It is up to the VM to do whatever it\n* likes with this number; some VMs will ignore it.\n*/")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("final")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" stackSize"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br")])]),t("p",[s._v("一般情况下，创建线程的时候不会手动指定栈内存的地址空间字节数组，统一通过"),t("code",[s._v("XSS")]),s._v("参数进行设置即可，通过上面这段官网文档的描述，我们不难发现：")]),s._v(" "),t("ul",[t("li",[s._v("在有些平台下，可允许的递归次数与"),t("code",[s._v("stackSize")]),s._v("成正比，可创建的线程数则与"),t("code",[s._v("stackSize")]),s._v("成反比。当然，有些平台会忽略这个参数。")]),s._v(" "),t("li",[t("code",[s._v("stackSize")]),s._v("是依赖平台（platform-dependent）的，具体情况需要结合平台决定，不同操作系统、不同硬件下可能不一样。")]),s._v(" "),t("li",[s._v("不提供参数的话，默认为"),t("code",[s._v("0")])])]),s._v(" "),t("h4",{attrs:{id:"_2-4-2-影响因素"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-4-2-影响因素"}},[s._v("#")]),s._v(" 2.4.2 影响因素")]),s._v(" "),t("p",[s._v("在JVM的内存分布之中，程序计数器比较小，与线程创建、运行、销毁等关系不大。影响线程比较大的就是虚拟机栈内存了，而且栈内存划分的大小将直接决定一个JVM进程中可以创建的线程数。JVM的默认栈内存大小可以通过此命令查看:")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("java -XX:+PrintFlagsFinal -version "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" ThreadStackSize\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("鉴于虚拟机栈内存是线程私有的，也就是说每一个线程都会占有指定的内存大小，我们粗略地认为一个Java进程的内存大小为："),t("code",[s._v("堆内存 + 线程数量 * 栈内存")])]),s._v(" "),t("p",[s._v("在操作系统中，每一个进程的内存大小是有限制的，这个限制称为地址空间，比如32位Windows最大的地址空间约为2G。较为精准的计算线程数量的公式为（其中，"),t("code",[s._v("ReservedOsMemory")]),s._v("是系统保留内存，一般在"),t("code",[s._v("136MB")]),s._v("左右)：\n$$\n线程数量 = \\frac{最大地址空间MaxProcessMemory - JVM堆内存 - ReservedOsMemory}{ThreadStackSize(XSS)}\n$$\n当然，线程数量还与操作系统的一些内核配置有很大的关系，比如在Linux下，下面三个内核配置信息也可以决定线程数量的大小:")]),s._v(" "),t("ul",[t("li",[t("code",[s._v("/proc/sys/kernel/threads-max")])]),s._v(" "),t("li",[t("code",[s._v("/proc/sys/kernel/pid_max")])]),s._v(" "),t("li",[t("code",[s._v("/proc/sys/vm/max_map_count")])])])])}),[],!1,null,null,null);a.default=e.exports}}]);