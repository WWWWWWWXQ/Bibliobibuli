(window.webpackJsonp=window.webpackJsonp||[]).push([[31],{594:function(s,t,a){"use strict";a.r(t);var e=a(6),n=Object(e.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("p",[a("img",{attrs:{src:"https://gitee.com/WWWWWWWXQ/images/raw/master/Redis/redis.png",alt:"redis"}})]),s._v(" "),a("h2",{attrs:{id:"nosql数据库简介"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#nosql数据库简介"}},[s._v("#")]),s._v(" NoSQL数据库简介")]),s._v(" "),a("h3",{attrs:{id:"技术发展"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#技术发展"}},[s._v("#")]),s._v(" 技术发展")]),s._v(" "),a("blockquote",[a("p",[s._v("技术的分类")])]),s._v(" "),a("ol",[a("li",[s._v("解决功能性的问题：Java、Jsp、RDBMS、Tomcat、HTML、Linux、JDBC、SVN")]),s._v(" "),a("li",[s._v("解决扩展性的问题：Struts、Spring、SpringMVC、Hibernate、Mybatis")]),s._v(" "),a("li",[s._v("解决性能的问题：NoSQL、Java线程、Hadoop、Nginx、MQ、ElasticSearch")])]),s._v(" "),a("h4",{attrs:{id:"web1-0-时代"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#web1-0-时代"}},[s._v("#")]),s._v(" Web1.0  时代")]),s._v(" "),a("p",[s._v("Web1.0的时代，数据访问量很有限，用一夫当关的高性能的单点服务器可以解决大部分问题。")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/WWWWWWWXQ/images/raw/master/Redis/0_1.png",alt:"截屏2021-07-15 14.11.26"}})]),s._v(" "),a("h4",{attrs:{id:"web2-0-时代"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#web2-0-时代"}},[s._v("#")]),s._v(" Web2.0  时代")]),s._v(" "),a("p",[s._v("随着Web2.0的时代的到来，用户访问量大幅度提升，同时产生了量的用户数据。加上后来的智能移动设备的普及，所有的互联网平台都面临了巨大的性能挑战。")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/WWWWWWWXQ/images/raw/master/Redis/0.1_2.png",alt:"截屏2021-07-15 14.11.45"}})]),s._v(" "),a("h4",{attrs:{id:"解决-cpu及内存压力"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#解决-cpu及内存压力"}},[s._v("#")]),s._v(" 解决 CPU及内存压力")]),s._v(" "),a("h4",{attrs:{id:"解决-io压力"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#解决-io压力"}},[s._v("#")]),s._v(" "),a("img",{attrs:{src:"https://gitee.com/WWWWWWWXQ/images/raw/master/Redis/0.1_3.png",alt:"截屏2021-07-15 14.12.02"}}),s._v("解决 IO压力")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/WWWWWWWXQ/images/raw/master/Redis/0.1_4.png",alt:"截屏2021-07-15 14.13.13"}})]),s._v(" "),a("h3",{attrs:{id:"nosql-数据库"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#nosql-数据库"}},[s._v("#")]),s._v(" NoSQL  数据库")]),s._v(" "),a("h4",{attrs:{id:"nosql数据库概述"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#nosql数据库概述"}},[s._v("#")]),s._v(" NoSQL数据库概述")]),s._v(" "),a("p",[s._v("NoSQL(NoSQL =  Not Only SQL  )，意即“不仅仅是SQL”，泛指 非关系型的数据库 。")]),s._v(" "),a("p",[s._v("NoSQL 不依赖业务逻辑方式存储，而以简单的key-value模式存储。因此大大的增加了数据库的扩展能力。")]),s._v(" "),a("ul",[a("li",[s._v("不遵循SQL标准")]),s._v(" "),a("li",[s._v("不支持ACID")]),s._v(" "),a("li",[s._v("远超于SQL的性能")])]),s._v(" "),a("h4",{attrs:{id:"nosql适用场景"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#nosql适用场景"}},[s._v("#")]),s._v(" NoSQL适用场景")]),s._v(" "),a("ul",[a("li",[s._v("对数据高并发的读写")]),s._v(" "),a("li",[s._v("海量数据的读写")]),s._v(" "),a("li",[s._v("对数据高可扩展性的")])]),s._v(" "),a("h4",{attrs:{id:"nosql不适用场景"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#nosql不适用场景"}},[s._v("#")]),s._v(" NoSQL不适用场景")]),s._v(" "),a("ul",[a("li",[s._v("需要事务支持")]),s._v(" "),a("li",[s._v("基于sql的结构化查询存储，处理复杂的关系,需要即席查询。")]),s._v(" "),a("li",[s._v("（用不着sql的和用了sql也不行的情况，请考虑用NoSql）")])]),s._v(" "),a("blockquote",[a("h4",{attrs:{id:"memcached"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#memcached"}},[s._v("#")]),s._v(" Memcached")])]),s._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/WWWWWWWXQ/images/raw/master/Redis/Memcached.png",alt:"截屏2021-07-15 14.17.39"}})]),s._v(" "),a("ul",[a("li",[s._v("很早出现的NoSql数据库")]),s._v(" "),a("li",[s._v("数据都在内存中，一般不持久化")]),s._v(" "),a("li",[s._v("支持简单的key-value模式，支持类型单一")]),s._v(" "),a("li",[s._v("一般是作为缓存数据库辅助持久化的数据库")])]),s._v(" "),a("blockquote",[a("h4",{attrs:{id:"redis"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#redis"}},[s._v("#")]),s._v(" Redis")])]),s._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/WWWWWWWXQ/images/raw/master/Redis/Redis.png",alt:"截屏2021-07-15 14.25.50"}})]),s._v(" "),a("ul",[a("li",[s._v("几乎覆盖了Memcached的绝大部分功能")]),s._v(" "),a("li",[s._v("数据都在内存中，支持持久化，主要用作备份恢复")]),s._v(" "),a("li",[s._v("除了支持简单的key-value模式，还支持多种数据结构的存储，比如 list、set、hash、zset等。")]),s._v(" "),a("li",[s._v("一般是作为缓存数据库辅助持久化的数据库")])]),s._v(" "),a("blockquote",[a("h4",{attrs:{id:"mongodb"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mongodb"}},[s._v("#")]),s._v(" MongoDB")])]),s._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/WWWWWWWXQ/images/raw/master/Redis/mongoDB.png",alt:"截屏2021-07-15 14.24.40"}})]),s._v(" "),a("ul",[a("li",[a("p",[s._v("高性能、开源、模式自由(schema  free)的 文档型数据库")])]),s._v(" "),a("li",[a("p",[s._v("数据都在内存中， 如果内存不足，把不常用的数据保存到硬盘ü 虽然是key-value模式，但是对value（尤其是 json ）提供了丰富的查询功能")])]),s._v(" "),a("li",[a("p",[s._v("支持二进制数据及大型对象")])]),s._v(" "),a("li",[a("p",[s._v("可以根据数据的特点 替代RDBMS  ，成为独立的数据库。或者配合RDBMS，存储特定的数据。")])])]),s._v(" "),a("h3",{attrs:{id:"行列式存储数据库-大数据时代"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#行列式存储数据库-大数据时代"}},[s._v("#")]),s._v(" 行列式存储数据库（大数据时代）")]),s._v(" "),a("h4",{attrs:{id:"行式数据库"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#行式数据库"}},[s._v("#")]),s._v(" 行式数据库")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/WWWWWWWXQ/images/raw/master/Redis/0.3_1.png",alt:"image-20210715144750852"}})]),s._v(" "),a("h4",{attrs:{id:"列式数据库"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#列式数据库"}},[s._v("#")]),s._v(" 列式数据库")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/WWWWWWWXQ/images/raw/master/Redis/0.3_2.png",alt:"截屏2021-07-15 14.48.55"}})]),s._v(" "),a("blockquote",[a("h5",{attrs:{id:"hbase"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#hbase"}},[s._v("#")]),s._v(" Hbase")])]),s._v(" "),a("p",[a("img",{attrs:{src:"https://hbase.apache.org/images/hbase_logo_with_orca_large.png",alt:"Apache HBase"}})]),s._v(" "),a("p",[s._v("HBase是 Hadoop 项目中的数据库。它用于需要对大量的数据进行随机、实时的读写操作的场景中。")]),s._v(" "),a("p",[s._v("HBase的目标就是处理数据量 非常庞大 的表，可以用 普通的计算机 处理超过 10亿行数据 ，还可处理有数百万 列 元素的数据表。")]),s._v(" "),a("blockquote",[a("h5",{attrs:{id:"cassandra-kəˈsændrə"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cassandra-kəˈsændrə"}},[s._v("#")]),s._v(" Cassandra [kəˈsændrə]")])]),s._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/WWWWWWWXQ/images/raw/master/Redis/Cassandra.png",alt:"img"}})]),s._v(" "),a("p",[s._v("Apache Cassandra是一款免费的开源NoSQL数据库，其设计目的在于管理由大量商用服务器构建起来的庞大集群上的 海量数据集(数据量通常达到  PB  级别  ) 。在众多显著特性当中，Cassandra最为卓越的长处是对写入及读取操作进行规模调整，而且其不强调主集群的设计思路能够以相对直观的方式简化各集群的创建与扩展流程。")]),s._v(" "),a("blockquote",[a("p",[s._v("计算机存储单位 计算机存储单位一般用B，KB，MB，GB，TB，EB，ZB，YB，BB来表示，它们之间的关系是：")])]),s._v(" "),a("p",[s._v("位 bit (比特)(Binary Digits)：存放一位二进制数，即 0 或 1，最小的存储单位。字节 byte：8个二进制位为一个字节(B)，最常用的单位。1KB (Kilobyte 千字节)=1024B，1MB (Megabyte 兆字节 简称“兆”)=1024KB，1GB (Gigabyte 吉字节 又称“千兆”)=1024MB，1TB (Trillionbyte 万亿字节 太字节)=1024GB，其中1024=2^10 ( 2 的10次方)，1PB（Petabyte 千万亿字节 拍字节）=1024TB，1EB（Exabyte 百亿亿字节 艾字节）=1024PB，1ZB (Zettabyte 十万亿亿字节 泽字节)= 1024 EB,1YB (Jottabyte 一亿亿亿字节 尧字节)= 1024 ZB,1BB (Brontobyte 一千亿亿亿字节)= 1024 YB.注：“兆”为百万级数量单位。")]),s._v(" "),a("h3",{attrs:{id:"图关系型数据库"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#图关系型数据库"}},[s._v("#")]),s._v(" 图关系型数据库")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/WWWWWWWXQ/images/raw/master/Redis/neo4j.png",alt:"截屏2021-07-15 14.58.28"}})]),s._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/WWWWWWWXQ/images/raw/master/Redis/0.4_1.png",alt:"image-20210715145716913"}})]),s._v(" "),a("p",[s._v("主要应用：社会关系，公共交通网络，地图及网络拓谱"),a("code",[s._v("(n*(n-1)/2)")])]),s._v(" "),a("h3",{attrs:{id:"db-engines-数据库排名"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#db-engines-数据库排名"}},[s._v("#")]),s._v(" DB-Engines 数据库排名")]),s._v(" "),a("p",[a("a",{attrs:{href:"http://db-engines.com/en/ranking",target:"_blank",rel:"noopener noreferrer"}},[s._v(" http://db-engines.com/en/ranking "),a("OutboundLink")],1)]),s._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/WWWWWWWXQ/images/raw/master/Redis/0.5_1.png",alt:"image-20210715145914522"}})]),s._v(" "),a("hr"),s._v(" "),a("h2",{attrs:{id:"_1-redis-概述安装"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-redis-概述安装"}},[s._v("#")]),s._v(" 1. Redis  概述安装")]),s._v(" "),a("ul",[a("li",[s._v("Redis是一个开源的key-value存储系统。")]),s._v(" "),a("li",[s._v("和Memcached类似，它支持存储的value类型相对更多，包括string(字符串)、list(链表)、set(集合)、zset(sorted set --有序集合)和hash（哈希类型）。")]),s._v(" "),a("li",[s._v("这些数据类型都支持push/pop、add/remove及取交集并集和差集及更丰富的操作，而且这些操作都是原子性的。")]),s._v(" "),a("li",[s._v("在此基础上，Redis支持各种不同方式的排序。")]),s._v(" "),a("li",[s._v("与memcached一样，为了保证效率，数据都是缓存在内存中。")]),s._v(" "),a("li",[s._v("区别的是Redis会周期性的把更新的数据写入磁盘或者把修改操作写入追加的记录文件。")]),s._v(" "),a("li",[s._v("并且在此基础上实现了master-slave(主从)同步。")])]),s._v(" "),a("h3",{attrs:{id:"_1-1-应用场景"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-应用场景"}},[s._v("#")]),s._v(" 1.1 应用场景")]),s._v(" "),a("blockquote",[a("h5",{attrs:{id:"配合关系型数据库做高速缓存"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#配合关系型数据库做高速缓存"}},[s._v("#")]),s._v(" 配合关系型数据库做高速缓存")])]),s._v(" "),a("ul",[a("li",[s._v("高频次，热门访问的数据，降低数据库IO")]),s._v(" "),a("li",[s._v("分布式架构，做session共享")])]),s._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/WWWWWWWXQ/images/raw/master/Redis/1.1_1.png",alt:"截屏2021-07-15 15.36.10"}})]),s._v(" "),a("blockquote",[a("h5",{attrs:{id:"多样的数据结构存储持久化数据"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#多样的数据结构存储持久化数据"}},[s._v("#")]),s._v(" 多样的数据结构存储持久化数据")])]),s._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/WWWWWWWXQ/images/raw/master/Redis/1.1_2.png",alt:"image-20210715153643014"}})]),s._v(" "),a("h3",{attrs:{id:"_1-2-redis-安装"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-redis-安装"}},[s._v("#")]),s._v(" 1.2 Redis  安装")]),s._v(" "),a("table",[a("thead",[a("tr",[a("th",[s._v("Redis官方网站")]),s._v(" "),a("th",[s._v("Redis中文官方网站")])])]),s._v(" "),a("tbody",[a("tr",[a("td",[s._v("http://redis.io")]),s._v(" "),a("td",[s._v("http://redis.cn/")])])])]),s._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/WWWWWWWXQ/images/raw/master/Redis/1.2_1.png",alt:"截屏2021-07-15 15.37.46"}})]),s._v(" "),a("h4",{attrs:{id:"安装版本"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#安装版本"}},[s._v("#")]),s._v(" 安装版本")]),s._v(" "),a("ul",[a("li",[s._v("6.2.1 for Linux（redis-6.2.1.tar.gz）")]),s._v(" "),a("li",[s._v("不用考虑在windows环境下对Redis的支持")])]),s._v(" "),a("h4",{attrs:{id:"安装步骤"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#安装步骤"}},[s._v("#")]),s._v(" 安装步骤")]),s._v(" "),a("ol",{attrs:{start:"0"}},[a("li",[s._v("准备工作：下载安装最新版的g  cc  编译器")])]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 安装C 语言的编译环境")]),s._v("\nyum   ins  tall centos-release-scl scl-utils-build \nyum "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" -y devtoolset-8-toolchain \nscl "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("enable")]),s._v(" devtoolset-8 "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("bash")]),s._v(" \n\n测试   gcc  版本  \ngcc   --  version \n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("ol",[a("li",[a("p",[s._v("下载redis-6.2.1.tar.gz放/opt目录")])]),s._v(" "),a("li",[a("p",[s._v("解压命令：tar -zxvf redis-6.2.1.tar.gz")])]),s._v(" "),a("li",[a("p",[s._v("解压完成后进入目录：cd redis-6.2.1")])]),s._v(" "),a("li",[a("p",[s._v("在redis-6.2.1目录下再次执行make命令（只是编译好）")])]),s._v(" "),a("li",[a("p",[s._v("如果没有准备好C语言编译环境，make 会报错: "),a("code",[s._v("Jemalloc/jemalloc.h：没有那个文件")])])]),s._v(" "),a("li",[a("p",[s._v("解决方案：运行make distclean")])]),s._v(" "),a("li",[a("p",[s._v("在redis-6.2.1目录下再次执行make命令（只是编译好）")])]),s._v(" "),a("li",[a("p",[s._v("跳过  make test 继续执行: make install")])])]),s._v(" "),a("h4",{attrs:{id:"安装目录"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#安装目录"}},[s._v("#")]),s._v(" 安装目录")]),s._v(" "),a("blockquote",[a("p",[s._v("/ usr/local/bin")])]),s._v(" "),a("p",[s._v("查看默认安装目录：")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("redis-benchmark:性能测试工具，可以在自己本子运行，看看自己本子性能如何")])]),s._v(" "),a("li",[a("p",[s._v("redis-check-aof：修复有问题的AOF文件，rdb和aof后面讲")])]),s._v(" "),a("li",[a("p",[s._v("redis-check-dump：修复有问题的dump.rdb文件")])]),s._v(" "),a("li",[a("p",[s._v("redis-sentinel：Redis集群使用")])]),s._v(" "),a("li",[a("p",[s._v("redis-server：Redis服务器启动命令")])]),s._v(" "),a("li",[a("p",[s._v("redis-cli：客户端，操作入口")])])]),s._v(" "),a("h4",{attrs:{id:"前台启动-不推荐"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#前台启动-不推荐"}},[s._v("#")]),s._v(" 前台启动（不推荐）")]),s._v(" "),a("p",[s._v("前台启动，命令行窗口不能关闭，否则服务器停止")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/WWWWWWWXQ/images/raw/master/Redis/1.2_2.png",alt:"image-20210715161948205"}})]),s._v(" "),a("h4",{attrs:{id:"后台启动-推荐"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#后台启动-推荐"}},[s._v("#")]),s._v(" 后台启动（  推荐  ）")]),s._v(" "),a("blockquote",[a("p",[s._v("备份  redis.  conf")])]),s._v(" "),a("p",[s._v("拷贝一份redis.conf到其他目录")]),s._v(" "),a("p",[s._v("cp  /opt/redis-3.2.5/redis.conf  /myredis")]),s._v(" "),a("blockquote",[a("p",[s._v("后台启动设置  daemonize no  改成  yes")])]),s._v(" "),a("p",[s._v("修改redis.conf(128行)文件将里面的daemonize no 改成 yes，让服务在后台启动")]),s._v(" "),a("blockquote",[a("p",[s._v("Redis  启动")])]),s._v(" "),a("p",[s._v("redis-server/myredis/redis.conf")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("ps")]),s._v(" -ef "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" redis\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("blockquote",[a("p",[s._v("用客户端访问：  redis-cli")])]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 单端口")]),s._v("\nredis-cli\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 多个端口")]),s._v("\nredis-cli   -p "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("6379")]),s._v(" \n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("blockquote",[a("p",[s._v("测试验证：   ping")])]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:637"),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("9")]),s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("ping")]),s._v("\nPONG\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("blockquote",[a("p",[s._v("Redis  关闭")])]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 单实例关闭")]),s._v("\nredis-cli "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("shutdown")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 也可以进入终端后再关闭")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:637"),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("9")]),s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("shutdown")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 多实例关闭，指定端口关闭")]),s._v("\nredis-cli -p "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("6379")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("shutdown")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])]),a("h3",{attrs:{id:"_1-3-redis介绍相关知识"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-redis介绍相关知识"}},[s._v("#")]),s._v(" 1.3 Redis介绍相关知识")]),s._v(" "),a("blockquote",[a("p",[s._v("默认16个数据库")])]),s._v(" "),a("p",[s._v("类似数组下标从0开始，初始默认使用0号库使用命令"),a("code",[s._v("select <dbid>")]),s._v("来切换数据库。如: "),a("code",[s._v("select 8")]),s._v(" 统一密码管理，所有库同样密码。")]),s._v(" "),a("ul",[a("li",[a("p",[a("code",[s._v("dbsize")]),s._v("查看当前数据库的key的数量")])]),s._v(" "),a("li",[a("p",[a("code",[s._v("flushdb")]),s._v("清空当前库flushall通杀全部库")])])]),s._v(" "),a("blockquote",[a("p",[s._v("Redis是单线程+多路IO复用技术")])]),s._v(" "),a("p",[s._v("多路复用是指使用一个线程来检查多个文件描述符（Socket）的就绪状态，比如调用select和poll函数，传入多个文件描述符，如果有一个文件描述符就绪，则返回，否则阻塞直到超时。得到就绪状态后进行真正的操作可以在同一个线程里执行，也可以启动线程执行（比如使用线程池）")]),s._v(" "),a("p",[s._v("串行  vs  多线程+锁（memcached） vs  单线程+多路IO复用(Redis)")]),s._v(" "),a("p",[s._v("（与Memcache三点不同: 支持多数据类型，支持持久化，单线程+多路IO复用）")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/WWWWWWWXQ/images/raw/master/Redis/1.3_1.png",alt:"image-20210715162204072"}})]),s._v(" "),a("hr"),s._v(" "),a("h2",{attrs:{id:"_2-常用五大数据类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-常用五大数据类型"}},[s._v("#")]),s._v(" 2. 常用五大数据类型")]),s._v(" "),a("p",[s._v("哪里去获得redis常见数据类型操作命令http://www.redis.cn/commands.html")]),s._v(" "),a("blockquote",[a("ol",{attrs:{start:"0"}},[a("li",[a("strong",[s._v("键 key")])]),s._v(" "),a("li",[a("strong",[s._v("字符串 string")])]),s._v(" "),a("li",[a("strong",[s._v("列表 list")])]),s._v(" "),a("li",[a("strong",[s._v("集合 set")])]),s._v(" "),a("li",[a("strong",[s._v("哈希 hash")])]),s._v(" "),a("li",[a("strong",[s._v("有序集合 Zset")])])])]),s._v(" "),a("h3",{attrs:{id:"_2-0-键-key-redis的最小单位"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-0-键-key-redis的最小单位"}},[s._v("#")]),s._v(" 2.0 键  key -  Redis的最小单位")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("keys *       "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看当前库所有key   (匹配：keys *1)")]),s._v("\nexists key   "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 判断某个key是否存在")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("type")]),s._v(" key     "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看你的key是什么类型")]),s._v("\ndel key      "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 删除指定的key数据")]),s._v("\nunlink key   "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 根据value选择非阻塞删除")]),s._v("\n             "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 仅将keys从keyspace元数据中删除，真正的删除会在后续异步操作。")]),s._v("\nexpire key "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 10秒钟：为给定的key设置过期时间")]),s._v("\nttl key      "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看还有多少秒过期，-1表示永不过期，-2表示已过期")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v("       "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 命令切换数据库")]),s._v("\ndbsize       "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看当前数据库的key的数量")]),s._v("\nflushdb      "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 清空当前库")]),s._v("\nflushall     "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 通杀全部库")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br")])]),a("h3",{attrs:{id:"_2-1-字符串-string"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-字符串-string"}},[s._v("#")]),s._v(" 2.1  字符串  String")]),s._v(" "),a("p",[s._v("String是Redis最基本的类型，可以理解成与Memcached一模一样的类型，一个key对应一个value。")]),s._v(" "),a("p",[s._v("String类型是二进制安全的。意味着Redis的string可以包含任何数据。比如jpg图片或者序列化的对象。")]),s._v(" "),a("p",[s._v("String类型是Redis最基本的数据类型，一个Redis中字符串value最多可以是512M")]),s._v(" "),a("h4",{attrs:{id:"常用命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#常用命令"}},[s._v("#")]),s._v(" 常用命令")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("set")]),s._v(" key value "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("EX seconds"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("PX milliseconds"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("KEEPTTL"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("NX"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("XX"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n\t\t\t\t\t\t\t\t "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 添加/更改键值对")]),s._v("\n\t\t\t\t\t\t\t\t "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# NX：当数据库中key不存在时，可以将key-value添加数据库")]),s._v("\n\t\t\t\t\t\t\t\t "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# XX：当数据库中key存在时，可以将key-value添加数据库")]),s._v("\n\t\t\t\t\t\t\t\t "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# EX：key的超时秒数")]),s._v("\n\t\t\t\t\t\t\t\t "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# PX：key的超时毫秒数，与EX互斥")]),s._v("\n\t\t\t\t\t\t\t\t \nget key          "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查询对应键值")]),s._v("\nappend key value "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 将给定的<value> 追加到原值的末尾")]),s._v("\nstrlen key       "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 获得值的长度")]),s._v("\nsetnx key value  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 只有在 key 不存在时才设置 key 的值")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 只能对数字值操作")]),s._v("\nincr key         "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 将 key 中储存的数字值增1，如果为空，新增值为1")]),s._v("\ndecr key         "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 将 key 中储存的数字值减1，如果为空，新增值为-1")]),s._v("\nincrby / decrby key 步长 "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 将 key 中储存的数字值增减。自定义步长。")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br")])]),a("blockquote",[a("p",[a("strong",[s._v("原子性")])])]),s._v(" "),a("p",[s._v("所谓 原子 操作是指不会被线程调度机制打断的操作；这种操作一旦开始，就一直运行到结束，中间不会有任何 context switch （切换到另一个线程）。")]),s._v(" "),a("ol",[a("li",[s._v('在单线程中， 能够在单条指令中完成的操作都可以认为是"原子操作"，因为中断只能发生于指令之间。')]),s._v(" "),a("li",[s._v("在多线程中，不能被其它进程（线程）打断的操作就叫原子操作。Redis单命令的原子性主要得益于Redis的单线程。")])]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("mset key value "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("key value "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v("."),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 同时设置一个或多个 key-value对  ")]),s._v("\nmget key "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("key "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v("."),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" \t\t\t\t\t\t   "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 同时获取一个或多个 value  ")]),s._v("\nmsetnx key value "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("key value "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v("."),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 同时设置一个或多个 key-value 对，当且仅当所有给定 key 都不存在。")]),s._v("\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 原子性，有一个失败则都失败 ")]),s._v("\n\ngetrange key start end \t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 获得值的范围，类似java中的substring，左闭右闭 ")]),s._v("\nsetrange key offset value "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 用 value 覆写 key 所储存的字符串值")]),s._v("\n\t\t\t\t\t\t\t\t\t\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 从 offset 开始(索引从0开始)。")]),s._v("\nsetex key seconds value   "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 设置键值的同时，设置过期时间，单位秒。")]),s._v("\ngetset key value \t\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 以新换旧，设置了新值同时获得旧值。")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br")])]),a("h4",{attrs:{id:"数据结构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据结构"}},[s._v("#")]),s._v(" 数据结构")]),s._v(" "),a("p",[s._v("String的数据结构为"),a("code",[s._v("简单动态字符串")]),s._v("(Simple Dynamic String，缩写SDS)。是可以修改的字符串，内部结构实现上类似于Java的ArrayList，采用预分配冗余空间的方式来减少内存的频繁分配.")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/WWWWWWWXQ/images/raw/master/Redis/2.1_1.png",alt:"image-20210716153849299"}})]),s._v(" "),a("p",[s._v("如图中所示，内部为当前字符串实际分配的空间capacity一般要高于实际字符串长度len。当字符串长度小于1M时，扩容都是加倍现有的空间，如果超过1M，扩容时一次只会多扩1M的空间。需要注意的是字符串最大长度为512M。")]),s._v(" "),a("h3",{attrs:{id:"_2-2-列表-list"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-列表-list"}},[s._v("#")]),s._v(" 2.2 列表  List")]),s._v(" "),a("blockquote",[a("p",[s._v("单键多值")])]),s._v(" "),a("p",[s._v("Redis 列表是简单的字符串列表，按照插入顺序排序。你可以添加一个元素到列表的头部（左边）或者尾部（右边）。")]),s._v(" "),a("p",[s._v("它的底层实际是个双向链表，对两端的操作性能很高，通过索引下标的操作中间的节点性能会较差。")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/WWWWWWWXQ/images/raw/master/Redis/2.2_1.png",alt:"image-20210721113349394"}})]),s._v(" "),a("h4",{attrs:{id:"常用命令-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#常用命令-2"}},[s._v("#")]),s._v(" 常用命令")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("lpush/rpush key element "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("element "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v("."),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 从左边/右边插入一个或多个值。")]),s._v("\nlpop/rpop key  \t\t\t\t\t\t\t \t\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 从左边/右边吐出一个值。值在键在，值光键亡。")]),s._v("\nrpoplpush "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("source")]),s._v(" destination \t\t\t\t  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 列表右边吐出一个值，插到source列表左边。")]),s._v("\nlrange key start stop                 "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 按照索引下标获得元素(从左到右)")]),s._v("\nlrange mylist "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" -1                    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 0:左边第一个，-1:右边第一个，（0 -1表示获取所有）")]),s._v("\n\nlindex key index                      "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 按照索引下标获得元素(从左到右)")]),s._v("\nllen key\t\t\t\t\t\t\t \t\t\t\t\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 获得列表长度 ")]),s._v("\nlinsert key BEFORE"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("AFTER pivot value  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 在 pivot 的前/后插入 value 插入值")]),s._v("\nlrem key count element                "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 从左边删除n个 element (从左到右)")]),s._v("\nlset key index element\t\t\t\t\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 将列表key下标为 index 的值替换成 element")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br")])]),a("h4",{attrs:{id:"数据结构-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据结构-2"}},[s._v("#")]),s._v(" 数据结构")]),s._v(" "),a("p",[s._v("List的数据结构为"),a("code",[s._v("快速链表")]),s._v("quickList。")]),s._v(" "),a("p",[s._v("首先在列表元素较少的情况下会使用一块连续的内存存储，这个结构是ziplist，也即是压缩列表。")]),s._v(" "),a("p",[s._v("它将所有的元素紧挨着一起存储，分配的是一块连续的内存。当数据量比较多的时候才会改成quicklist。")]),s._v(" "),a("p",[s._v("因为普通的链表需要的附加指针空间太大，会比较浪费空间。比如这个列表里存的只是int类型的数据，结构上还需要两个额外的指针prev和next。")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/WWWWWWWXQ/images/raw/master/Redis/2.2_2.png",alt:"image-20210716160850305"}})]),s._v(" "),a("p",[s._v("Redis将链表和ziplist结合起来组成了quicklist。也就是将多个ziplist使用双向指针串起来使用。这样既满足了快速的插入删除性能，又不会出现太大的空间冗余。")]),s._v(" "),a("h3",{attrs:{id:"_2-3-集合-set"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-集合-set"}},[s._v("#")]),s._v(" 2.3 集合  Set")]),s._v(" "),a("p",[s._v("Redis set对外提供的功能与list类似是一个列表的功能，特殊之处在于set是可以 自动排重 的，当你需要存储一个列表数据，又不希望出现重复数据时，set是一个很好的选择，并且set提供了判断某个成员是否在一个set集合内的重要接口，这个也是list所不能提供的。")]),s._v(" "),a("p",[s._v("Redis的Set是string类型的无序集合。它底层其实是一个value为null的hash表，所以添加，删除，查找的 复杂度都是O(1) 。")]),s._v(" "),a("p",[s._v("一个算法，随着数据的增加，执行时间的长短，如果是O(1)，数据增加，查找数据的时间不变")]),s._v(" "),a("h4",{attrs:{id:"常用命令-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#常用命令-3"}},[s._v("#")]),s._v(" 常用命令")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("sadd key member "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("member "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v("."),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("     "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 将一个或多个 member 元素加入到集合 key 中")]),s._v("\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 已经存在的 member 元素将被忽略")]),s._v("\nsmembers key                     "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 取出该集合的所有值。")]),s._v("\nsismember key member             "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 判断集合<key>是否为含有该<value>值，有1，没有0")]),s._v("\nscard key \t\t\t\t\t\t\t\t\t\t\t "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 返回该集合的元素个数。")]),s._v("\nsrem key member "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("member "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v("."),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("     "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 删除集合中的某个元素。")]),s._v("\nspop key "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("count"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("  \t             "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 随机从该集合中吐出一个值。 ")]),s._v("\nsrandmember key "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("count"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("          "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 随机从该集合中取出n个值。不会从集合中删除 。")]),s._v("\nsmove "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("source")]),s._v(" destination member  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 把集合中一个值从一个集合移动到另一个集合")]),s._v("\nsinter key "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("key "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v("."),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\t\t\t\t\t\t "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 返回两个集合的交集元素。")]),s._v("\nsunion key "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("key "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v("."),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\t\t\t\t\t\t "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 返回两个集合的并集元素。")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sdiff")]),s._v(" key "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("key "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v("."),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("              "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 返回两个集合的 差集 元素(key1中的，不包含key2中的)")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br")])]),a("h4",{attrs:{id:"数据结构-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据结构-3"}},[s._v("#")]),s._v(" 数据结构")]),s._v(" "),a("p",[s._v("Set数据结构是dict字典，字典是用哈希表实现的。")]),s._v(" "),a("p",[s._v("Java中HashSet的内部实现使用的是HashMap，只不过所有的value都指向同一个Object对象。Redis的set结构也是一样，它的内部也使用hash结构，所有的value都指向同一个内部值。")]),s._v(" "),a("h3",{attrs:{id:"_2-4-哈希-hash"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-4-哈希-hash"}},[s._v("#")]),s._v(" 2.4 哈希  Hash")]),s._v(" "),a("blockquote",[a("p",[s._v("Redis hash 是一个键值对集合。")])]),s._v(" "),a("p",[s._v("Redis hash是一个string类型的field和value的映射表，hash特别适合用于存储对象。类似Java里面的Map<String,Object>")]),s._v(" "),a("p",[s._v("用户ID为查找的key，存储的value用户对象包含姓名，年龄，生日等信息，如果用普通的key/value结构来存储，主要有以下2种存储方式：")]),s._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"center"}},[s._v("方法")]),s._v(" "),a("th",{staticStyle:{"text-align":"center"}},[s._v("效果")])])]),s._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"center"}},[a("img",{attrs:{src:"https://gitee.com/WWWWWWWXQ/images/raw/master/Redis/2.4_1.png",alt:"截屏2021-07-16 16.57.59"}}),a("br"),s._v("user : {id = 1, name = zhangsan, age = 20}")]),s._v(" "),a("td",{staticStyle:{"text-align":"center"}},[s._v("每次修改用户的某个属性需要先反序列化改好后再序列化回去。"),a("br"),s._v("开销较大。")])]),s._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[a("img",{attrs:{src:"https://gitee.com/WWWWWWWXQ/images/raw/master/Redis/2.4_2.png",alt:"img"}}),a("br"),s._v("user:id  1"),a("br"),s._v("user:name zhangsan"),a("br"),s._v("user:age 20")]),s._v(" "),a("td",{staticStyle:{"text-align":"center"}},[s._v("用户ID数据冗余")])])])]),s._v(" "),a("p",[s._v("通过Redis hash类型就可以实现第3种存储方式：通过 key(用户  ID) + field(  属性标签  )   就可以操作对应属性数据了，既不需要重复存储数据，也不会带来序列化和并发修改控制的问题")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/WWWWWWWXQ/images/raw/master/Redis/2.4_3.png",alt:"截屏2021-07-16 16.59.34"}})]),s._v(" "),a("h4",{attrs:{id:"常用命令-4"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#常用命令-4"}},[s._v("#")]),s._v(" 常用命令")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("hset key field value "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("field value "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v("."),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 给<key>集合中的  <field>键赋值<value>")]),s._v("\nhget key field                           "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 集合<field>取出 value ")]),s._v("\nhmset key field value "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("field value "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v("."),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 批量设置hash的值")]),s._v("\nhexists key field                        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看哈希表 key 中，给定域 field 是否存在, 1=true")]),s._v("\nhkeys key                                "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 列出该hash集合的所有field")]),s._v("\nhvals key                                "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 列出该hash集合的所有value")]),s._v("\nhincrby key field increment              "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 为哈希表 key 中的域 field 的值加上增量increment")]),s._v("\nhsetnx key field value                   "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 将哈希表 key 中的域 field 的值设置为 value，当且仅当域 field 不存在时")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])]),a("h4",{attrs:{id:"数据结构-4"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据结构-4"}},[s._v("#")]),s._v(" 数据结构")]),s._v(" "),a("p",[s._v("Hash类型对应的数据结构是两种：ziplist（压缩列表），hashtable（哈希表）。当field-value长度较短且个数较少时，使用ziplist，否则使用hashtable。")]),s._v(" "),a("h3",{attrs:{id:"_2-5-有序集合-zset-sorted-set"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-5-有序集合-zset-sorted-set"}},[s._v("#")]),s._v(" 2.5 有序集合  Zset(sorted set)")]),s._v(" "),a("p",[s._v("Redis有序集合zset与普通集合set非常相似，是一个没有重复元素的字符串集合。")]),s._v(" "),a("p",[s._v("不同之处是有序集合的每个成员都关联了一个 评分（score)，这个评分（score）被用来按照从最低分到最高分的方式排序集合中的成员。集合的成员是唯一的，但是评分可以是重复了 。")]),s._v(" "),a("p",[s._v("因为元素是有序的, 所以你也可以很快的根据评分（score）或者次序（position）来获取一个范围的元素。")]),s._v(" "),a("p",[s._v("访问有序集合的中间元素也是非常快的,因此你能够使用有序集合作为一个没有重复成员的智能列表。")]),s._v(" "),a("h4",{attrs:{id:"常用命令-5"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#常用命令-5"}},[s._v("#")]),s._v(" 常用命令")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 将一个或多个 member 元素及其 score 值加入到有序集 key 当中。")]),s._v("\nzadd key "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("NX"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("XX"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("CH"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("INCR"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" score member "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("score member "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v("."),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" \n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 返回有序集key中，下标在[start,stop]之间的元素, 带WITHSCORES，可以让分数一起和值返回到结果集。")]),s._v("\nzrange key start stop "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("WITHSCORES"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("  \n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 返回有序集 key 中，所有 score 值介于 min 和 max 之间(包括等于 min 或 max )的成员。")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 有序集成员按 score 值递增(从小到大)次序排列。 ")]),s._v("\nzrangebyscore key min max "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("WITHSCORES"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("LIMIT offset count"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" \n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 同上，改为从大到小排列。 ")]),s._v("\nzrevrangebyscore key max min "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("WITHSCORES"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("LIMIT offset count"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" \n\nzincrby key increment member           "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 为元素的score加上增量")]),s._v("\nzrem key member "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("member "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v("."),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("           "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 删除该集合下，指定值的元素 ")]),s._v("\nzcount key min max                     "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 统计该集合，分数区间内的元素个数 ")]),s._v("\nzrank key member                       "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 返回该值在集合中的排名，从0开始。")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br")])]),a("p",[s._v("案例：如何利用zset实现一个文章访问量的排行榜？")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/WWWWWWWXQ/images/raw/master/Redis/2.5_1.png",alt:"截屏2021-07-19 15.12.03"}})]),s._v(" "),a("h4",{attrs:{id:"数据结构-5"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据结构-5"}},[s._v("#")]),s._v(" 数据结构")]),s._v(" "),a("p",[s._v("SortedSet(zset)是Redis提供的一个非常特别的数据结构，一方面它等价于Java的数据结构Map<String, Double>，可以给每一个元素value赋予一个权重score，另一方面它又类似于TreeSet，内部的元素会按照权重score进行排序，可以得到每个元素的名次，还可以通过score的范围来获取元素的列表。")]),s._v(" "),a("p",[s._v("zset底层使用了两个数据结构")]),s._v(" "),a("ol",[a("li",[s._v("hash，hash的作用就是关联元素value和权重score，保障元素value的唯一性，可以通过元素value找到相应的score值。")]),s._v(" "),a("li",[s._v("跳跃表，跳跃表的目的在于给元素value排序，根据score的范围获取元素列表。")])]),s._v(" "),a("h5",{attrs:{id:"跳跃表-跳表"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#跳跃表-跳表"}},[s._v("#")]),s._v(" "),a("strong",[s._v("跳跃表（跳表）")])]),s._v(" "),a("p",[s._v("有序集合在生活中比较常见，例如根据成绩对学生排名，根据得分对玩家排名等。对于有序集合的底层实现，可以用数组、平衡树、链表等。数组不便元素的插入、删除；平衡树或红黑树虽然效率高但结构复杂；链表查询需要遍历所有效率低。Redis采用的是跳跃表。跳跃表效率堪比红黑树，实现远比红黑树简单。")]),s._v(" "),a("blockquote",[a("p",[s._v("案例")])]),s._v(" "),a("p",[s._v("对比有序链表和跳跃表，从链表中查询出51")]),s._v(" "),a("p",[a("em",[a("strong",[s._v("有序链表：")])])]),s._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/WWWWWWWXQ/images/raw/master/Redis/2.5_2.png",alt:"image-20210719151352022"}})]),s._v(" "),a("p",[s._v("要查找值为51的元素，需要从第一个元素开始依次查找、比较才能找到。共需要6次比较。")]),s._v(" "),a("p",[a("em",[a("strong",[s._v("跳跃表：")])])]),s._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/WWWWWWWXQ/images/raw/master/Redis/2.5_3.png",alt:"image-20210719151356429"}})]),s._v(" "),a("p",[s._v("从第2层开始，1节点比51节点小，向后比较。21节点比51节点小，继续向后比较，后面就是NULL了，所以从21节点向下到第1层")]),s._v(" "),a("p",[s._v("在第1层，41节点比51节点小，继续向后，61节点比51节点大，所以从41向下")]),s._v(" "),a("p",[s._v("在第0层，51节点为要查找的节点，节点被找到，共查找4次。")]),s._v(" "),a("p",[s._v("从此可以看出跳跃表比有序链表效率要高")]),s._v(" "),a("hr"),s._v(" "),a("h2",{attrs:{id:"_3-redis配置文件介绍"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-redis配置文件介绍"}},[s._v("#")]),s._v(" 3. Redis配置文件介绍")]),s._v(" "),a("blockquote",[a("p",[s._v("自定义目录："),a("code",[s._v("/usr/local/etc")])])]),s._v(" "),a("h3",{attrs:{id:"_3-1-units-单位"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-units-单位"}},[s._v("#")]),s._v(" 3.1 Units  单位")]),s._v(" "),a("p",[s._v("配置大小单位,开头定义了一些基本的度量单位，只支持bytes，不支持bit，·大小写不敏感")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Redis configuration file example.")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Note that in order to read the configuration file, Redis must be")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# started with the file path as first argument:")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ./redis-server /path/to/redis.conf")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Note on units: when memory size is needed, it is possible to specify")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# it in the usual form of 1k 5GB 4M and so forth:")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 1k => 1000 bytes")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 1kb => 1024 bytes")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 1m => 1000000 bytes")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 1mb => 1024*1024 bytes")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 1g => 1000000000 bytes")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 1gb => 1024*1024*1024 bytes")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# units are case insensitive so 1GB 1Gb 1gB are all the same.")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br")])]),a("h3",{attrs:{id:"_3-2-includes-包含"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-includes-包含"}},[s._v("#")]),s._v(" 3.2 INCLUDES  包含")]),s._v(" "),a("p",[s._v("类似jsp中的include，多实例的情况可以把公用的配置文件提取出来")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("################################## INCLUDES ###################################")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Include one or more other config files here.  This is useful if you")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# have a standard template that goes to all Redis servers but also need")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# to customize a few per-server settings.  Include files can include")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# other files, so use this wisely.")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# Note that option "include" won\'t be rewritten by command "CONFIG REWRITE"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# from admin or Redis Sentinel. Since Redis always uses the last processed")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# line as value of a configuration directive, you'd better put includes")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# at the beginning of this file to avoid overwriting config change at runtime.")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# If instead you are interested in using includes to override configuration")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# options, it is better to use include as the last line.")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# include /path/to/local.conf")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# include /path/to/other.conf")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br")])]),a("h3",{attrs:{id:"_3-3-网络相关配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-网络相关配置"}},[s._v("#")]),s._v(" 3.3 网络相关配置")]),s._v(" "),a("h4",{attrs:{id:"_3-3-1-bind"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-1-bind"}},[s._v("#")]),s._v(" 3.3.1 bind")]),s._v(" "),a("p",[s._v("默认情况bind=127.0.0.1只能接受本机的访问请求，不写的情况下，无限制接受任何ip地址的访问")]),s._v(" "),a("p",[s._v("生产环境肯定要写你应用服务器的地址；服务器是需要远程访问的，所以需要将其注释掉")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("################################## NETWORK #####################################")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# By default, if no "bind" configuration directive is specified, Redis listens')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# for connections from all available network interfaces on the host machine.")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# It is possible to listen to just one or multiple selected interfaces using")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# the "bind" configuration directive, followed by one or more IP addresses.')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Examples:")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# bind 192.168.1.100 10.0.0.1")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# bind 127.0.0.1 ::1")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ~~~ WARNING ~~~ If the computer running Redis is directly exposed to the")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# internet, binding to all the interfaces is dangerous and will expose the")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# instance to everybody on the internet. So by default we uncomment the")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# following bind directive, that will force Redis to listen only on the")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# IPv4 loopback interface address (this means Redis will only be able to")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# accept client connections from the same host that it is running on).")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# IF YOU ARE SURE YOU WANT YOUR INSTANCE TO LISTEN TO ALL THE INTERFACES")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# JUST COMMENT OUT THE FOLLOWING LINE.")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("bind")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1 ::1\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br")])]),a("h4",{attrs:{id:"_3-3-2-protected-mode"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-2-protected-mode"}},[s._v("#")]),s._v(" 3.3.2 protected-mode")]),s._v(" "),a("p",[s._v("如果开启了protected-mode，那么在没有设定bind ip且没有设密码的情况下，Redis只允许接受本机的响应")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Protected mode is a layer of security protection, in order to avoid that")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Redis instances left open on the internet are accessed and exploited.")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# When protected mode is on and if:")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 1) The server is not binding explicitly to a set of addresses using the")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('#    "bind" directive.')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 2) No password is configured.")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# The server only accepts connections from clients connecting from the")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# IPv4 and IPv6 loopback addresses 127.0.0.1 and ::1, and from Unix domain")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# sockets.")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# By default protected mode is enabled. You should disable it only if")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# you are sure you want clients from other hosts to connect to Redis")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# even if no authentication is configured, nor a specific set of interfaces")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# are explicitly listed using the "bind" directive.')]),s._v("\nprotected-mode "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("yes")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br")])]),a("h4",{attrs:{id:"_3-3-3-port"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-3-port"}},[s._v("#")]),s._v(" 3.3.3 port")]),s._v(" "),a("p",[s._v("端口号，默认 6379")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Accept connections on the specified port, default is 6379 (IANA #815344).")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# If port 0 is specified Redis will not listen on a TCP socket.")]),s._v("\nport "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("6379")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("h4",{attrs:{id:"_3-3-4-tcp-backlog"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-4-tcp-backlog"}},[s._v("#")]),s._v(" 3.3.4 tcp-backlog")]),s._v(" "),a("p",[s._v("设置tcp的backlog，backlog其实是一个连接队列，backlog队列总和=未完成三次握手队列 + 已经完成三次握手队列。")]),s._v(" "),a("p",[s._v("在高并发环境下你需要一个高backlog值来避免慢客户端连接问题。")]),s._v(" "),a("p",[s._v("注意Linux内核会将这个值减小到/proc/sys/net/core/somaxconn的值（128），所以需要确认增大/proc/sys/net/core/somaxconn和/proc/sys/net/ipv4/tcp_max_syn_backlog（128）两个值来达到想要的效果")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# TCP listen() backlog.")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# In high requests-per-second environments you need a high backlog in order")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# to avoid slow clients connection issues. Note that the Linux kernel")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# will silently truncate it to the value of /proc/sys/net/core/somaxconn so")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# make sure to raise both the value of somaxconn and tcp_max_syn_backlog")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# in order to get the desired effect.")]),s._v("\ntcp-backlog "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("511")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])]),a("h4",{attrs:{id:"_3-3-5-timeout"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-5-timeout"}},[s._v("#")]),s._v(" 3.3.5 timeout")]),s._v(" "),a("p",[s._v("一个空闲的客户端维持多少秒会关闭，0表示关闭该功能。即永不关闭。")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Close the connection after a client is idle for N seconds (0 to disable)")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("timeout")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("h4",{attrs:{id:"_3-3-6-tcp-keepalive"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-6-tcp-keepalive"}},[s._v("#")]),s._v(" 3.3.6 tcp-keepalive")]),s._v(" "),a("p",[s._v("对访问客户端的一种心跳检测，每个n秒检测一次。")]),s._v(" "),a("p",[s._v("单位为秒，如果设置为0，则不会进行Keepalive检测，建议设置成60")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# TCP keepalive.")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# If non-zero, use SO_KEEPALIVE to send TCP ACKs to clients in absence")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# of communication. This is useful for two reasons:")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 1) Detect dead peers.")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 2) Force network equipment in the middle to consider the connection to be")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#    alive.")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# On Linux, the specified value (in seconds) is the period used to send ACKs.")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Note that to close the connection the double of the time is needed.")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# On other kernels the period depends on the kernel configuration.")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# A reasonable value for this option is 300 seconds, which is the new")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Redis default starting with Redis 3.2.1.")]),s._v("\ntcp-keepalive "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("300")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br")])]),a("h3",{attrs:{id:"_3-4-general-通用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-4-general-通用"}},[s._v("#")]),s._v(" 3.4 GENERAL  通用")]),s._v(" "),a("h4",{attrs:{id:"_3-4-1-daemonize"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-4-1-daemonize"}},[s._v("#")]),s._v(" 3.4.1 daemonize")]),s._v(" "),a("p",[s._v("是否为后台进程，设置为yes")]),s._v(" "),a("p",[s._v("守护进程，后台启动")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# By default Redis does not run as a daemon. Use 'yes' if you need it.")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Note that Redis will write a pid file in /usr/local/var/run/redis.pid when daemonized.")]),s._v("\ndaemonize no\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("h4",{attrs:{id:"_3-4-2-pidfile"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-4-2-pidfile"}},[s._v("#")]),s._v(" 3.4.2 pidfile")]),s._v(" "),a("p",[s._v("存放pid文件的位置，每个实例会产生一个不同的pid文件")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# If a pid file is specified, Redis writes it where specified at startup")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# and removes it at exit.")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# When the server runs non daemonized, no pid file is created if none is")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# specified in the configuration. When the server is daemonized, the pid file")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# is used even if not specified, defaulting to "/usr/local/var/run/redis.pid".')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Creating a pid file is best effort: if Redis is not able to create it")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# nothing bad happens, the server will start and run normally.")]),s._v("\npidfile /var/run/redis_6379.pid\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br")])]),a("h4",{attrs:{id:"_3-4-3-loglevel"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-4-3-loglevel"}},[s._v("#")]),s._v(" 3.4.3 loglevel")]),s._v(" "),a("p",[s._v("指定日志记录级别，Redis总共支持四个级别：debug、verbose、notice、warning，默认为 notice")]),s._v(" "),a("p",[s._v("四个级别根据使用阶段来选择，生产环境选择notice 或者warning")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Specify the server verbosity level.")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# This can be one of:")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# debug (a lot of information, useful for development/testing)")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# verbose (many rarely useful info, but not a mess like the debug level)")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# notice (moderately verbose, what you want in production probably)")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# warning (only very important / critical messages are logged)")]),s._v("\nloglevel notice\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("h4",{attrs:{id:"_3-4-4-logfile"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-4-4-logfile"}},[s._v("#")]),s._v(" 3.4.4 logfile")]),s._v(" "),a("p",[s._v("日志文件名称")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Specify the log file name. Also the empty string can be used to force")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Redis to log on the standard output. Note that if you use standard")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# output for logging but daemonize, logs will be sent to /dev/null")]),s._v("\nlogfile "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('""')]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("h4",{attrs:{id:"_3-4-5-databases-16"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-4-5-databases-16"}},[s._v("#")]),s._v(" 3.4.5 databases 16")]),s._v(" "),a("p",[s._v("设定库的数量 默认16，默认数据库为0，可以使用"),a("code",[s._v("SELECT <dbid>")]),s._v("命令在连接上指定数据库id")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Set the number of databases. The default database is DB 0, you can select")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# a different one on a per-connection basis using SELECT <dbid> where")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# dbid is a number between 0 and 'databases'-1")]),s._v("\ndatabases "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("16")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("h3",{attrs:{id:"_3-5-security-安全"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-5-security-安全"}},[s._v("#")]),s._v(" 3.5 SECURITY  安全")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("################################## SECURITY ###################################")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Warning: since Redis is pretty fast, an outside user can try up to")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 1 million passwords per second against a modern box. This means that you")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# should use very strong passwords, otherwise they will be very easy to break.")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Note that because the password is really a shared secret between the client")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# and the server, and should not be memorized by any human, the password")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# can be easily a long string from /dev/urandom or whatever, so by using a")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# long and unguessable password no brute force attack will be possible.")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("h4",{attrs:{id:"_3-5-1-设置密码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-5-1-设置密码"}},[s._v("#")]),s._v(" 3.5.1 设置密码")]),s._v(" "),a("p",[s._v("访问密码的查看、设置和取消")]),s._v(" "),a("p",[s._v("在命令中设置密码，只是临时的。重启redis服务器，密码就还原了。")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# IMPORTANT NOTE: starting with Redis 6 "requirepass" is just a compatibility')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# layer on top of the new ACL system. The option effect will be just setting")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# the password for the default user. Clients will still authenticate using")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# AUTH <password> as usually, or more explicitly with AUTH default <password>")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# if they follow the new protocol: both will work.")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# requirepass foobared")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("p",[s._v("永久设置，需要再配置文件中进行设置。")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/WWWWWWWXQ/images/raw/master/Redis/3.5_1.png",alt:"image-20210719155509684"}})]),s._v(" "),a("h3",{attrs:{id:"_3-6-limits-限制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-6-limits-限制"}},[s._v("#")]),s._v(" 3.6 LIMITS  限制")]),s._v(" "),a("h4",{attrs:{id:"_3-6-1-maxclients"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-6-1-maxclients"}},[s._v("#")]),s._v(" 3.6.1 maxclients")]),s._v(" "),a("ul",[a("li",[s._v("设置"),a("code",[s._v("redis")]),s._v("同时可以与多少个客户端进行连接。")]),s._v(" "),a("li",[s._v("默认情况下为10000个客户端。")]),s._v(" "),a("li",[s._v("如果达到了此限制，redis则会拒绝新的连接请求，并且向这些连接请求方发出“max number of clients reached”以作回应。")])]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("################################### CLIENTS ####################################")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Set the max number of connected clients at the same time. By default")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# this limit is set to 10000 clients, however if the Redis server is not")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# able to configure the process file limit to allow for the specified limit")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# the max number of allowed clients is set to the current file limit")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# minus 32 (as Redis reserves a few file descriptors for internal uses).")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Once the limit is reached Redis will close all the new connections sending")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# an error 'max number of clients reached'.")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# IMPORTANT: When Redis Cluster is used, the max number of connections is also")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# shared with the cluster bus: every node in the cluster will use two")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# connections, one incoming and another outgoing. It is important to size the")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# limit accordingly in case of very large clusters.")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# maxclients 10000")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br")])]),a("h4",{attrs:{id:"_3-6-2-maxmemory"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-6-2-maxmemory"}},[s._v("#")]),s._v(" 3.6.2 maxmemory")]),s._v(" "),a("ul",[a("li",[s._v("建议 必须设置 ，否则，将内存占满，造成服务器宕机")]),s._v(" "),a("li",[s._v("设置redis可以使用的内存量。一旦到达内存使用上限，redis将会试图移除内部数据，移除规则可以通过maxmemory-policy来指定。")]),s._v(" "),a("li",[s._v("如果redis无法根据移除规则来移除内存中的数据，或者设置了“不允许移除”，那么redis则会针对那些需要申请内存的指令返回错误信息，比如SET、LPUSH等。")]),s._v(" "),a("li",[s._v("但是对于无内存申请的指令，仍然会正常响应，比如GET等。如果你的redis是主redis（说明你的redis有从redis），那么在设置内存使用上限时，需要在系统中留出一些内存空间给同步队列缓存，只有在你设置的是“不移除”的情况下，才不用考虑这个因素。")])]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("############################## MEMORY MANAGEMENT ################################")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Set a memory usage limit to the specified amount of bytes.")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# When the memory limit is reached Redis will try to remove keys")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# according to the eviction policy selected (see maxmemory-policy).")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# If Redis can't remove keys according to the policy, or if the policy is")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# set to 'noeviction', Redis will start to reply with errors to commands")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# that would use more memory, like SET, LPUSH, and so on, and will continue")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# to reply to read-only commands like GET.")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# This option is usually useful when using Redis as an LRU or LFU cache, or to")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# set a hard memory limit for an instance (using the 'noeviction' policy).")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# WARNING: If you have replicas attached to an instance with maxmemory on,")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# the size of the output buffers needed to feed the replicas are subtracted")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# from the used memory count, so that network problems / resyncs will")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# not trigger a loop where keys are evicted, and in turn the output")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# buffer of replicas is full with DELs of keys evicted triggering the deletion")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# of more keys, and so forth until the database is completely emptied.")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# In short... if you have replicas attached it is suggested that you set a lower")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# limit for maxmemory so that there is some free RAM on the system for replica")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# output buffers (but this is not needed if the policy is 'noeviction').")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# maxmemory <bytes>")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br")])]),a("h4",{attrs:{id:"_3-6-3-maxmemory-policy"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-6-3-maxmemory-policy"}},[s._v("#")]),s._v(" 3.6.3 maxmemory-policy")]),s._v(" "),a("ul",[a("li",[a("code",[s._v("volatile-lru")]),s._v("：使用LRU算法移除key，只对设置了过期时间的键；（最近最少使用）")]),s._v(" "),a("li",[a("code",[s._v("allkeys-lru")]),s._v("：在所有集合key中，使用LRU算法移除key")]),s._v(" "),a("li",[a("code",[s._v("volatile-random")]),s._v("：在过期集合中移除随机的key，只对设置了过期时间的键")]),s._v(" "),a("li",[a("code",[s._v("allkeys-random")]),s._v("：在所有集合key中，移除随机的key")]),s._v(" "),a("li",[a("code",[s._v("volatile-ttl")]),s._v("：移除那些TTL值最小的key，即那些最近要过期的key")]),s._v(" "),a("li",[a("code",[s._v("noeviction")]),s._v("：不进行移除。针对写操作，只是返回错误信息")])]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# MAXMEMORY POLICY: how Redis will select what to remove when maxmemory")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# is reached. You can select one from the following behaviors:")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# volatile-lru -> Evict using approximated LRU, only keys with an expire set.")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# allkeys-lru -> Evict any key using approximated LRU.")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# volatile-lfu -> Evict using approximated LFU, only keys with an expire set.")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# allkeys-lfu -> Evict any key using approximated LFU.")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# volatile-random -> Remove a random key having an expire set.")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# allkeys-random -> Remove a random key, any key.")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# volatile-ttl -> Remove the key with the nearest expire time (minor TTL)")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# noeviction -> Don't evict anything, just return an error on write operations.")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# LRU means Least Recently Used")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# LFU means Least Frequently Used")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Both LRU, LFU and volatile-ttl are implemented using approximated")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# randomized algorithms.")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Note: with any of the above policies, Redis will return an error on write")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#       operations, when there are no suitable keys for eviction.")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#       At the date of writing these commands are: set setnx setex append")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#       incr decr rpush lpush rpushx lpushx linsert lset rpoplpush sadd")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#       sinter sinterstore sunion sunionstore sdiff sdiffstore zadd zincrby")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#       zunionstore zinterstore hset hsetnx hmset hincrby incrby decrby")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#       getset mset msetnx exec sort")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# The default is:")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# maxmemory-policy noeviction")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br")])]),a("h4",{attrs:{id:"_3-6-4-maxmemory-samples"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-6-4-maxmemory-samples"}},[s._v("#")]),s._v(" 3.6.4 maxmemory-samples")]),s._v(" "),a("ul",[a("li",[s._v("设置样本数量，LRU算法和最小TTL算法都并非是精确的算法，而是估算值，所以你可以设置样本的大小，redis默认会检查这么多个key并选择其中LRU的那个。")]),s._v(" "),a("li",[s._v("一般设置3到7的数字，数值越小样本越不准确，但性能消耗越小。")])]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# LRU, LFU and minimal TTL algorithms are not precise algorithms but approximated")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# algorithms (in order to save memory), so you can tune it for speed or")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# accuracy. By default Redis will check five keys and pick the one that was")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# used least recently, you can change the sample size using the following")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# configuration directive.")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# The default of 5 produces good enough results. 10 Approximates very closely")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# true LRU but costs more CPU. 3 is faster but not very accurate.")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# maxmemory-samples 5")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br")])]),a("hr"),s._v(" "),a("h2",{attrs:{id:"_4-redis的发布和订阅"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-redis的发布和订阅"}},[s._v("#")]),s._v(" 4. Redis的发布和订阅")]),s._v(" "),a("p",[s._v("Redis 发布订阅 (pub/sub) 是一种消息通信模式：发送者 (pub) 发送消息，订阅者 (sub) 接收消息。")]),s._v(" "),a("p",[s._v("Redis 客户端可以订阅任意数量的频道。")]),s._v(" "),a("h3",{attrs:{id:"_4-1-redis的发布和订阅"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-redis的发布和订阅"}},[s._v("#")]),s._v(" 4.1 Redis的发布和订阅")]),s._v(" "),a("ol",[a("li",[s._v("客户端可以订阅频道如下图")])]),s._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/WWWWWWWXQ/images/raw/master/Redis/4.1_1.png",alt:"image-20210719160315110"}})]),s._v(" "),a("ol",{attrs:{start:"2"}},[a("li",[s._v("当给这个频道发布消息后，消息就会发送给订阅的客户端")])]),s._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/WWWWWWWXQ/images/raw/master/Redis/4.1_2.png",alt:"image-20210719160324561"}})]),s._v(" "),a("h3",{attrs:{id:"_4-2-发布订阅命令行实现"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-发布订阅命令行实现"}},[s._v("#")]),s._v(" 4.2 发布订阅命令行实现")]),s._v(" "),a("ol",[a("li",[s._v("打开一个客户端订阅"),a("code",[s._v("channel1")])])]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:637"),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("9")]),s._v(">")]),s._v(" subscribe channel1\nReading messages"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(". "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("press Ctrl-C to quit"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"subscribe"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"channel1"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("integer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("ol",{attrs:{start:"2"}},[a("li",[s._v("打开另一个客户端，给"),a("code",[s._v("channel1")]),s._v("发布消息"),a("code",[s._v("helloworld")])])]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:637"),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("9")]),s._v(">")]),s._v(" publish channel1 helloworld\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("integer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 返回的1是订阅者数量")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("ol",{attrs:{start:"3"}},[a("li",[s._v("打开第一个客户端可以看到发送的消息")])]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:637"),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("9")]),s._v(">")]),s._v(" subscribe channel1\nReading messages"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(". "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("press Ctrl-C to quit"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"subscribe"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"channel1"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("integer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"message"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"channel1"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"helloworld"')]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])]),a("p",[s._v("注：发布的消息没有持久化，如果在订阅的客户端收不到"),a("code",[s._v("helloworld")]),s._v("，只能收到订阅后发布的消息")]),s._v(" "),a("hr"),s._v(" "),a("h2",{attrs:{id:"_5-redis6-新数据类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-redis6-新数据类型"}},[s._v("#")]),s._v(" 5. Redis6 新数据类型")]),s._v(" "),a("h3",{attrs:{id:"_5-1-bitmaps"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-bitmaps"}},[s._v("#")]),s._v(" 5.1 Bitmaps")]),s._v(" "),a("p",[s._v("现代计算机用"),a("code",[s._v("二进制（位）")]),s._v("作为信息的基础单位，"),a("code",[s._v("1个字节")]),s._v("等于"),a("code",[s._v("8位")]),s._v("， 例如"),a("code",[s._v("abc")]),s._v("字符串是由"),a("code",[s._v("3")]),s._v("个字节组成， 但实际在计算机存储时将其用二进制表示， "),a("code",[s._v("abc")]),s._v("分别对应的ASCII码分别是"),a("code",[s._v("97")]),s._v("、 "),a("code",[s._v("98")]),s._v("、"),a("code",[s._v("99")]),s._v("， 对应的二进制分别是"),a("code",[s._v("01100001")]),s._v("、"),a("code",[s._v("01100010")]),s._v("和"),a("code",[s._v("01100011")]),s._v("，如下图：")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/WWWWWWWXQ/images/raw/master/Redis/5.1_1.png",alt:"image-20210719160931191"}})]),s._v(" "),a("p",[s._v("合理地使用操作位能够有效地提高内存使用率和开发效率。")]),s._v(" "),a("p",[s._v("Redis提供了"),a("code",[s._v("Bitmaps")]),s._v("可以实现对位的操作：")]),s._v(" "),a("ol",[a("li",[a("code",[s._v("Bitmaps")]),s._v("本身不是一种数据类型， 实际上它就是字符串， 但是它可以对字符串的位进行操作。")]),s._v(" "),a("li",[a("code",[s._v("Bitmaps")]),s._v("单独提供了一套命令， 所以在Redis中使用"),a("code",[s._v("Bitmaps")]),s._v("和使用字符串的方法不太相同。 可以把"),a("code",[s._v("Bitmaps")]),s._v("想象成一个以位为单位的数组， 数组的每个单元只能存储"),a("code",[s._v("0")]),s._v("和"),a("code",[s._v("1")]),s._v("， 数组的下标在"),a("code",[s._v("Bitmaps")]),s._v("中叫做"),a("code",[s._v("偏移量")]),s._v("。")])]),s._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/WWWWWWWXQ/images/raw/master/Redis/5.1_2.png",alt:"image-20210719161015911"}})]),s._v(" "),a("h4",{attrs:{id:"commands"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#commands"}},[s._v("#")]),s._v(" Commands")]),s._v(" "),a("h5",{attrs:{id:"_1-setbit"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-setbit"}},[s._v("#")]),s._v(" 1. setbit")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("setbit key offset value   "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 设置Bitmaps中某个偏移量的值（0或1）")]),s._v("\n                          "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# offset:偏移量从0开始")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("blockquote",[a("p",[s._v("e.g.1")])]),s._v(" "),a("p",[s._v("每个独立用户是否访问过网站存放在"),a("code",[s._v("Bitmaps")]),s._v("中， 将访问的用户记做"),a("code",[s._v("1")]),s._v("， 没有访问的用户记做"),a("code",[s._v("0")]),s._v("， 用"),a("code",[s._v("偏移量")]),s._v("作为用户的id。")]),s._v(" "),a("p",[s._v("设置键的第"),a("code",[s._v("offset")]),s._v("个位的值（从0算起） ， 假设现在有20个用户，"),a("code",[s._v("userid=1")]),s._v("，"),a("code",[s._v("6")]),s._v("， "),a("code",[s._v("11")]),s._v("， "),a("code",[s._v("15")]),s._v("， "),a("code",[s._v("19")]),s._v("的用户对网站进行了访问， 那么当前"),a("code",[s._v("Bitmaps")]),s._v("初始化结果如图")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/WWWWWWWXQ/images/raw/master/Redis/5.1_3.png",alt:"image-20210719161403225"}})]),s._v(" "),a("p",[a("code",[s._v("unique:users:20201106")]),s._v("代表"),a("code",[s._v("2020-11-06")]),s._v("这天的独立访问用户的"),a("code",[s._v("Bitmaps")])]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:637"),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("9")]),s._v(">")]),s._v(" setbit unique:users:20201106 "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("integer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:637"),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("9")]),s._v(">")]),s._v(" setbit unique:users:20201106 "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("6")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("integer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:637"),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("9")]),s._v(">")]),s._v(" setbit unique:users:20201106 "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("11")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("integer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:637"),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("9")]),s._v(">")]),s._v(" setbit unique:users:20201106 "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("15")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("integer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:637"),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("9")]),s._v(">")]),s._v(" setbit unique:users:20201106 "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("19")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("integer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br")])]),a("blockquote",[a("p",[s._v("⚠️注意")])]),s._v(" "),a("p",[s._v("很多应用的用户id以一个指定数字（例如"),a("code",[s._v("10000")]),s._v("） 开头， 直接将用户id和Bitmaps的偏移量对应势必会造成一定的浪费， 通常的做法是每次做setbit操作时将用户id减去这个指定数字。")]),s._v(" "),a("p",[s._v("在第一次初始化"),a("code",[s._v("Bitmaps")]),s._v("时， 假如偏移量非常大， 那么整个初始化过程执行会比较慢， 可能会造成Redis的阻塞。")]),s._v(" "),a("h5",{attrs:{id:"_2-getbit"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-getbit"}},[s._v("#")]),s._v(" 2. getbit")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("getbit key offset "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 获取Bitmaps中某个偏移量的值")]),s._v("\n                  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 获取键的第offset位的值（从0开始算）")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("blockquote",[a("p",[s._v("e.g.2")])]),s._v(" "),a("p",[s._v("获取"),a("code",[s._v("id=8")]),s._v("的用户是否在"),a("code",[s._v("2020-11-06")]),s._v("这天访问过， 返回"),a("code",[s._v("0")]),s._v("说明没有访问过：")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("getbit unique:users:20201106 "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("integer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:637"),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("9")]),s._v(">")]),s._v(" getbit unique:users:20201106 "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("integer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:637"),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("9")]),s._v(">")]),s._v(" getbit unique:users:20201106 "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("integer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("p",[s._v("注：因为"),a("code",[s._v("100")]),s._v("根本不存在，所以也是返回"),a("code",[s._v("0")])]),s._v(" "),a("h5",{attrs:{id:"_3-bitcount"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-bitcount"}},[s._v("#")]),s._v(" 3. bitcount")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("bitcount key "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("start end"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 统计字符串从start字节到end字节比特值为1的数量")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("统计"),a("code",[s._v("key")]),s._v(" 被设置为"),a("code",[s._v("1")]),s._v("的"),a("code",[s._v("bit")]),s._v("数。一般情况下，给定的整个"),a("code",[s._v("key")]),s._v("都会被进行计数，通过指定额外的 "),a("code",[s._v("[start,end]")]),s._v("，可以让计数只在特定的位上进行。")]),s._v(" "),a("p",[a("code",[s._v("start")]),s._v("和"),a("code",[s._v("end")]),s._v(" 参数的设置，都可以使用负数值：比如 "),a("code",[s._v("-1")]),s._v("表示最后一个位，而"),a("code",[s._v("-2")]),s._v("表示倒数第二个位，"),a("code",[s._v("start")]),s._v("、"),a("code",[s._v("end")]),s._v(" 是指bit组的字节的下标数。")]),s._v(" "),a("blockquote",[a("p",[s._v("e.g.1 计算"),a("code",[s._v("2020-11-06")]),s._v("这天的独立访问用户数量")])]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:637"),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("9")]),s._v(">")]),s._v(" bitcount unique:users:20201106\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("integer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[a("code",[s._v("start")]),s._v("和"),a("code",[s._v("end")]),s._v("代表起始和结束字节数， 下面操作计算用户"),a("code",[s._v("id")]),s._v("在第"),a("code",[s._v("1")]),s._v("个字节到第"),a("code",[s._v("3")]),s._v("个字节之间的独立访问用户数， 对应的用户id是"),a("code",[s._v("11")]),s._v("， "),a("code",[s._v("15")]),s._v("， "),a("code",[s._v("19")]),s._v("。")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:637"),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("9")]),s._v(">")]),s._v(" bitcount unique:users:20201106 "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("integer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("blockquote",[a("p",[s._v("e.g.2 K1 【01000001 01000000  00000000 00100001】，对应字节下标【0，1，2，3】")]),s._v(" "),a("p",[s._v("注意：redis的setbit设置或清除的是bit位置，而bitcount计算的是byte位置。")])]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 4byte = 32bit，及")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 下标 1 7 9 26 31 为1")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:637"),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("9")]),s._v(">")]),s._v(" setbit K1 "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("integer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:637"),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("9")]),s._v(">")]),s._v(" setbit K1 "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("7")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("integer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:637"),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("9")]),s._v(">")]),s._v(" setbit K1 "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("9")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("integer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:637"),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("9")]),s._v(">")]),s._v(" setbit K1 "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("26")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("integer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:637"),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("9")]),s._v(">")]),s._v(" setbit K1 "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("31")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("integer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# bitcount单位为byte")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:637"),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("9")]),s._v(">")]),s._v(" bitcount K1\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("integer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:637"),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("9")]),s._v(">")]),s._v(" bitcount K1 "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 统计下标1、2字节组中bit=1的个数，即01000000  00000000")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("integer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:637"),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("9")]),s._v(">")]),s._v(" bitcount K1 "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 统计下标1、2字节组中bit=1的个数，即01000000  00000000 00100001")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("integer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:637"),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("9")]),s._v(">")]),s._v(" bitcount K1 "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" -2 "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 统计下标0到下标倒数第2，字节组中bit=1的个数，即01000001  01000000  00000000")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("integer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br")])]),a("h5",{attrs:{id:"_4-bitop"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-bitop"}},[s._v("#")]),s._v(" 4. bitop")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("bitop "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("and"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("or"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("not"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("xor"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" destkey key "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("key "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v("."),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("  \n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[a("code",[s._v("bitop")]),s._v("是一个复合操作， 它可以做多个"),a("code",[s._v("Bitmaps")]),s._v("的"),a("code",[s._v("and")]),s._v("（交集）、 "),a("code",[s._v("or")]),s._v("（并集）、 "),a("code",[s._v("not")]),s._v("（非）、"),a("code",[s._v("xor")]),s._v("（异或） 操作并将结果保存在"),a("code",[s._v("destkey")]),s._v("中。")]),s._v(" "),a("blockquote",[a("p",[s._v("e.g.1 计算出两天都访问过网站的用户数量")])]),s._v(" "),a("p",[a("code",[s._v("2020-11-04")]),s._v(" 日访问网站的"),a("code",[s._v("userid=1,2,5,9")]),s._v("。")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("setbit unique:users:20201104 "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\nsetbit unique:users:20201104 "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\nsetbit unique:users:20201104 "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\nsetbit unique:users:20201104 "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("9")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("p",[a("code",[s._v("2020-11-03")]),s._v(" 日访问网站的"),a("code",[s._v("userid=0,1,4,9")]),s._v("。")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("setbit unique:users:20201103 "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\nsetbit unique:users:20201103 "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\nsetbit unique:users:20201103 "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\nsetbit unique:users:20201103 "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("9")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("p",[s._v("计算出两天都访问过网站的用户数量")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:637"),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("9")]),s._v(">")]),s._v(" bitop and unique:users:and:20201104_03 unique:users:20201103 unique:users:20201104\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("integer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[a("img",{attrs:{src:"https://gitee.com/WWWWWWWXQ/images/raw/master/Redis/5.1_4.png",alt:"截屏2021-07-20 11.09.59"}})]),s._v(" "),a("p",[s._v("计算出任意一天都访问过网站的用户数量（例如月活跃就是类似这种） ，可以使用"),a("code",[s._v("or")]),s._v("求并集")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:637"),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("9")]),s._v(">")]),s._v(" bitop or unique:users:or:20201104_03 unique:users:20201103 unique:users:20201104\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("integer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:637"),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("9")]),s._v(">")]),s._v(" bitcount unique:users:or:20201104_03\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("integer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("6")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("h4",{attrs:{id:"_5-1-2-bitmaps与set对比"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-2-bitmaps与set对比"}},[s._v("#")]),s._v(" 5.1.2 Bitmaps与Set对比")]),s._v(" "),a("p",[s._v("假设网站有1亿用户， 每天独立访问的用户有5千万， 如果每天用集合类型和Bitmaps分别存储活跃用户可以得到表")]),s._v(" "),a("blockquote",[a("p",[s._v("Set和Bitmaps存储一天活跃用户对比")])]),s._v(" "),a("table",[a("thead",[a("tr",[a("th",[s._v("数据类型")]),s._v(" "),a("th",[s._v("每个用户id占用空间")]),s._v(" "),a("th",[s._v("需要存储的用户量")]),s._v(" "),a("th",[s._v("全部内存量")])])]),s._v(" "),a("tbody",[a("tr",[a("td",[s._v("集合类型")]),s._v(" "),a("td",[s._v("64位")]),s._v(" "),a("td",[s._v("50000000")]),s._v(" "),a("td",[s._v("64位*50000000 = 400MB")])]),s._v(" "),a("tr",[a("td",[s._v("Bitmaps")]),s._v(" "),a("td",[s._v("1位")]),s._v(" "),a("td",[s._v("100000000")]),s._v(" "),a("td",[s._v("1位*100000000 = 12.5MB")])])])]),s._v(" "),a("p",[s._v("很明显， 这种情况下使用Bitmaps能节省很多的内存空间， 尤其是随着时间推移节省的内存还是非常可观的")]),s._v(" "),a("blockquote",[a("p",[s._v("set和Bitmaps存储独立用户空间对比")])]),s._v(" "),a("table",[a("thead",[a("tr",[a("th",[s._v("数据类型")]),s._v(" "),a("th",[s._v("一天")]),s._v(" "),a("th",[s._v("一个月")]),s._v(" "),a("th",[s._v("一年")])])]),s._v(" "),a("tbody",[a("tr",[a("td",[s._v("集合类型")]),s._v(" "),a("td",[s._v("400MB")]),s._v(" "),a("td",[s._v("12GB")]),s._v(" "),a("td",[s._v("144GB")])]),s._v(" "),a("tr",[a("td",[s._v("Bitmaps")]),s._v(" "),a("td",[s._v("12.5MB")]),s._v(" "),a("td",[s._v("375MB")]),s._v(" "),a("td",[s._v("4.5GB")])])])]),s._v(" "),a("p",[s._v("但Bitmaps并不是万金油， 假如该网站每天的独立访问用户很少， 例如只有10万（大量的僵尸用户） ， 那么两者的对比如下表所示， 很显然， 这时候使用Bitmaps就不太合适了， 因为基本上大部分位都是0。")]),s._v(" "),a("blockquote",[a("p",[s._v("set和Bitmaps存储一天活跃用户对比（独立用户比较少）")])]),s._v(" "),a("table",[a("thead",[a("tr",[a("th",[s._v("数据类型")]),s._v(" "),a("th",[s._v("每个userid占用空间")]),s._v(" "),a("th",[s._v("需要存储的用户量")]),s._v(" "),a("th",[s._v("全部内存量")])])]),s._v(" "),a("tbody",[a("tr",[a("td",[s._v("集合类型")]),s._v(" "),a("td",[s._v("64位")]),s._v(" "),a("td",[s._v("100000")]),s._v(" "),a("td",[s._v("64位*100000 = 800KB")])]),s._v(" "),a("tr",[a("td",[s._v("Bitmaps")]),s._v(" "),a("td",[s._v("1位")]),s._v(" "),a("td",[s._v("100000000")]),s._v(" "),a("td",[s._v("1位*100000000 = 12.5MB")])])])]),s._v(" "),a("h3",{attrs:{id:"_5-2-hyperloglog"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-hyperloglog"}},[s._v("#")]),s._v(" 5.2 HyperLogLog")]),s._v(" "),a("p",[s._v("在工作当中，我们经常会遇到与统计相关的功能需求，比如统计网站PV（PageView页面访问量）,可以使用Redis的"),a("code",[s._v("incr")]),s._v("、"),a("code",[s._v("incrby")]),s._v("轻松实现。")]),s._v(" "),a("p",[s._v("但像UV（UniqueVisitor，独立访客）、独立IP数、搜索记录数等需要去重和计数的问题如何解决？这种求集合中不重复元素个数的问题称为"),a("code",[s._v("基数问题")]),s._v("。")]),s._v(" "),a("p",[s._v("解决基数问题有很多种方案：")]),s._v(" "),a("ol",[a("li",[s._v("数据存储在MySQL表中，使用"),a("code",[s._v("distinct count")]),s._v("计算不重复个数")]),s._v(" "),a("li",[s._v("使用Redis提供的"),a("code",[s._v("hash")]),s._v("、"),a("code",[s._v("set")]),s._v("、"),a("code",[s._v("bitmaps")]),s._v("等数据结构来处理")])]),s._v(" "),a("p",[s._v("以上的方案结果精确，但随着数据不断增加，导致占用空间越来越大，对于非常大的数据集是不切实际的。能否能够降低一定的精度来平衡存储空间？于是Redis推出了"),a("code",[s._v("HyperLogLog")])]),s._v(" "),a("p",[s._v("Redis HyperLogLog 是用来做"),a("code",[s._v("基数统计")]),s._v("的算法，HyperLogLog 的优点是，在输入元素的数量或者体积非常非常大时，计算基数所需的空间总是固定的、并且是很小的。")]),s._v(" "),a("p",[s._v("在 Redis 里面，每个 HyperLogLog 键只需要花费"),a("code",[s._v("12 KB")]),s._v("内存，就可以计算接近"),a("code",[s._v("2^64")]),s._v("个不同元素的基数。这和计算基数时，元素越多耗费内存就越多的集合形成鲜明对比。")]),s._v(" "),a("p",[s._v("但是，因为 HyperLogLog 只会根据输入元素来计算基数，而不会储存输入元素本身，所以 HyperLogLog 不能像集合那样，返回输入的各个元素。")]),s._v(" "),a("blockquote",[a("p",[s._v("什么是基数?")])]),s._v(" "),a("p",[s._v("比如数据集"),a("code",[s._v("{1, 3, 5, 7, 5, 7, 8}")]),s._v("， 那么这个数据集的基数集为"),a("code",[s._v("{1, 3, 5 ,7, 8}")]),s._v(", 基数(不重复元素)为"),a("code",[s._v("5")]),s._v("。 基数估计就是在误差可接受的范围内，快速计算基数。")]),s._v(" "),a("h4",{attrs:{id:"commands-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#commands-2"}},[s._v("#")]),s._v(" Commands")]),s._v(" "),a("h5",{attrs:{id:"_1-pfadd"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-pfadd"}},[s._v("#")]),s._v(" 1. pfadd")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("pfadd key element "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("element "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v("."),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 添加指定元素到 HyperLogLog 中 ")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("​\t将所有元素添加到指定HyperLogLog数据结构中。如果执行命令后HLL估计的近似基数发生变化，则返回1，否则返回0。")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:637"),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("9")]),s._v(">")]),s._v(" pfadd hll1 "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"redis"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("integer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:637"),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("9")]),s._v(">")]),s._v(" pfadd hll1 "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"mysql"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("integer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:637"),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("9")]),s._v(">")]),s._v(" pfadd hll1 "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"redis"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("integer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("h5",{attrs:{id:"_2-pfcount"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-pfcount"}},[s._v("#")]),s._v(" 2. pfcount")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("pfcount key "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("key "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v("."),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 计算HLL的近似基数，可以计算多个HLL")]),s._v("\n                      "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 比如用HLL存储每天的UV，计算一周的UV可以使用7天的UV合并计算即可")]),s._v("\n                      \n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:637"),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("9")]),s._v(">")]),s._v(" pfcount hll1\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("integer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:637"),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("9")]),s._v(">")]),s._v(" pfadd hll2 "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"redis"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("integer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:637"),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("9")]),s._v(">")]),s._v(" pfadd hll2 "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"mongodb"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("integer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:637"),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("9")]),s._v(">")]),s._v(" pfcount hll1 hll2\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("integer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:637"),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("9")]),s._v(">")]),s._v(" \n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br")])]),a("h5",{attrs:{id:"_3-pfmerge"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-pfmerge"}},[s._v("#")]),s._v(" 3. pfmerge")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("pfmerge destkey sourcekey "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("sourcekey "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v("."),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 将一个或多个HLL合并后的结果存储在另一个HLL中，")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 比如每月活跃用户可以使用每天的活跃用户来合并计算可得")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:637"),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("9")]),s._v(">")]),s._v(" pfmerge hll3 hll1 hll2\nOK\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:637"),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("9")]),s._v(">")]),s._v(" pfcount hll3\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("integer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("                                         \n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("h3",{attrs:{id:"_5-3-geospatial"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-3-geospatial"}},[s._v("#")]),s._v(" 5.3 Geospatial")]),s._v(" "),a("p",[s._v("Redis "),a("code",[s._v("3.2")]),s._v("中增加了对"),a("code",[s._v("GEO")]),s._v("类型的支持。GEO，Geographic，地理信息的缩写。该类型，就是元素的"),a("code",[s._v("2维")]),s._v("坐标，在地图上就是经纬度。redis基于该类型，提供了经纬度设置，查询，范围查询，距离查询，经纬度Hash等常见操作。")]),s._v(" "),a("h4",{attrs:{id:"commands-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#commands-3"}},[s._v("#")]),s._v(" Commands")]),s._v(" "),a("h5",{attrs:{id:"_1-geoadd"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-geoadd"}},[s._v("#")]),s._v(" 1. geoadd")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 添加地理位置（经度，纬度，名称）")]),s._v("\ngeoadd key longitude latitude member "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("longitude latitude member "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v("."),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("两极无法直接添加，一般会下载城市数据，直接通过 Java 程序一次性导入。")]),s._v(" "),a("p",[s._v("有效的经度从"),a("code",[s._v("-180")]),s._v(" 度到 "),a("code",[s._v("180")]),s._v("度。有效的纬度从 "),a("code",[s._v("-85.05112878")]),s._v(" 度到"),a("code",[s._v("85.05112878")]),s._v(" 度。")]),s._v(" "),a("p",[s._v("当坐标位置超出指定范围时，该命令将会返回一个错误。已经添加的数据，是无法再次往里面添加的。")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:637"),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("9")]),s._v(">")]),s._v(" geoadd china:city "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("121.47")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("31.23")]),s._v(" shanghai\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("integer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:637"),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("9")]),s._v(">")]),s._v(" geoadd china:city "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("106.50")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("29.53")]),s._v(" chongqing "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("114.05")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("22.52")]),s._v(" shenzhen "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("116.38")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("39.90")]),s._v(" beijing\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("integer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("h5",{attrs:{id:"_2-geopos"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-geopos"}},[s._v("#")]),s._v(" 2. geopos")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("geopos key member "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("member "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v("."),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 获得指定地区的坐标值")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# e,g.")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:637"),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("9")]),s._v(">")]),s._v(" geopos china:city shanghai\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"121.47000163793563843"')]),s._v("\n   "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"31.22999903975783553"')]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("h5",{attrs:{id:"_3-geodist"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-geodist"}},[s._v("#")]),s._v(" 3. geodist")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("geodist key member1 member2 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("m"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("km"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("ft"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("mi"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 获取两个位置之间的直线距离")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("获取两个位置之间的直线距离")]),s._v(" "),a("p",[s._v("单位：")]),s._v(" "),a("ul",[a("li",[s._v("m 表示单位为米[默认值]。")]),s._v(" "),a("li",[s._v("km 表示单位为千米。")]),s._v(" "),a("li",[s._v("mi 表示单位为英里。")]),s._v(" "),a("li",[s._v("ft 表示单位为英尺。")])]),s._v(" "),a("p",[s._v("如果用户没有显式地指定单位参数， 那么 GEODIST 默认使用米作为单位")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:637"),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("9")]),s._v(">")]),s._v(" geodist china:city beijing shanghai km\n"),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"1068.1535"')]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("h5",{attrs:{id:"_4-georadius"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-georadius"}},[s._v("#")]),s._v(" 4. georadius")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 以给定的经纬度为中心，找出某一半径内的元素")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 经度 纬度 距离 单位")]),s._v("\ngeoradius key longitude latitude radius m"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("km"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("ft"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("mi "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("WITHCOORD"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("WITHDIST"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("WITHHASH"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("COUNT count"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("ASC"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("DESC"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("STORE key"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" \n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# e.g.")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:637"),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("9")]),s._v(">")]),s._v(" georadius china:city "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("110")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("30")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1000")]),s._v(" km\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"chongqing"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"shenzhen"')]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])]),a("hr"),s._v(" "),a("h2",{attrs:{id:"_6-redis-jedis-测试"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-redis-jedis-测试"}},[s._v("#")]),s._v(" 6. Redis-Jedis 测试")]),s._v(" "),a("h3",{attrs:{id:"_6-1-dependencies"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-1-dependencies"}},[s._v("#")]),s._v(" 6.1 Dependencies")]),s._v(" "),a("div",{staticClass:"language-xml line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-xml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),s._v("dependency")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),s._v("groupId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("redis.clients"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("</")]),s._v("groupId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),s._v("artifactId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("jedis"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("</")]),s._v("artifactId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),s._v("version")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("3.2.0"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("</")]),s._v("version")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("</")]),s._v("dependency")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("h3",{attrs:{id:"_6-2-连接-redis-注意事项"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-2-连接-redis-注意事项"}},[s._v("#")]),s._v(" 6.2 连接  Redis  注意事项")]),s._v(" "),a("p",[s._v("禁用Linux的防火墙：Linux(CentOS7)里执行命令")]),s._v(" "),a("p",[a("code",[s._v("redis.conf")]),s._v("中注释掉"),a("code",[s._v("bind 127.0.0.1")]),s._v(" ,然后 "),a("code",[s._v("protected-mode no")])]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("systemctl stop/disable firewalld.service   \n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h3",{attrs:{id:"_6-3-连接redis"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-3-连接redis"}},[s._v("#")]),s._v(" 6.3 连接Redis")]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("redis"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("clients"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("jedis"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")])]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Jedis")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Demo01")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" args"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Jedis")]),s._v(" jedis "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Jedis")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"192.168.137.3"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("6379")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" pong "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" jedis"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("ping")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"连接成功："')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v("pong"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("    jedis"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("close")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h3",{attrs:{id:"_6-4-测试相关数据类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-4-测试相关数据类型"}},[s._v("#")]),s._v(" 6.4 测试相关数据类型")]),s._v(" "),a("h4",{attrs:{id:"_6-4-1-jedis-api-key"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-4-1-jedis-api-key"}},[s._v("#")]),s._v(" 6.4.1 Jedis-API::Key")]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[s._v("jedis"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("set")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"k1"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"v1"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("jedis"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("set")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"k2"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"v2"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("jedis"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("set")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"k3"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"v3"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Set")]),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" keys "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" jedis"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("keys")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"*"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("keys"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("size")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("keys"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("forEach")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("::")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("jedis"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("exists")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"k1"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("jedis"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("ttl")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"k1"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("                "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("jedis"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("get")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"k1"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h4",{attrs:{id:"_6-4-2-jedis-api-string"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-4-2-jedis-api-string"}},[s._v("#")]),s._v(" 6.4.2 Jedis-API::String")]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[s._v("jedis"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("mset")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"str1"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"v1"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"str2"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"v2"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"str3"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"v3"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("jedis"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("mget")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"str1"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"str2"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"str3"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h4",{attrs:{id:"_6-4-3-jedis-api-list"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-4-3-jedis-api-list"}},[s._v("#")]),s._v(" 6.4.3 Jedis-API::List")]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("List")]),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" list "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" jedis"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("lrange "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"mylist"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("list"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("forEach")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("::")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h4",{attrs:{id:"_6-4-4-jedis-api-set"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-4-4-jedis-api-set"}},[s._v("#")]),s._v(" 6.4.4 Jedis-API::Set")]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[s._v("jedis"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sadd")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"orders"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"order01"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("jedis"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sadd")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"orders"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"order02"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("jedis"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sadd")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"orders"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"order03"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("jedis"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sadd")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"orders"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"order04"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Set")]),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" smembers "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" jedis"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("smembers")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"orders"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("smembers"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("forEach")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("::")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("jedis"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("srem")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"orders"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"order02"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h4",{attrs:{id:"_6-4-5-jedis-api-hash"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-4-5-jedis-api-hash"}},[s._v("#")]),s._v(" 6.4.5 Jedis-API::Hash")]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[s._v("jedis"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("hset")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"hash1"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"userName"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"lisi"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("jedis"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("hget")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"hash1"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"userName"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Map")]),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" map "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("HashMap")]),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("map"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("put")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"telphone"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"13810169999"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("map"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("put")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"address"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"atguigu"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("map"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("put")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"email"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"abc@163.com"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("jedis"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("hmset")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"hash2"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("map"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("List")]),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" result "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" jedis"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("hmget")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"hash2"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"telphone"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"email"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("result"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("forEach")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("::")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h4",{attrs:{id:"_6-4-6-jedis-api-zset"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-4-6-jedis-api-zset"}},[s._v("#")]),s._v(" 6.4.6 Jedis-API::Zset")]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[s._v("jedis"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("zadd")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"zset01"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("100d")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"z3"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("jedis"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("zadd")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"zset01"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("90d")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"l4"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("jedis"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("zadd")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"zset01"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("80d")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"w5"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("jedis"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("zadd")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"zset01"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("70d")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"z6"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Set")]),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" zrange "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" jedis"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("zrange")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"zset01"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("zrange"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("forEach")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("::")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("hr"),s._v(" "),a("h2",{attrs:{id:"_7-redis-jedis-实例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-redis-jedis-实例"}},[s._v("#")]),s._v(" 7. Redis_Jedis_实例")]),s._v(" "),a("h3",{attrs:{id:"_7-1-完成一个手机验证码功能"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-1-完成一个手机验证码功能"}},[s._v("#")]),s._v(" 7.1 完成一个手机验证码功能")]),s._v(" "),a("p",[s._v("要求:")]),s._v(" "),a("ol",[a("li",[a("p",[s._v("输入手机号，点击发送后随机生成6位数字码，2分钟有效")])]),s._v(" "),a("li",[a("p",[s._v("输入验证码，点击验证，返回成功或失败")])]),s._v(" "),a("li",[a("p",[s._v("每个手机号每天只能输入3次")])])]),s._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/WWWWWWWXQ/images/raw/master/Redis/image-20210720140244779.png",alt:"image-20210720140244779"}})])])}),[],!1,null,null,null);t.default=n.exports}}]);