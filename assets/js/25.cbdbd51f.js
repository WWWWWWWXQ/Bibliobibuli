(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{590:function(s,t,a){"use strict";a.r(t);var n=a(6),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("p",[a("img",{attrs:{src:"https://gitee.com/WWWWWWWXQ/images/raw/master/JCP-M&A/hz_book.png",alt:"hz_books"}})]),s._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/WWWWWWWXQ/images/raw/master/JCP-M&A/Java%E9%AB%98%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3.png",alt:"截屏2021-07-25 下午1.27.12"}})]),s._v(" "),a("h1",{attrs:{id:"§-多线程基础"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#§-多线程基础"}},[s._v("#")]),s._v(" § 多线程基础")]),s._v(" "),a("h2",{attrs:{id:"_1-快速认识线程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-快速认识线程"}},[s._v("#")]),s._v(" 1. 快速认识线程")]),s._v(" "),a("h3",{attrs:{id:"_1-1-线程介绍"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-线程介绍"}},[s._v("#")]),s._v(" 1.1 线程介绍")]),s._v(" "),a("p",[s._v("对计算机来说每一个任务就是一个"),a("code",[s._v("进程 Process")]),s._v("，每一个"),a("code",[s._v("进程")]),s._v("内部至少要有一个"),a("code",[s._v("线程 Thread")]),s._v("在运行。有时候也称"),a("code",[s._v("轻量级的进程")]),s._v("。")]),s._v(" "),a("p",[a("code",[s._v("线程")]),s._v("是程序执行的一个路径，每一个线程都有自己的"),a("code",[s._v("局部变量表")]),s._v("、"),a("code",[s._v("程序计数器（指向正在执行的命令指针）")]),s._v("以及各自的"),a("code",[s._v("生命周期")]),s._v("。现代操作系统中一般不止一个线程在运行，当启动了一个Java虚拟机（JVM）时，从操作系统中就会创建一个新的"),a("code",[s._v("进程")]),s._v("（JVM进程），JVM进程中将会派生或者创建更多"),a("code",[s._v("线程")]),s._v("。")]),s._v(" "),a("h3",{attrs:{id:"_1-2-创建并启动一个线程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-创建并启动一个线程"}},[s._v("#")]),s._v(" 1.2 创建并启动一个线程")]),s._v(" "),a("p",[s._v("利用"),a("code",[s._v("Thread")]),s._v("类快速创建并启动一个线程。")]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("TryConcurrency")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" args"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Thread")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 创建一个线程，并且重写其run方法，将要执行的方法交给它")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Override")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("run")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n          "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("method1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("start")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("           "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 启动新的线程，只有调用了Thread的start放啊，才代表派生了一个新线程")]),s._v("\n                         "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 否则Thread和其他普通的Java对象没有什么区别，")]),s._v("\n                         "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// start方法是一个立即返回方法，并不会让程序陷入阻塞。")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("method2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// Java 8 Lambda")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" main "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" args"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Thread")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Class1")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("::")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("method1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("start")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("method2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br")])]),a("h4",{attrs:{id:"_1-2-1-观察线程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-1-观察线程"}},[s._v("#")]),s._v(" 1.2.1 观察线程")]),s._v(" "),a("p",[s._v("JDK自带了几种可以查看线程状态的工具")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("// Jconsole\n用法: \n    jconsole "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" -interval"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("n "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" -notile "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" -pluginpath "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("path"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" -version "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" connection "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(". "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n\n  -interval   将更新间隔设置为 n 秒 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("默认值为 "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v(" 秒"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  -notile     初始不平铺窗口 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("对于两个或多个连接"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  -pluginpath 指定 jconsole 用于查找插件的路径\n  -version    输出程序版本\n\n  connection "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" pid "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("||")]),s._v(" host:port "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("||")]),s._v(" JMX URL "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("service:jmx:"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("协议"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("://"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v("."),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  pid         目标进程的进程 ID\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("host")]),s._v("        远程主机名或 IP 地址\n  port        远程连接的端口号\n\n  -J          指定运行 jconsole 的 Java 虚拟机\n              的输入参数\n\n\n// Jstack\nUsage:\n    jstack "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("-l"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("-e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("pid"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("to connect to running process"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\nOptions:\n    -l  long listing. Prints additional information about locks\n    -e  extended listing. Prints additional information about threads\n    -? -h --help -help to print this "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("help")]),s._v(" message\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br")])]),a("h3",{attrs:{id:"_1-3-线程的生命周期详解"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-线程的生命周期详解"}},[s._v("#")]),s._v(" 1.3 线程的生命周期详解")]),s._v(" "),a("p",[s._v("线程的生命周期大体可以分为如下5个主要的阶段")]),s._v(" "),a("ul",[a("li",[s._v("NEW")]),s._v(" "),a("li",[s._v("RUNNABLE")]),s._v(" "),a("li",[s._v("RUNNING")]),s._v(" "),a("li",[s._v("BLOCKED")]),s._v(" "),a("li",[s._v("TERMINATED")])]),s._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/WWWWWWWXQ/images/raw/master/JCP-M&A/1.3_1.png",alt:"status"}})]),s._v(" "),a("blockquote",[a("p",[s._v("NEW 状态")])]),s._v(" "),a("p",[s._v("当使用了关键字"),a("code",[s._v("new")]),s._v("创建于一个"),a("code",[s._v("Thread")]),s._v("对象后，此时它并不处于执行状态，或者准确的说，同其他Java对象一样，我们仅仅创建了一个普通的"),a("code",[s._v("Thread")]),s._v("对象，并未创建新的线程。")]),s._v(" "),a("p",[s._v("在调用"),a("code",[s._v("start()")]),s._v("方法前，线程始终处于"),a("code",[s._v("NEW")]),s._v("状态。")]),s._v(" "),a("blockquote",[a("p",[s._v("RUNNABLE 状态")])]),s._v(" "),a("p",[s._v("当调用了"),a("code",[s._v("Thread")]),s._v("对象的"),a("code",[s._v("start()")]),s._v("方法之后，线程对象便从"),a("code",[s._v("NEW")]),s._v("状态转为了"),a("code",[s._v("RUNNABLE")]),s._v("状态，此时才是真正地在JVM进程中创建了一个新线程。")]),s._v(" "),a("p",[s._v("调用"),a("code",[s._v("start()")]),s._v("方法不代表立刻执行新建的线程，线程的运行与否和进程一样，都要听命于CPU的调度。等待CPU的调度并执行的中间状态即为"),a("code",[s._v("RUNNABLE")]),s._v("状态，也就是可执行状态，表示此线程具备执行的资格但尚未执行。")]),s._v(" "),a("blockquote",[a("p",[s._v("RUNNING 状态")])]),s._v(" "),a("p",[s._v("一旦CPU通过轮询或者其他方式从任务可执行队列中选中了线程，那么此时它才能真正地执行自己的逻辑代码。需要说明的是，一个正在"),a("code",[s._v("RUNNING")]),s._v("状态的线程事实上也是"),a("code",[s._v("RUNNABLE")]),s._v("的，但反过来不成立。")]),s._v(" "),a("p",[s._v("在该状态中，线程的状态可以发生如下的状态转换：")]),s._v(" "),a("ul",[a("li",[s._v("直接进入"),a("code",[s._v("TERMINATED")]),s._v("状态。\n"),a("ul",[a("li",[s._v("调用JDK已经不推荐使用的"),a("code",[s._v("stop")]),s._v("方法或者判断某个逻辑标识")])])]),s._v(" "),a("li",[s._v("进入"),a("code",[s._v("BLOCKED")]),s._v("状态。\n"),a("ul",[a("li",[s._v("调用了"),a("code",[s._v("sleep")]),s._v("或者"),a("code",[s._v("wait")]),s._v("方法而加入了"),a("code",[s._v("waitSet")]),s._v("中")]),s._v(" "),a("li",[s._v("进行了某个阻塞的IO操作，比如网络数据的读写")]),s._v(" "),a("li",[s._v("获取某个锁资源，从而加入到该锁的阻塞队列")])])]),s._v(" "),a("li",[s._v("进入"),a("code",[s._v("RUNNABLE")]),s._v("状态\n"),a("ul",[a("li",[s._v("由于CPU的调度器轮询使该线程放弃执行")]),s._v(" "),a("li",[s._v("线程主动调用"),a("code",[s._v("yield")]),s._v("方法，放弃CPU执行权")])])])]),s._v(" "),a("blockquote",[a("p",[s._v("BLOCKED状态")])]),s._v(" "),a("p",[s._v("线程进入"),a("code",[s._v("BLOCKED")]),s._v("状态的原因上面已经描述。线程在"),a("code",[s._v("BLOCKED")]),s._v("状态中可以切换至如下几个状态：")]),s._v(" "),a("ul",[a("li",[s._v("直接进入"),a("code",[s._v("TERMINATED")]),s._v("状态。\n"),a("ul",[a("li",[s._v("调用JDK已经不推荐使用的"),a("code",[s._v("stop")]),s._v("方法或者意外死亡（JVM Crash）")])])]),s._v(" "),a("li",[s._v("进入"),a("code",[s._v("RUNNABLE")]),s._v("状态\n"),a("ul",[a("li",[s._v("线程阻塞的操作结束，比如读取完了想到的数据字节")]),s._v(" "),a("li",[s._v("线程完成了指定时间的"),a("code",[s._v("sleep")])]),s._v(" "),a("li",[s._v("Wait中的线程被其他线程"),a("code",[s._v("notify/notifyAll")]),s._v("唤醒")]),s._v(" "),a("li",[s._v("线程获取到了等待的锁资源")]),s._v(" "),a("li",[s._v("线程在阻塞的过程中被打断，比如其他线程调用了"),a("code",[s._v("interrupt")]),s._v("方法")])])])]),s._v(" "),a("blockquote",[a("p",[s._v("TERMINATED状态")])]),s._v(" "),a("p",[s._v("线程的最终状态，在该状态中线程将不会切换到其他状态，进入该状态就意味着整个生命周期的结束。使线程进入"),a("code",[s._v("TERMINATED")]),s._v("状态的情况有：")]),s._v(" "),a("ul",[a("li",[s._v("线程运行正常结束")]),s._v(" "),a("li",[s._v("线程运行出错意外结束")]),s._v(" "),a("li",[s._v("JVM Crash，导致所有的线程都结束")])])])}),[],!1,null,null,null);t.default=e.exports}}]);