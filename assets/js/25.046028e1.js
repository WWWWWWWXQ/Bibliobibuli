(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{588:function(s,t,a){"use strict";a.r(t);var n=a(6),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("p",[a("img",{attrs:{src:"https://gitee.com/WWWWWWWXQ/images/raw/master/JCP-M&A/hz_book.png",alt:"hz_books"}})]),s._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/WWWWWWWXQ/images/raw/master/JCP-M&A/Java%E9%AB%98%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3.png",alt:"截屏2021-07-25 下午1.27.12"}})]),s._v(" "),a("h1",{attrs:{id:"§-多线程基础"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#§-多线程基础"}},[s._v("#")]),s._v(" § 多线程基础")]),s._v(" "),a("hr"),s._v(" "),a("h2",{attrs:{id:"_1-快速认识线程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-快速认识线程"}},[s._v("#")]),s._v(" 1. 快速认识线程")]),s._v(" "),a("h3",{attrs:{id:"_1-1-线程介绍"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-线程介绍"}},[s._v("#")]),s._v(" 1.1 线程介绍")]),s._v(" "),a("p",[s._v("对计算机来说每一个任务就是一个"),a("code",[s._v("进程 Process")]),s._v("，每一个"),a("code",[s._v("进程")]),s._v("内部至少要有一个"),a("code",[s._v("线程 Thread")]),s._v("在运行。有时候也称"),a("code",[s._v("轻量级的进程")]),s._v("。")]),s._v(" "),a("p",[a("code",[s._v("线程")]),s._v("是程序执行的一个路径，每一个线程都有自己的"),a("code",[s._v("局部变量表")]),s._v("、"),a("code",[s._v("程序计数器（指向正在执行的命令指针）")]),s._v("以及各自的"),a("code",[s._v("生命周期")]),s._v("。现代操作系统中一般不止一个线程在运行，当启动了一个Java虚拟机（JVM）时，从操作系统中就会创建一个新的"),a("code",[s._v("进程")]),s._v("（JVM进程），JVM进程中将会派生或者创建更多"),a("code",[s._v("线程")]),s._v("。")]),s._v(" "),a("h3",{attrs:{id:"_1-2-创建并启动一个线程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-创建并启动一个线程"}},[s._v("#")]),s._v(" 1.2 创建并启动一个线程")]),s._v(" "),a("p",[s._v("利用"),a("code",[s._v("Thread")]),s._v("类快速创建并启动一个线程。")]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("TryConcurrency")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" args"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Thread")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 创建一个线程，并且重写其run方法，将要执行的方法交给它")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Override")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("run")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n          "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("method1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("start")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("           "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 启动新的线程，只有调用了Thread的start放啊，才代表派生了一个新线程")]),s._v("\n                         "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 否则Thread和其他普通的Java对象没有什么区别，")]),s._v("\n                         "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// start方法是一个立即返回方法，并不会让程序陷入阻塞。")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("method2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// Java 8 Lambda")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" main "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" args"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Thread")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Class1")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("::")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("method1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("start")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("method2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br")])]),a("h4",{attrs:{id:"_1-2-1-观察线程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-1-观察线程"}},[s._v("#")]),s._v(" 1.2.1 观察线程")]),s._v(" "),a("p",[s._v("JDK自带了几种可以查看线程状态的工具")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("// Jconsole\n用法: \n    jconsole "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" -interval"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("n "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" -notile "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" -pluginpath "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("path"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" -version "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" connection "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(". "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n\n  -interval   将更新间隔设置为 n 秒 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("默认值为 "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v(" 秒"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  -notile     初始不平铺窗口 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("对于两个或多个连接"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  -pluginpath 指定 jconsole 用于查找插件的路径\n  -version    输出程序版本\n\n  connection "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" pid "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("||")]),s._v(" host:port "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("||")]),s._v(" JMX URL "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("service:jmx:"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("协议"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("://"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v("."),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  pid         目标进程的进程 ID\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("host")]),s._v("        远程主机名或 IP 地址\n  port        远程连接的端口号\n\n  -J          指定运行 jconsole 的 Java 虚拟机\n              的输入参数\n\n\n// Jstack\nUsage:\n    jstack "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("-l"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("-e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("pid"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("to connect to running process"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\nOptions:\n    -l  long listing. Prints additional information about locks\n    -e  extended listing. Prints additional information about threads\n    -? -h --help -help to print this "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("help")]),s._v(" message\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br")])]),a("h3",{attrs:{id:"_1-3-线程的生命周期详解"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-线程的生命周期详解"}},[s._v("#")]),s._v(" 1.3 线程的生命周期详解")]),s._v(" "),a("p",[s._v("线程的生命周期大体可以分为如下5个主要的阶段")]),s._v(" "),a("ul",[a("li",[s._v("NEW")]),s._v(" "),a("li",[s._v("RUNNABLE")]),s._v(" "),a("li",[s._v("RUNNING")]),s._v(" "),a("li",[s._v("BLOCKED")]),s._v(" "),a("li",[s._v("TERMINATED")])]),s._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/WWWWWWWXQ/images/raw/master/JCP-M&A/1.3_1.png",alt:"status"}})]),s._v(" "),a("blockquote",[a("p",[s._v("NEW 状态")])]),s._v(" "),a("p",[s._v("当使用了关键字"),a("code",[s._v("new")]),s._v("创建于一个"),a("code",[s._v("Thread")]),s._v("对象后，此时它并不处于执行状态，或者准确的说，同其他Java对象一样，我们仅仅创建了一个普通的"),a("code",[s._v("Thread")]),s._v("对象，并未创建新的线程。")]),s._v(" "),a("p",[s._v("在调用"),a("code",[s._v("start()")]),s._v("方法前，线程始终处于"),a("code",[s._v("NEW")]),s._v("状态。")]),s._v(" "),a("blockquote",[a("p",[s._v("RUNNABLE 状态")])]),s._v(" "),a("p",[s._v("当调用了"),a("code",[s._v("Thread")]),s._v("对象的"),a("code",[s._v("start()")]),s._v("方法之后，线程对象便从"),a("code",[s._v("NEW")]),s._v("状态转为了"),a("code",[s._v("RUNNABLE")]),s._v("状态，此时才是真正地在JVM进程中创建了一个新线程。")]),s._v(" "),a("p",[s._v("调用"),a("code",[s._v("start()")]),s._v("方法不代表立刻执行新建的线程，线程的运行与否和进程一样，都要听命于CPU的调度。等待CPU的调度并执行的中间状态即为"),a("code",[s._v("RUNNABLE")]),s._v("状态，也就是可执行状态，表示此线程具备执行的资格但尚未执行。")]),s._v(" "),a("blockquote",[a("p",[s._v("RUNNING 状态")])]),s._v(" "),a("p",[s._v("一旦CPU通过轮询或者其他方式从任务可执行队列中选中了线程，那么此时它才能真正地执行自己的逻辑代码。需要说明的是，一个正在"),a("code",[s._v("RUNNING")]),s._v("状态的线程事实上也是"),a("code",[s._v("RUNNABLE")]),s._v("的，但反过来不成立。")]),s._v(" "),a("p",[s._v("在该状态中，线程的状态可以发生如下的状态转换：")]),s._v(" "),a("ul",[a("li",[s._v("直接进入"),a("code",[s._v("TERMINATED")]),s._v("状态。\n"),a("ul",[a("li",[s._v("调用JDK已经不推荐使用的"),a("code",[s._v("stop")]),s._v("方法或者判断某个逻辑标识")])])]),s._v(" "),a("li",[s._v("进入"),a("code",[s._v("BLOCKED")]),s._v("状态。\n"),a("ul",[a("li",[s._v("调用了"),a("code",[s._v("sleep")]),s._v("或者"),a("code",[s._v("wait")]),s._v("方法而加入了"),a("code",[s._v("waitSet")]),s._v("中")]),s._v(" "),a("li",[s._v("进行了某个阻塞的IO操作，比如网络数据的读写")]),s._v(" "),a("li",[s._v("获取某个锁资源，从而加入到该锁的阻塞队列")])])]),s._v(" "),a("li",[s._v("进入"),a("code",[s._v("RUNNABLE")]),s._v("状态\n"),a("ul",[a("li",[s._v("由于CPU的调度器轮询使该线程放弃执行")]),s._v(" "),a("li",[s._v("线程主动调用"),a("code",[s._v("yield")]),s._v("方法，放弃CPU执行权")])])])]),s._v(" "),a("blockquote",[a("p",[s._v("BLOCKED状态")])]),s._v(" "),a("p",[s._v("线程进入"),a("code",[s._v("BLOCKED")]),s._v("状态的原因上面已经描述。线程在"),a("code",[s._v("BLOCKED")]),s._v("状态中可以切换至如下几个状态：")]),s._v(" "),a("ul",[a("li",[s._v("直接进入"),a("code",[s._v("TERMINATED")]),s._v("状态。\n"),a("ul",[a("li",[s._v("调用JDK已经不推荐使用的"),a("code",[s._v("stop")]),s._v("方法或者意外死亡（JVM Crash）")])])]),s._v(" "),a("li",[s._v("进入"),a("code",[s._v("RUNNABLE")]),s._v("状态\n"),a("ul",[a("li",[s._v("线程阻塞的操作结束，比如读取完了想到的数据字节")]),s._v(" "),a("li",[s._v("线程完成了指定时间的"),a("code",[s._v("sleep")])]),s._v(" "),a("li",[s._v("Wait中的线程被其他线程"),a("code",[s._v("notify/notifyAll")]),s._v("唤醒")]),s._v(" "),a("li",[s._v("线程获取到了等待的锁资源")]),s._v(" "),a("li",[s._v("线程在阻塞的过程中被打断，比如其他线程调用了"),a("code",[s._v("interrupt")]),s._v("方法")])])])]),s._v(" "),a("blockquote",[a("p",[s._v("TERMINATED状态")])]),s._v(" "),a("p",[s._v("线程的最终状态，在该状态中线程将不会切换到其他状态，进入该状态就意味着整个生命周期的结束。使线程进入"),a("code",[s._v("TERMINATED")]),s._v("状态的情况有：")]),s._v(" "),a("ul",[a("li",[s._v("线程运行正常结束")]),s._v(" "),a("li",[s._v("线程运行出错意外结束")]),s._v(" "),a("li",[s._v("JVM Crash，导致所有的线程都结束")])]),s._v(" "),a("h3",{attrs:{id:"_1-4-剖析start-方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-4-剖析start-方法"}},[s._v("#")]),s._v(" 1.4 剖析"),a("code",[s._v("start()")]),s._v("方法")]),s._v(" "),a("h4",{attrs:{id:"_1-4-1-thread-start"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-4-1-thread-start"}},[s._v("#")]),s._v(" 1.4.1 "),a("code",[s._v("Thread.start()")])]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/**\n* Causes this thread to begin execution; the Java Virtual Machine\n* calls the {@code run} method of this thread.\n* <p>\n* The result is that two threads are running concurrently: the\n* current thread (which returns from the call to the\n* {@code start} method) and the other thread (which executes its\n* {@code run} method).\n* <p>\n* It is never legal to start a thread more than once.\n* In particular, a thread may not be restarted once it has completed\n* execution.\n*\n* @throws     IllegalThreadStateException  if the thread was already started.\n* @see        #run()\n* @see        #stop()\n*/")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("synchronized")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("start")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('/**\n    * This method is not invoked for the main method thread or "system"\n    * group threads created/set up by the VM. Any new functionality added\n    * to this method in the future may have to also be added to the VM.\n    *\n    * A zero status value corresponds to state "NEW".\n    */')]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("threadStatus "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("throw")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("IllegalThreadStateException")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* Notify the group that this thread is about to be started\n    * so that it can be added to the group's list of threads\n    * and the group's unstarted count can be decremented. */")]),s._v("\n    group"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("boolean")]),s._v(" started "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("try")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("start0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        started "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("finally")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("try")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("started"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n                group"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("threadStartFailed")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("catch")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Throwable")]),s._v(" ignore"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* do nothing. If start0 threw a Throwable then\n            it will be passed up the call stack */")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("native")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("start0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br"),a("span",{staticClass:"line-number"},[s._v("33")]),a("br"),a("span",{staticClass:"line-number"},[s._v("34")]),a("br"),a("span",{staticClass:"line-number"},[s._v("35")]),a("br"),a("span",{staticClass:"line-number"},[s._v("36")]),a("br"),a("span",{staticClass:"line-number"},[s._v("37")]),a("br"),a("span",{staticClass:"line-number"},[s._v("38")]),a("br"),a("span",{staticClass:"line-number"},[s._v("39")]),a("br"),a("span",{staticClass:"line-number"},[s._v("40")]),a("br"),a("span",{staticClass:"line-number"},[s._v("41")]),a("br"),a("span",{staticClass:"line-number"},[s._v("42")]),a("br"),a("span",{staticClass:"line-number"},[s._v("43")]),a("br"),a("span",{staticClass:"line-number"},[s._v("44")]),a("br"),a("span",{staticClass:"line-number"},[s._v("45")]),a("br"),a("span",{staticClass:"line-number"},[s._v("46")]),a("br"),a("span",{staticClass:"line-number"},[s._v("47")]),a("br"),a("span",{staticClass:"line-number"},[s._v("48")]),a("br"),a("span",{staticClass:"line-number"},[s._v("49")]),a("br"),a("span",{staticClass:"line-number"},[s._v("50")]),a("br")])]),a("p",[a("code",[s._v("start()")]),s._v("方法的源码足够简单，其实最核心的部分是"),a("code",[s._v("start0()")]),s._v("这个本地方法，也就是"),a("code",[s._v("JNI方法")]),s._v("。")]),s._v(" "),a("p",[s._v("而我们在利用"),a("code",[s._v("Thread")]),s._v("方法创建一个新线程的时候，希望处理的逻辑是通过重写"),a("code",[s._v("run()")]),s._v("方法传递的。正如方法注释中所述：“在开始执行这个这个线程时，JVM将会调用该线程的run方法”。")]),s._v(" "),a("p",[s._v("通过源码可以推断出：")]),s._v(" "),a("ul",[a("li",[a("code",[s._v("run()")]),s._v("方法被JNI方法"),a("code",[s._v("start0()")]),s._v("调用的")]),s._v(" "),a("li",[a("code",[s._v("Thread")]),s._v("被构造后的"),a("code",[s._v("NEW状态")]),s._v("，事实上对应的是"),a("code",[s._v("threadStatus=0")])]),s._v(" "),a("li",[s._v("不能重复启动"),a("code",[s._v("Thread")]),s._v("，否则就会出现"),a("code",[s._v("IllegalThreadStateException")]),s._v("异常")]),s._v(" "),a("li",[s._v("线程启动后将会被加入到一个"),a("code",[s._v("ThreadGroup")]),s._v("中")]),s._v(" "),a("li",[s._v("一个线程的生命周期结束，即到了"),a("code",[s._v("TERMINATED状态")]),s._v("之后，是不允许再次调用"),a("code",[s._v("start()")]),s._v("方法的，也就是"),a("code",[s._v("TERMINATED")]),s._v("无法回到"),a("code",[s._v("RUNNABLE")]),s._v("/"),a("code",[s._v("RUNNING")]),s._v("状态的原因")])]),s._v(" "),a("blockquote",[a("p",[s._v("以下两种情况都会抛出"),a("code",[s._v("IllegalThreadStateException")]),s._v("异常")])]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// condition 1")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Thread")]),s._v(" thread "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Thread")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Override")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("run")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("try")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("TimeUnit")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("SECONDS"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sleep")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("catch")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("InterruptedException")]),s._v(" e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("printStackTrace")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 尝试启动两次")]),s._v("\nthread"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("start")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nthread"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("start")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// condition 2")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Thread")]),s._v(" thread "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Thread")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Override")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("run")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("try")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("TimeUnit")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("SECONDS"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sleep")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("catch")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("InterruptedException")]),s._v(" e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("printStackTrace")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nthread"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("start")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("TimeUnit")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("SECONDS"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sleep")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 休眠保证thread结束生命周期")]),s._v("\n\nthread"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("start")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//企图重新激活该线程")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br")])]),a("p",[s._v("虽然抛出的是同一个异常，但是抛出原因却有本质上的区别")]),s._v(" "),a("ul",[a("li",[s._v("第一种情况是重复启动，只是第二次启动的请求是不允许的，但此时该线程处于运行状态的")]),s._v(" "),a("li",[s._v("第二种情况是企图重新激活，但此时没有此线程，因为其生命周期已经结束了")])]),s._v(" "),a("h4",{attrs:{id:"_1-4-2-thread-run"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-4-2-thread-run"}},[s._v("#")]),s._v(" 1.4.2 "),a("code",[s._v("Thread.run()")])]),s._v(" "),a("p",[s._v("通过上节分析，线程真正执行的逻辑是在"),a("code",[s._v("run()")]),s._v("方法中的，通常会讲该方法称为线程的"),a("code",[s._v("执行单元")]),s._v("。")]),s._v(" "),a("p",[s._v("其实"),a("code",[s._v("Thread")]),s._v("的"),a("code",[s._v("run")]),s._v("和"),a("code",[s._v("start")]),s._v("方法就是一个比较典型的模板设计模式：父类编写算法结构代码，子类负责实现逻辑细节。")]),s._v(" "),a("p",[a("code",[s._v("Thread.run()")]),s._v("方法代码如下。如果我们没有使用"),a("code",[s._v("Runnable")]),s._v("接口对其进行构造（构造的时候对"),a("code",[s._v("target")]),s._v("赋值)，则可以认为"),a("code",[s._v("Thread.run()")]),s._v("方法本身就是一个空的实现：")]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* What will be run. */")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Runnable")]),s._v(" target"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/**\n* If this thread was constructed using a separate\n* {@code Runnable} run object, then that\n* {@code Runnable} object's {@code run} method is called;\n* otherwise, this method does nothing and returns.\n* <p>\n* Subclasses of {@code Thread} should override this method.\n*\n* @see     #start()\n* @see     #stop()\n* @see     #Thread(ThreadGroup, Runnable, String)\n*/")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Override")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("run")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("target "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 如果构造Thread时传递了Runnable，则会执行传递的run方法")]),s._v("\n        target"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("run")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 根据继承的构造顺序，如果构造的时候重写了Thread的run方法，那么再传递Runnable就无效了")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 因为会直接执行重写后的run方法，也就是新的执行单元。")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// Thread thread = new Thread(() -> System.out.println("Runnable.run")){')]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//      @Override")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//      public void run() {")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('//          System.out.println("Thread.run");')]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//    }")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// };")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 只会输出 Thread.run")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br")])]),a("blockquote",[a("p",[s._v("⚠️注意：")]),s._v(" "),a("ol",[a("li",[s._v("创建线程的方法只有一种：构造"),a("code",[s._v("Thread")]),s._v("类")]),s._v(" "),a("li",[s._v("实现线程的执行单元的方法有两种：\n"),a("ol",[a("li",[s._v("重写"),a("code",[s._v("Thread.run()")]),s._v(" => "),a("code",[s._v("new Thread(){@Override public void run(){}}")])]),s._v(" "),a("li",[s._v("实现"),a("code",[s._v("Runnable.run()")]),s._v("，并将"),a("code",[s._v("Runnable")]),s._v("实例用作构造"),a("code",[s._v("Thread")]),s._v("的参数 => "),a("code",[s._v("new Thread(Runnable target)")])])])])])]),s._v(" "),a("h3",{attrs:{id:"_1-5-runnable接口"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-5-runnable接口"}},[s._v("#")]),s._v(" 1.5 Runnable接口")]),s._v(" "),a("h4",{attrs:{id:"_1-5-1-runnable的职责"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-5-1-runnable的职责"}},[s._v("#")]),s._v(" 1.5.1 Runnable的职责")]),s._v(" "),a("p",[s._v("从"),a("code",[s._v("Thread.run()")]),s._v("方法源码中可以看出，如果"),a("code",[s._v("Thread.run()")]),s._v("方法没有被重写，那么线程在执行时会判断"),a("code",[s._v("target")]),s._v("对象是否被赋值，即是否实现了"),a("code",[s._v("Runnable")]),s._v("接口并传入构造。如果没有被赋值，那么该线程的实现方法为空，换句话说就是这个线程在其生命周期内什么事情都没做就结束了。")]),s._v(" "),a("p",[a("code",[s._v("Runnable")]),s._v("接口非常简单，只定义了一个无参数无返回值的"),a("code",[s._v("run()")]),s._v("方法：")]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("package")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("java"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("lang")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/**\n * The <code>Runnable</code> interface should be implemented by any\n * class whose instances are intended to be executed by a thread. The\n * class must define a method of no arguments called <code>run</code>.\n * <p>\n * This interface is designed to provide a common protocol for objects that\n * wish to execute code while they are active. For example,\n * <code>Runnable</code> is implemented by class <code>Thread</code>.\n * Being active simply means that a thread has been started and has not\n * yet been stopped.\n * <p>\n * In addition, <code>Runnable</code> provides the means for a class to be\n * active while not subclassing <code>Thread</code>. A class that implements\n * <code>Runnable</code> can run without subclassing <code>Thread</code>\n * by instantiating a <code>Thread</code> instance and passing itself in\n * as the target.  In most cases, the <code>Runnable</code> interface should\n * be used if you are only planning to override the <code>run()</code>\n * method and no other <code>Thread</code> methods.\n * This is important because classes should not be subclassed\n * unless the programmer intends on modifying or enhancing the fundamental\n * behavior of the class.\n *\n * @author  Arthur van Hoff\n * @see     java.lang.Thread\n * @see     java.util.concurrent.Callable\n * @since   1.0\n */")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@FunctionalInterface")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("interface")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Runnable")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/**\n     * When an object implementing interface <code>Runnable</code> is used\n     * to create a thread, starting the thread causes the object's\n     * <code>run</code> method to be called in that separately executing\n     * thread.\n     * <p>\n     * The general contract of the method <code>run</code> is that it may\n     * take any action whatsoever.\n     *\n     * @see     java.lang.Thread#run()\n     */")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("abstract")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("run")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br"),a("span",{staticClass:"line-number"},[s._v("33")]),a("br"),a("span",{staticClass:"line-number"},[s._v("34")]),a("br"),a("span",{staticClass:"line-number"},[s._v("35")]),a("br"),a("span",{staticClass:"line-number"},[s._v("36")]),a("br"),a("span",{staticClass:"line-number"},[s._v("37")]),a("br"),a("span",{staticClass:"line-number"},[s._v("38")]),a("br"),a("span",{staticClass:"line-number"},[s._v("39")]),a("br"),a("span",{staticClass:"line-number"},[s._v("40")]),a("br"),a("span",{staticClass:"line-number"},[s._v("41")]),a("br"),a("span",{staticClass:"line-number"},[s._v("42")]),a("br"),a("span",{staticClass:"line-number"},[s._v("43")]),a("br"),a("span",{staticClass:"line-number"},[s._v("44")]),a("br")])]),a("h4",{attrs:{id:"_1-5-2-策略模式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-5-2-策略模式"}},[s._v("#")]),s._v(" 1.5.2 策略模式")]),s._v(" "),a("p",[s._v("无论是"),a("code",[s._v("Runnable.run()")]),s._v("还是"),a("code",[s._v("Thread.run()")]),s._v("（实际上"),a("code",[s._v("Thread")]),s._v("类也实现了"),a("code",[s._v("Runnable")]),s._v("接口）都是想将线程的控制本身与业务逻辑解耦，达到职责分明、功能单一的原则，这一点与"),a("code",[s._v("GoF")]),s._v("设计模式中的"),a("code",[s._v("策略模式")]),s._v("很相似：")]),s._v(" "),a("ul",[a("li",[a("code",[s._v("Thread")]),s._v("类只负责管理线程")]),s._v(" "),a("li",[a("code",[s._v("Runnable.run()")]),s._v("则负责管理业务逻辑，将逻辑部分独立出来提高可扩展性")])]),s._v(" "),a("blockquote",[a("p",[s._v("⚠️注意")])]),s._v(" "),a("p",[s._v("重写"),a("code",[s._v("Thread.run()")]),s._v("和实现"),a("code",[s._v("Runnable.run()")]),s._v("还有一处不同，那就是"),a("code",[s._v("Thread.run()")]),s._v("是不能共享的，也就是说"),a("code",[s._v("A")]),s._v("线程无法将"),a("code",[s._v("B")]),s._v("线程的"),a("code",[s._v("run()")]),s._v("方法当作自己的执行单元。")]),s._v(" "),a("p",[s._v("而使用"),a("code",[s._v("Runnable")]),s._v("接口将执行单元抽离出来，可以使用同一个"),a("code",[s._v("Runnable")]),s._v("实例来构造多个不同的"),a("code",[s._v("Thread")]),s._v("实例，并且共享资源。")]),s._v(" "),a("hr"),s._v(" "),a("h2",{attrs:{id:"_2-深入理解thread构造函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-深入理解thread构造函数"}},[s._v("#")]),s._v(" 2. 深入理解"),a("code",[s._v("Thread")]),s._v("构造函数")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/WWWWWWWXQ/images/raw/master/JCP-M&A/2_1.png",alt:"截屏2021-07-26 下午2.00.55"}})]),s._v(" "),a("table",[a("thead",[a("tr",[a("th",[s._v("Constructor")]),s._v(" "),a("th",[s._v("Description")])])]),s._v(" "),a("tbody",[a("tr",[a("td",[a("code",[s._v("Thread()")])]),s._v(" "),a("td",[s._v("Allocates a new "),a("code",[s._v("Thread")]),s._v(" object.")])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("Thread(Runnable target)")])]),s._v(" "),a("td",[s._v("Allocates a new "),a("code",[s._v("Thread")]),s._v(" object.")])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("Thread(Runnable target, String name)")])]),s._v(" "),a("td",[s._v("Allocates a new "),a("code",[s._v("Thread")]),s._v(" object.")])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("Thread(String name)")])]),s._v(" "),a("td",[s._v("Allocates a new "),a("code",[s._v("Thread")]),s._v(" object.")])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("Thread(ThreadGroup group, Runnable target)")])]),s._v(" "),a("td",[s._v("Allocates a new "),a("code",[s._v("Thread")]),s._v(" object.")])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("Thread(ThreadGroup group, Runnable target, String name)")])]),s._v(" "),a("td",[s._v("Allocates a new "),a("code",[s._v("Thread")]),s._v(" object so that it has "),a("code",[s._v("target")]),s._v(" as its run object, has the specified "),a("code",[s._v("name")]),s._v(" as its name, and belongs to the thread group referred to by "),a("code",[s._v("group")]),s._v(".")])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("Thread(ThreadGroup group, Runnable target, String name, long stackSize)")])]),s._v(" "),a("td",[s._v("Allocates a new "),a("code",[s._v("Thread")]),s._v(" object so that it has "),a("code",[s._v("target")]),s._v(" as its run object, has the specified "),a("code",[s._v("name")]),s._v(" as its name, and belongs to the thread group referred to by "),a("code",[s._v("group")]),s._v(", and has the specified "),a("em",[s._v("stack size")]),s._v(".")])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("Thread(ThreadGroup group, Runnable target, String name, long stackSize, boolean inheritThreadLocals)")])]),s._v(" "),a("td",[s._v("Allocates a new "),a("code",[s._v("Thread")]),s._v(" object so that it has "),a("code",[s._v("target")]),s._v(" as its run object, has the specified "),a("code",[s._v("name")]),s._v(" as its name, belongs to the thread group referred to by "),a("code",[s._v("group")]),s._v(", has the specified "),a("code",[s._v("stackSize")]),s._v(", and inherits initial values for "),a("a",{attrs:{href:"https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/InheritableThreadLocal.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("inheritable thread-local"),a("OutboundLink")],1),s._v(" variables if "),a("code",[s._v("inheritThreadLocals")]),s._v(" is "),a("code",[s._v("true")]),s._v(".")])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("Thread(ThreadGroup group, String name)")])]),s._v(" "),a("td",[s._v("Allocates a new "),a("code",[s._v("Thread")]),s._v(" object.")])])])]),s._v(" "),a("h3",{attrs:{id:"_2-1-线程的命名"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-线程的命名"}},[s._v("#")]),s._v(" 2.1 线程的命名")])])}),[],!1,null,null,null);t.default=e.exports}}]);