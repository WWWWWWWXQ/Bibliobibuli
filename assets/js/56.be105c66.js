(window.webpackJsonp=window.webpackJsonp||[]).push([[56],{623:function(s,t,e){"use strict";e.r(t);var a=e(6),n=Object(a.a)({},(function(){var s=this,t=s.$createElement,e=s._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("h1",{attrs:{id:"git规范"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git规范"}},[s._v("#")]),s._v(" Git规范")]),s._v(" "),e("h2",{attrs:{id:"_1-基本概念"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-基本概念"}},[s._v("#")]),s._v(" 1. 基本概念")]),s._v(" "),e("p",[e("code",[s._v("版本库(Repository)")]),s._v(" 是版本控制系统用来存放所有历史数据的地方，主要存放各个文件的当前状态、历史修改时间、修改者、以及修改的原因。")]),s._v(" "),e("p",[s._v("举个简单的例子，就好比银行的保险箱，每次往里存钱，都会记录谁、什么时间、存放多少钱、存入的原因等。对应的，"),e("code",[s._v("版本库")]),s._v("主要存放"),e("code",[s._v("代码")]),s._v("（文档，数据，图标等），并且每一次更新都要记录是谁、什么时间、提交了什么更新、以及更新的原因是什么。")]),s._v(" "),e("h3",{attrs:{id:"_1-1-git常用配置文件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-git常用配置文件"}},[s._v("#")]),s._v(" 1.1 Git常用配置文件")]),s._v(" "),e("ol",[e("li",[e("code",[s._v(".gitignore")]),s._v("忽略文件列表")]),s._v(" "),e("li",[e("code",[s._v(".git/config")]),s._v("配置文件")])]),s._v(" "),e("h3",{attrs:{id:"_1-2-git常用命令"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-git常用命令"}},[s._v("#")]),s._v(" 1.2 Git常用命令")]),s._v(" "),e("div",{staticClass:"language-shell line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" clone "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("url"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" checkout develop\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" pull\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" checkout -b feature/issue"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#12321")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" push --set-upstream origin feature/issue"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#12321")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" commit "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"issue#{id}"')]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" push\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br")])]),e("hr"),s._v(" "),e("h2",{attrs:{id:"_2-git分支管理"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-git分支管理"}},[s._v("#")]),s._v(" "),e("strong",[s._v("2. Git分支管理")])]),s._v(" "),e("p",[e("img",{attrs:{src:"https://gitee.com/WWWWWWWXQ/images/raw/master/Git/git_0_1.png",alt:"image-20210615205359507"}})]),s._v(" "),e("p",[s._v("Git远程分支主要包含："),e("code",[s._v("master/main develop feature release fixbug/hotfix")])]),s._v(" "),e("ul",[e("li",[e("code",[s._v("master/main")]),s._v("：整个项目主分支，"),e("strong",[s._v("有且仅有一个")]),s._v("，除项目负责人以外的开发人员不能向"),e("code",[s._v("master")]),s._v("分支合并内容。")]),s._v(" "),e("li",[e("code",[s._v("develop")]),s._v("：项目的开发分支。主分支"),e("code",[s._v("master")]),s._v("只用来分布"),e("strong",[s._v("重大版本")]),s._v("，日常需求则在"),e("code",[s._v("develop")]),s._v("上开发。")]),s._v(" "),e("li",[e("code",[s._v("feature")]),s._v("："),e("code",[s._v("feature")]),s._v("是为了开发后续版本的功能而从"),e("code",[s._v("develop")]),s._v("分支上面分出来的。开发完成稳定后，要再并入"),e("code",[s._v("develop")]),s._v("。")]),s._v(" "),e("li",[e("code",[s._v("release")]),s._v(": "),e("code",[s._v("release")]),s._v("是发布正式版本之前（即合并到"),e("code",[s._v("master")]),s._v("分支之前）用于测试的预发布版本。")]),s._v(" "),e("li",[e("code",[s._v("fixbug/hotfix")]),s._v("："),e("code",[s._v("fixbug")]),s._v("分支是从"),e("code",[s._v("master")]),s._v("分支上面分出来用于紧急修复bug用的。fix结束以后，再合并进"),e("code",[s._v("master")]),s._v("和"),e("code",[s._v("develop")]),s._v("分支，随后删除"),e("code",[s._v("fixbug")]),s._v("分支。")])]),s._v(" "),e("img",{staticStyle:{zoom:"50%"},attrs:{src:"https://gitee.com/WWWWWWWXQ/images/raw/master/Git/git_2.5.jpg",alt:"img"}}),s._v(" "),e("h3",{attrs:{id:"_2-1-master-主分支"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-master-主分支"}},[s._v("#")]),s._v(" 2.1 master-主分支")]),s._v(" "),e("p",[s._v("首先，代码库应该有且仅有一个"),e("strong",[s._v("主分支")]),s._v("。所有提供给用户使用的正式版本，都在这个"),e("strong",[s._v("主分支")]),s._v("上发布。Git主分支的名字，默认叫做"),e("code",[s._v("master/main")]),s._v("。它是自动建立的，版本库初始化以后，默认就是在主分支在进行开发。")]),s._v(" "),e("img",{staticStyle:{zoom:"50%"},attrs:{src:"https://gitee.com/WWWWWWWXQ/images/raw/master/Git/git_1.png",alt:"image-20210616104855470"}}),s._v(" "),e("h3",{attrs:{id:"_2-2-develop-开发分支"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-develop-开发分支"}},[s._v("#")]),s._v(" 2.2 develop-开发分支")]),s._v(" "),e("p",[s._v("主分支只用来发布重大版本，日常开发应该在另一条分支上完成。我们把日常开发用的分支叫做"),e("code",[s._v("develop")]),s._v("分支，虽说是日常开发分支，但是"),e("code",[s._v("develop")]),s._v("的作用更像是一个归档员，开发人员真正能直接进行开发的分支还是从"),e("code",[s._v("develop")]),s._v("上拉取的"),e("code",[s._v("feature")]),s._v("分支，开发完成后仍需合并回"),e("code",[s._v("develop")]),s._v("，因此"),e("code",[s._v("develop")]),s._v("分支可以看作是众多"),e("code",[s._v("feature")]),s._v("分支的合集。")]),s._v(" "),e("p",[e("img",{attrs:{src:"https://gitee.com/WWWWWWWXQ/images/raw/master/Git/git_2.png",alt:"img"}})]),s._v(" "),e("h3",{attrs:{id:"_2-3-临时性分支"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-临时性分支"}},[s._v("#")]),s._v(" 2.3 临时性分支")]),s._v(" "),e("p",[s._v("前面讲到版本库的两条主要分支："),e("code",[s._v("master")]),s._v("和"),e("code",[s._v("develop")]),s._v("。前者用于正式发布，后者用于日常开发。实际上，"),e("strong",[s._v("常设分支")]),s._v("只需要这两条就足够了。当然，除了"),e("strong",[s._v("常设分支")]),s._v("以外，还有一些"),e("strong",[s._v("临时性分支")]),s._v("，用于应对一些特定目的的版本开发，主要有三种：")]),s._v(" "),e("ul",[e("li",[e("p",[s._v("功能 "),e("code",[s._v("feature")]),s._v(" 分支")])]),s._v(" "),e("li",[e("p",[s._v("预发布 "),e("code",[s._v("release")]),s._v(" 分支")])]),s._v(" "),e("li",[e("p",[s._v("修补bug "),e("code",[s._v("fixbug")]),s._v("/"),e("code",[s._v("hotfix")]),s._v(" 分支")])])]),s._v(" "),e("p",[s._v("这三种分支都属于"),e("strong",[s._v("临时性")]),s._v("需要，使用完以后应该删除，如果需要可以保留"),e("code",[s._v("release")]),s._v("分支，并保证代码库的"),e("strong",[s._v("常设分支")]),s._v("始终只有"),e("code",[s._v("master")]),s._v("和"),e("code",[s._v("develop")]),s._v("。接下来，一个个来看这三种"),e("strong",[s._v("临时性分支")]),s._v("。")]),s._v(" "),e("h3",{attrs:{id:"_2-4-feature功能分支"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-4-feature功能分支"}},[s._v("#")]),s._v(" 2.4 feature功能分支")]),s._v(" "),e("p",[s._v("第一种是功能分支，它是为了开发某种特定功能，从"),e("code",[s._v("develop")]),s._v("分支上面分出来的，待开发完成后，要再并入"),e("code",[s._v("develop")]),s._v("。")]),s._v(" "),e("p",[s._v("功能分支的名字可以采用"),e("code",[s._v("feature/issue#{id}")]),s._v("的形式命名，表示此分支是对对应的issue进行的功能实现。优点在于，保证拉取"),e("code",[s._v("feature")]),s._v("分支时，已经创立了一个描述（最好是完整的）待开发的功能或者需求的"),e("code",[s._v("issue")]),s._v("，在每次"),e("code",[s._v("git commit")]),s._v("时，带上"),e("code",[s._v("issue#{id}")]),s._v("即可在对应的issue中看到提交的"),e("code",[s._v("commit")]),s._v("，审查代码时方便快捷。")]),s._v(" "),e("p",[e("img",{attrs:{src:"https://gitee.com/WWWWWWWXQ/images/raw/master/Git/git_5.png",alt:"img"}})]),s._v(" "),e("div",{staticClass:"language-shell line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 创建一个功能分支")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" checkout -b feature/issue"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#{id} develop")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 开发完成后，将功能分支合并develop")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" checkout develop\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" merge –no-ff feature/issue"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#{id}")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 待测试通过后，删除feature分支")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" branch -d feature/issue"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#{id}")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br")])]),e("h3",{attrs:{id:"_2-5-release预发布分支"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-5-release预发布分支"}},[s._v("#")]),s._v(" 2.5 release预发布分支")]),s._v(" "),e("p",[s._v("第二种是预发布分支，它是指发布正式版本之前（即合并到"),e("code",[s._v("master")]),s._v("分支之前）我们可能需要对预发布的版本进行测试。")]),s._v(" "),e("p",[s._v("预发布分支是从"),e("code",[s._v("develop")]),s._v("分支上面分出来的，预发布结束以后，必须合并进"),e("code",[s._v("develop")]),s._v("分支。它的命名可以采用"),e("code",[s._v("release/{YYYYMMDD}")]),s._v("的形式。")]),s._v(" "),e("p",[s._v("当预发布测试时某个"),e("code",[s._v("feature")]),s._v("分支的代码出现问题时，在原"),e("code",[s._v("feature")]),s._v("分支解决完之后直接合并至"),e("code",[s._v("release")]),s._v("分支继续进行测试。等待所有测试通过之后，将"),e("code",[s._v("release")]),s._v("分支合并回"),e("code",[s._v("develop")]),s._v("分支，同时向"),e("code",[s._v("master")]),s._v("分支发起一个"),e("code",[s._v("pull/merge request")]),s._v("。")]),s._v(" "),e("div",{staticClass:"language-shell line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 创建一个预发布分支")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" checkout -b release/"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("YYYYMMDD"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" develop\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 再合并到develop分支")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" checkout develop\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" merge –no-ff release/"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("YYYYMMDD"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 对合并生成的新节点，做一个标签")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" tag -a "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("YYYYMMDD"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 最后，删除预发布分支")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" branch -d release/"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("YYYYMMDD"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br")])]),e("h3",{attrs:{id:"_2-6-修补bug分支"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-6-修补bug分支"}},[s._v("#")]),s._v(" 2.6 修补bug分支")]),s._v(" "),e("p",[s._v("最后一种是修补bug分支。软件正式发布以后，难免会出现bug。这时就需要创建一个分支，进行bug修补。")]),s._v(" "),e("p",[s._v("修补bug分支是从"),e("code",[s._v("master")]),s._v("分支上面分出来的。修补结束以后，再合并进"),e("code",[s._v("master")]),s._v("和"),e("code",[s._v("develop")]),s._v("分支。它的命名可以采用"),e("code",[s._v("fixbug/issue#{id}")]),s._v("或者"),e("code",[s._v("hotfix/issue#{id}")]),s._v("的形式。")]),s._v(" "),e("p",[e("img",{attrs:{src:"https://gitee.com/WWWWWWWXQ/images/raw/master/Git/git_6.png",alt:"img"}})]),s._v(" "),e("div",{staticClass:"language-shell line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#创建一个修补bug分支：")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" checkout -b fixbug/issue"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#{id} master")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 修补结束后，合并到master分支：")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" checkout master\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" merge –no-ff fixbug/issue"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#{id}")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" tag -a "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.1")]),s._v(".1\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 再合并到develop分支：")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" checkout develop\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" merge –no-ff fixbug/issue"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#{id}")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 最后，删除”修补bug分支”：")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" branch -d fixbug/issue"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#{id}")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br")])]),e("h2",{attrs:{id:"_3-git分支新建与合并"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-git分支新建与合并"}},[s._v("#")]),s._v(" 3. Git分支新建与合并")]),s._v(" "),e("p",[s._v("我们来看一个简单的分支新建与分支合并的例子。在这个例子中，项目仅有一个主分支"),e("code",[s._v("master")]),s._v("，功能分支为"),e("code",[s._v("issue#{id}")]),s._v("。")]),s._v(" "),e("p",[s._v("实际工作中可能会用到类似的工作流，你将经历如下步骤：")]),s._v(" "),e("ol",[e("li",[s._v("开发某个网站。")]),s._v(" "),e("li",[s._v("为实现某个新的需求，创建一个分支。")]),s._v(" "),e("li",[s._v("在这个分支上开展工作。")])]),s._v(" "),e("p",[s._v("正在此时，突然接到一个电话说有个很严重的问题需要紧急修补。 你将按照如下方式来处理：")]),s._v(" "),e("ol",[e("li",[s._v("切换到你的线上分支（production branch）。")]),s._v(" "),e("li",[s._v("为这个紧急任务新建一个分支，并在其中修复bug。")]),s._v(" "),e("li",[s._v("在测试通过之后，切换回线上分支，然后合并这个修补分支，最后将改动推送到线上分支。")]),s._v(" "),e("li",[s._v("切换回你最初工作的分支上，继续工作。")])]),s._v(" "),e("h3",{attrs:{id:"_3-1-新建分支"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-新建分支"}},[s._v("#")]),s._v(" 3.1 新建分支")]),s._v(" "),e("p",[e("img",{attrs:{src:"https://gitee.com/WWWWWWWXQ/images/raw/master/Git/git_7.png",alt:"截屏2021-06-11 下午5.13.59"}})]),s._v(" "),e("p",[s._v("首先，假设你正在你的项目上工作，并且已经有一些不愿意回退的修改。")]),s._v(" "),e("p",[e("img",{attrs:{src:"https://gitee.com/WWWWWWWXQ/images/raw/master/Git/git_3.1.png",alt:"截屏2021-06-11 下午5.13.59"}})]),s._v(" "),e("p",[s._v("现在，你已经决定要解决团队使用的系统中的 "),e("code",[s._v("issue#53")]),s._v(" 问题。 想要新建一个分支并同时切换到那个分支上，你可以运行一个带有"),e("code",[s._v("-b")]),s._v("参数的"),e("code",[s._v("git checkout")]),s._v("命令：")]),s._v(" "),e("div",{staticClass:"language-shell line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" checkout -b issue"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#53")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 它是下面两条命令的简写：")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" branch issue"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#53")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" checkout issue"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#53")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("p",[e("img",{attrs:{src:"https://gitee.com/WWWWWWWXQ/images/raw/master/Git/git_3.1_2.png",alt:"img"}})]),s._v(" "),e("p",[s._v("接着在 "),e("code",[s._v("issue#53")]),s._v(" 分支上解决问题并提交。在此过程中，"),e("code",[s._v("issue#53")]),s._v("分支随着你的提交在不断的向前推进，因为你已经检出（checkout）到该分支，也就是说，你的"),e("code",[s._v("HEAD")]),s._v("指针指向了"),e("code",[s._v("issue#53")]),s._v("分支。")]),s._v(" "),e("div",{staticClass:"language-shell line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 修改一个仓库中的文件")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("vim")]),s._v(" index.html\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 对修改的动作做一个记录提交")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" commit -a -m "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'added a new footer [issue 53]'")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("p",[s._v("现在有另一个紧急问题等待解决。 有了 Git 的帮助，你不必把这个紧急问题和"),e("code",[s._v("issue#53")]),s._v("的修改混在一起，你也不需要花大力气来还原关于"),e("code",[s._v("issue#53")]),s._v(" 问题的修改，然后再添加关于这个紧急问题的修改，最后将这个修改提交到线上分支。 你所要做的仅仅是切换回 "),e("code",[s._v("master")]),s._v("分支然后重复解决"),e("code",[s._v("issue#53")]),s._v("时的步骤。")]),s._v(" "),e("p",[s._v("但是，在这么做之前，要留意你的工作目录和暂存区里那些还没有被提交的修改，它可能会和你即将检出的分支产生冲突从而阻止 Git 切换到该分支。 最好的方法是，在你切换分支之前，保持好一个干净的状态。 Git提供了一些方法可以绕过这个问题，即保存进度（stashing） 和 修补提交（commit amending）。现在，假设你已经把"),e("code",[s._v("issue#53")]),s._v("的修改全部提交了，这时你可以切换回 master 分支了：")]),s._v(" "),e("div",{staticClass:"language-shell line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" checkout master\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[s._v("这个时候，你的工作目录和你在开始"),e("code",[s._v("issue#53")]),s._v("问题之前一模一样，现在你可以专心修复这个紧急问题了。")]),s._v(" "),e("blockquote",[e("p",[s._v("请牢记：当你切换分支的时候，Git 会重置你的工作目录，使其看起来像回到了你在那个分支上最后一次提交的样子。 Git 会自动添加、删除、修改文件以确保此时你的工作目录和这个分支最后一次提交时的样子一模一样。")])]),s._v(" "),e("p",[s._v("接下来，你就可以修复紧急问题了，建立一个针对该紧急问题的分支（hotfix branch），在该分支上工作直到问题解决：")]),s._v(" "),e("p",[e("img",{attrs:{src:"https://gitee.com/WWWWWWWXQ/images/raw/master/Git/git_3.1_3.png",alt:"img"}})]),s._v(" "),e("div",{staticClass:"language-shell line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" checkout -b hotfix/issue"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#{id}")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("vim")]),s._v(" index.html\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" commit -a -m "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'fixed the broken email address'")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[s._v("测试通过之后，就可以提出"),e("code",[s._v("PR/MR")]),s._v("或者直接"),e("code",[s._v("merge")]),s._v("到"),e("code",[s._v("master")]),s._v("，等待审查员的通过了。发布之后，最新的修改就已经在"),e("code",[s._v("master")]),s._v(" 分支所指向的提交快照中。")]),s._v(" "),e("p",[e("img",{attrs:{src:"https://gitee.com/WWWWWWWXQ/images/raw/master/Git/git_3.1_4.png",alt:"img"}})]),s._v(" "),e("p",[s._v("在这个紧急问题的解决方案发布之后，你准备回到被打断之前时的工作中。 当然在这之前，应该先删除"),e("code",[s._v("hotfix")]),s._v("分支，因为你已经不再需要它了 ——"),e("code",[s._v("master")]),s._v("分支已经指向了同一个位置。")]),s._v(" "),e("p",[s._v("你可以使用带"),e("code",[s._v("-d")]),s._v("选项的"),e("code",[s._v("git branch")]),s._v("命令来删除分支：")]),s._v(" "),e("div",{staticClass:"language-shell line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" branch -d hotfix/issue"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#{id}")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[s._v("现在可以切换回之前工作的分支继续你的工作，也就是针对"),e("code",[s._v("issue#53")]),s._v(" 问题的那个分支。")]),s._v(" "),e("div",{staticClass:"language-shell line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" checkout issue"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#53")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("vim")]),s._v(" index.html\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" commit -a -m "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'finished the new footer issue#53'")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("img",{attrs:{src:"https://gitee.com/WWWWWWWXQ/images/raw/master/Git/git_3.1_5.png",alt:"img"}})]),s._v(" "),e("p",[s._v("现在，你在"),e("code",[s._v("hotfix")]),s._v("分支上所做的修改还没有合并到"),e("code",[s._v("issue#53")]),s._v("分支中。 如果你需要拉取"),e("code",[s._v("hotfix")]),s._v("所做的修改，你可以使用"),e("code",[s._v("git merge master")]),s._v("命令将"),e("code",[s._v("master")]),s._v("分支合并入"),e("code",[s._v("issue#53")]),s._v("分支，或者"),e("code",[s._v("issue#53")]),s._v("分支马上就可以提测了并且修复的bug不影响其功能，就可以先忽略，不用合进来。")]),s._v(" "),e("h3",{attrs:{id:"_3-2-遇到冲突时的分支合并"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-遇到冲突时的分支合并"}},[s._v("#")]),s._v(" 3.2 遇到冲突时的分支合并")]),s._v(" "),e("p",[s._v("有时候合并操作不会如此顺利。 如果你在两个不同的分支中，对同一个文件的同一个部分进行了不同的修改，Git 就没法干净的合并它们。 如果你对 "),e("code",[s._v("issue#53")]),s._v(" 问题的修改和有关"),e("code",[s._v("hotfix")]),s._v("的修改都涉及到同一个文件的同一处，在合并它们的时候就会产生合并冲突：")]),s._v(" "),e("div",{staticClass:"language-shell line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" checkout master\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" merge issue"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#53")]),s._v("\n\nAuto-merging index.html\nCONFLICT "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("content"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(": Merge conflict "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" index.html\nAutomatic merge failed"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" fix conflicts and "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("then")]),s._v(" commit the result.\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br")])]),e("p",[s._v("此时 Git 虽然做了合并，但是没有自动地创建一个新的合并提交。 Git 会暂停下来等待你去解决合并产生的冲突。 你可以在合并冲突后的任意时刻使用"),e("code",[s._v("git status")]),s._v("命令来查看那些因包含合并冲突而处于未合并（unmerged）状态的文件：")]),s._v(" "),e("div",{staticClass:"language-shell line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" status\n\nOn branch master\nYou have unmerged paths.\n\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("fix conflicts and run "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"git commit"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\nUnmerged paths:\n\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("use "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"git add <file>..."')]),s._v(" to mark resolution"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\nboth modified:      index.html\n\nno changes added to commit "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("use "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"git add"')]),s._v(" and/or "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"git commit -a"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br")])]),e("p",[s._v("在你解决了所有文件里的冲突之后，对每个文件使用"),e("code",[s._v("git add")]),s._v("命令来将其标记为冲突已解决。 一旦暂存这些原本有冲突的文件，Git 就会将它们标记为冲突已解决。")]),s._v(" "),e("p",[s._v("如果你想使用图形化工具来解决冲突，你可以运行 "),e("code",[s._v("git mergetool")]),s._v("，该命令会为你启动一个合适的可视化合并工具，并带领你一步一步解决这些冲突。")]),s._v(" "),e("h2",{attrs:{id:"_4-git文件状态"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4-git文件状态"}},[s._v("#")]),s._v(" 4. Git文件状态")]),s._v(" "),e("p",[s._v("Git文件状态主要包括"),e("code",[s._v("untracked 未追踪")]),s._v("、"),e("code",[s._v("unmodified未修改")]),s._v("、"),e("code",[s._v("modified已修改")]),s._v("、"),e("code",[s._v("staged已储存")])]),s._v(" "),e("p",[e("img",{attrs:{src:"https://gitee.com/WWWWWWWXQ/images/raw/master/Git/git_4_1.png",alt:"img"}})]),s._v(" "),e("h3",{attrs:{id:"_4-1-git开发流程"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-git开发流程"}},[s._v("#")]),s._v(" 4.1 Git开发流程")]),s._v(" "),e("p",[e("img",{attrs:{src:"https://gitee.com/WWWWWWWXQ/images/raw/master/Git/git_4.1_1.png",alt:"img"}})]),s._v(" "),e("h3",{attrs:{id:"_4-2-gitflow工作流"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-gitflow工作流"}},[s._v("#")]),s._v(" 4.2 Gitflow工作流")]),s._v(" "),e("p",[s._v("Gitflow工作流定义了一个围绕项目发布的严格分支模型。虽然比功能分支工作流复杂几分，但提供了用于一个健壮的用于管理大型项目的框架。")]),s._v(" "),e("p",[e("img",{attrs:{src:"https://gitee.com/WWWWWWWXQ/images/raw/master/Git/git_4.2_2.png",alt:"截屏2021-06-15 下午8.54.43"}})]),s._v(" "),e("blockquote",[e("p",[s._v("工作方式")])]),s._v(" "),e("p",[s._v("Gitflow工作流仍然用中央仓库作为所有开发者的交互中心。和其它的工作流一样，开发者在本地工作之后push分支到中央仓库中。")]),s._v(" "),e("p",[e("img",{attrs:{src:"https://gitee.com/WWWWWWWXQ/images/raw/master/Git/git_4.2_1.png",alt:"https://raw.githubusercontent.com/quickhack/translations/master/git-workflows-and-tutorials/images/git-workflows-gitflow.png"}})]),s._v(" "),e("h3",{attrs:{id:"_4-3-历史分支"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-历史分支"}},[s._v("#")]),s._v(" 4.3 历史分支")]),s._v(" "),e("p",[s._v("相比使用仅有的1个"),e("code",[s._v("master")]),s._v("分支，Gitflow工作流规定使用2个分支来记录项目的历史。"),e("code",[s._v("master")]),s._v("分支存储了正式发布的历史，而"),e("code",[s._v("develop")]),s._v("分支作为功能的集成分支。这样也方便为"),e("code",[s._v("master")]),s._v("分支上的所有提交分配一个版本号（tag）。")]),s._v(" "),e("p",[e("img",{attrs:{src:"https://gitee.com/WWWWWWWXQ/images/raw/master/Git/git_4.3_1.png",alt:"https://raw.githubusercontent.com/quickhack/translations/master/git-workflows-and-tutorials/images/git-workflow-release-cycle-1historical.png"}})]),s._v(" "),e("p",[s._v("剩下要说明的问题围绕着这2个分支的区别展开。")]),s._v(" "),e("h3",{attrs:{id:"_4-4-功能分支"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4-4-功能分支"}},[s._v("#")]),s._v(" 4.4 功能分支")]),s._v(" "),e("p",[s._v("每个新功能位于一个属于自己的分支，开发完成后可以push到中央仓库以备份和协作。但功能分支"),e("code",[s._v("feature")]),s._v("并不是从"),e("code",[s._v("master")]),s._v("分支上拉出的新分支，而是使用"),e("code",[s._v("develop")]),s._v("分支作为父分支。当新功能完成时，合并回"),e("code",[s._v("develop")]),s._v("分支。新功能提交应该从不直接与"),e("code",[s._v("master")]),s._v("分支交互。")]),s._v(" "),e("p",[e("img",{attrs:{src:"https://gitee.com/WWWWWWWXQ/images/raw/master/Git/git_4.4_1.png",alt:"https://raw.githubusercontent.com/quickhack/translations/master/git-workflows-and-tutorials/images/git-workflow-release-cycle-2feature.png"}})]),s._v(" "),e("p",[s._v("注意，从各种含义和目的上来看，功能分支加上"),e("code",[s._v("develop")]),s._v("分支就是功能分支工作流的用法。但Gitflow工作流远不止这些。")]),s._v(" "),e("h3",{attrs:{id:"_4-5-发布分支"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4-5-发布分支"}},[s._v("#")]),s._v(" 4.5 发布分支")]),s._v(" "),e("p",[e("img",{attrs:{src:"https://gitee.com/WWWWWWWXQ/images/raw/master/Git/git_4.5_1.png",alt:"https://raw.githubusercontent.com/quickhack/translations/master/git-workflows-and-tutorials/images/git-workflow-release-cycle-3release.png"}})]),s._v(" "),e("p",[s._v("一旦"),e("code",[s._v("develop")]),s._v("分支上有了足够做一次发布（或者说快到了既定的发布日）的足够功能，就从"),e("code",[s._v("develop")]),s._v("分支上拉取一个"),e("code",[s._v("release")]),s._v("发布分支。")]),s._v(" "),e("p",[s._v("新建的分支用于执行"),e("code",[s._v("发布循环")]),s._v("（测试、修复、再测试、再修复），所以这个时间点之后的所有新的功能都不能再合到这个分支上 —— 这个分支只应该"),e("strong",[s._v("做Bug修复")]),s._v("、"),e("strong",[s._v("文档生成")]),s._v("和其它"),e("strong",[s._v("面向发布任务")]),s._v("。一旦对外发布的工作都完成了，就可以将发布分支"),e("code",[s._v("release")]),s._v("合并到"),e("code",[s._v("master")]),s._v("分支并分配一个版本号打好"),e("code",[s._v("Tag")]),s._v("。另外，这些从新建发布分支以来的做的修改要合并回"),e("code",[s._v("develop")]),s._v("分支。")]),s._v(" "),e("p",[s._v("采用一个用于发布准备的专门分支，可以使得一个团队在完善当前的发布版本的同时，另一个团队可以继续开发下个版本的功能。这也有助于打造定义良好的开发阶段（比如，可以很轻松地说，『这周我们要做准备发布版本4.0』，并且在仓库的目录结构中可以实际看到）。")]),s._v(" "),e("h3",{attrs:{id:"_4-6-维护分支"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4-6-维护分支"}},[s._v("#")]),s._v(" 4.6 维护分支")]),s._v(" "),e("p",[e("img",{attrs:{src:"https://gitee.com/WWWWWWWXQ/images/raw/master/Git/git_4.6_1.png",alt:"weihu"}})]),s._v(" "),e("p",[s._v("维护分支或者说是热修复（hotfix）分支用于生成快速给产品发布版本（production releases）打补丁，这是唯一可以直接从"),e("code",[s._v("maste")]),s._v("r分支拉出来的分支。修复完成，修改应该马上合并回"),e("code",[s._v("master")]),s._v("分支和"),e("code",[s._v("develop")]),s._v("分支（当前的发布分支），"),e("code",[s._v("master")]),s._v("分支应该用新的版本号打好"),e("code",[s._v("Tag")]),s._v("。")]),s._v(" "),e("p",[s._v("为Bug修复使用专门分支，让团队可以处理掉问题而不用打断其它工作或是等待下一个发布循环。你可以把维护分支想成是一个直接在"),e("code",[s._v("master")]),s._v("分支上处理的临时发布。")]),s._v(" "),e("h3",{attrs:{id:"示例"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#示例"}},[s._v("#")]),s._v(" 示例")]),s._v(" "),e("blockquote",[e("p",[s._v("创建开发分支")])]),s._v(" "),e("p",[e("img",{attrs:{src:"https://gitee.com/WWWWWWWXQ/images/raw/master/Git/git_5_1.png",alt:"https://raw.githubusercontent.com/quickhack/translations/master/git-workflows-and-tutorials/images/git-workflow-release-cycle-5createdev.png"}})]),s._v(" "),e("p",[s._v("第一步，为"),e("code",[s._v("master")]),s._v("分支配套一个"),e("code",[s._v("develop")]),s._v("分支。简单来做可以本地创建一个空的"),e("code",[s._v("develop")]),s._v("分支，push到服务器上：")]),s._v(" "),e("div",{staticClass:"language-shell line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" branch develop\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" push -u origin develop\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("p",[s._v("以后这个分支将会包含了项目的全部历史，而"),e("code",[s._v("master")]),s._v("分支将只包含了部分历史。其它开发者这时应该克隆中央仓库，建好"),e("code",[s._v("develop")]),s._v("分支的跟踪分支：")]),s._v(" "),e("div",{staticClass:"language-shell line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" clone ssh://user@host/path/to/repo.git\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" checkout -b develop origin/develop\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("p",[s._v("现在每个开发都有了这些历史分支的本地拷贝。")]),s._v(" "),e("blockquote",[e("p",[s._v("小红和小明开始开发新功能")])]),s._v(" "),e("p",[e("img",{attrs:{src:"https://gitee.com/WWWWWWWXQ/images/raw/master/Git/git_5_2.png",alt:"https://raw.githubusercontent.com/quickhack/translations/master/git-workflows-and-tutorials/images/git-workflow-release-cycle-6maryjohnbeginnew.png"}})]),s._v(" "),e("p",[s._v("这个示例中，小红和小明开始各自的功能开发。他们需要为各自的功能创建相应的分支。新分支不是基于"),e("code",[s._v("master")]),s._v("分支，而是应该基于"),e("code",[s._v("develop")]),s._v("分支：")]),s._v(" "),e("div",{staticClass:"language-shell line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" checkout -b some-feature develop\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[s._v("他们用老套路添加提交到各自功能分支上：编辑、暂存、提交：")]),s._v(" "),e("div",{staticClass:"language-shell line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" status\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" commit\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("blockquote",[e("p",[s._v("小红完成功能开发")])]),s._v(" "),e("p",[e("img",{attrs:{src:"https://gitee.com/WWWWWWWXQ/images/raw/master/Git/git_5_3.png",alt:"https://raw.githubusercontent.com/quickhack/translations/master/git-workflows-and-tutorials/images/git-workflow-release-cycle-7maryfinishes.png"}})]),s._v(" "),e("p",[s._v("添加了提交后，小红觉得她的功能OK了。如果团队使用"),e("code",[s._v("Pull Requests")]),s._v("，这时候可以发起一个"),e("code",[s._v("PR")]),s._v("用于合并到"),e("code",[s._v("develop")]),s._v("分支。或者她可以直接合并到她本地的"),e("code",[s._v("develop")]),s._v("分支后push到中央仓库：")]),s._v(" "),e("div",{staticClass:"language-shell line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" pull origin develop\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" checkout develop\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" merge some-feature\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" push\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" branch -d some-feature\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("p",[s._v("第一条命令在合并功能前确保"),e("code",[s._v("develop")]),s._v("分支是最新的。注意，功能决不应该直接合并到"),e("code",[s._v("master")]),s._v("分支。冲突解决方法和集中式工作流一样。")]),s._v(" "),e("blockquote",[e("p",[s._v("小红开始准备发布")])]),s._v(" "),e("p",[e("img",{attrs:{src:"https://gitee.com/WWWWWWWXQ/images/raw/master/Git/git_5_4.png",alt:"https://raw.githubusercontent.com/quickhack/translations/master/git-workflows-and-tutorials/images/git-workflow-release-cycle-8maryprepsrelease.png"}})]),s._v(" "),e("p",[s._v("这个时候小明正在实现他的功能，小红开始准备她的第一个项目正式发布。像功能开发一样，她用一个新的分支来做发布准备。这一步也确定了发布的版本号：")]),s._v(" "),e("div",{staticClass:"language-shell line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" checkout -b release-0.1 develop\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[s._v("这个分支是清理发布、执行所有测试、更新文档和其它为下个发布做准备操作的地方，像是一个专门用于改善发布的功能分支。")]),s._v(" "),e("p",[s._v("只要小红创建这个分支并push到中央仓库，这个发布就是功能冻结的。任何不在"),e("code",[s._v("develop")]),s._v("分支中的新功能都推到下个发布循环中。")]),s._v(" "),e("blockquote",[e("p",[s._v("小红完成发布")])]),s._v(" "),e("p",[e("img",{attrs:{src:"https://gitee.com/WWWWWWWXQ/images/raw/master/Git/git_5_5.png",alt:"https://raw.githubusercontent.com/quickhack/translations/master/git-workflows-and-tutorials/images/git-workflow-release-cycle-9maryfinishes.png"}})]),s._v(" "),e("p",[s._v("一旦准备好了对外发布，小红合并修改到"),e("code",[s._v("master")]),s._v("分支和"),e("code",[s._v("develop")]),s._v("分支上，随后删除发布分支。")]),s._v(" "),e("p",[s._v("合并回"),e("code",[s._v("develop")]),s._v("分支很重要，因为在发布分支中已经提交的更新需要在后面的新功能中也要是可用的。另外，如果小红的团队要求Code Review，这是一个发起"),e("code",[s._v("Pull Request")]),s._v("的理想时机。")]),s._v(" "),e("div",{staticClass:"language-shell line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" checkout master\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" merge release-0.1\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" push\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" checkout develop\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" merge release-0.1\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" push\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" branch -d release-0.1\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br")])]),e("p",[s._v("发布分支是作为功能开发（"),e("code",[s._v("develop")]),s._v("分支）和对外发布（"),e("code",[s._v("master")]),s._v("分支）间的缓冲。只要有合并到"),e("code",[s._v("master")]),s._v("分支，就应该打好"),e("code",[s._v("Tag")]),s._v("以方便跟踪。")]),s._v(" "),e("div",{staticClass:"language-shell line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" tag -a "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.1")]),s._v(" -m "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Initial public release"')]),s._v(" master\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" push –tags\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("p",[s._v("Git有提供各种勾子（hook），即仓库有事件发生时触发执行的脚本。可以配置一个勾子，在你push中央仓库的"),e("code",[s._v("master")]),s._v("分支时，自动构建好对外发布。")]),s._v(" "),e("blockquote",[e("p",[s._v("最终用户发现Bug")])]),s._v(" "),e("p",[e("img",{attrs:{src:"https://gitee.com/WWWWWWWXQ/images/raw/master/Git/git_5_6.png",alt:""}})]),s._v(" "),e("p",[s._v("对外发布后，小红回去和小明一起做下个发布的新功能开发，直到有最终用户开了一个Issue抱怨当前版本的一个Bug。为了处理Bug，小红（或小明）从"),e("code",[s._v("master")]),s._v("分支上拉出了一个维护分支，提交修改以解决问题，然后直接合并回"),e("code",[s._v("master")]),s._v("分支：")]),s._v(" "),e("div",{staticClass:"language-shell line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" checkout -b issue-"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#001 master")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Fix the bug")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" checkout master\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" merge issue-"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#001")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" push\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("p",[s._v("就像发布分支，维护分支中新加这些重要修改需要包含到"),e("code",[s._v("develop")]),s._v("分支中，所以小红要执行一个合并操作。然后就可以安全地删除这个分支了：")]),s._v(" "),e("div",{staticClass:"language-shell line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" checkout develop\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" merge issue-"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#001")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" push\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" branch -d issue-"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#001")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br")])]),e("h2",{attrs:{id:"_5-git代码提交规则"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_5-git代码提交规则"}},[s._v("#")]),s._v(" 5. GIT代码提交规则")]),s._v(" "),e("ol",[e("li",[s._v("设置用户名为姓名全拼，邮箱为团队邮箱地址。")]),s._v(" "),e("li",[s._v("代码提交规则\n"),e("ul",[e("li",[s._v("使用英文说明提交内容。")]),s._v(" "),e("li",[s._v("提交的说明包括两部分，动作类型: 简要说明，以英文的"),e("code",[s._v(":")]),s._v("进行区分。")]),s._v(" "),e("li",[s._v("动作类型使用英文大写")]),s._v(" "),e("li",[s._v('理论上一次提交仅包含一个功能点修改，如果功能过大，则需要注明功能点进度。如果一次提交包含多个功能修改，则每个功能点提交描述作为单独一行，每行以英文分号";"作为行尾结束符。')])])])]),s._v(" "),e("table",[e("thead",[e("tr",[e("th",[e("strong",[s._v("动作")])]),s._v(" "),e("th",[e("strong",[s._v("说明")])]),s._v(" "),e("th",[e("strong",[s._v("示例")])])])]),s._v(" "),e("tbody",[e("tr",[e("td",[s._v("ADD")]),s._v(" "),e("td",[s._v("新加功能、文件等")]),s._v(" "),e("td")]),s._v(" "),e("tr",[e("td",[s._v("DEL")]),s._v(" "),e("td",[s._v("删除功能、文件等")]),s._v(" "),e("td")]),s._v(" "),e("tr",[e("td",[s._v("MOD")]),s._v(" "),e("td",[s._v("修改功能")]),s._v(" "),e("td")]),s._v(" "),e("tr",[e("td",[s._v("FIX")]),s._v(" "),e("td",[s._v("修复问题等，如果修复的为BUG，请标注BUG编码")]),s._v(" "),e("td",[s._v("FIX: BUG#123, bug's description; FIX: BUG#124, bug's description;")])]),s._v(" "),e("tr",[e("td",[s._v("MERGE")]),s._v(" "),e("td",[s._v("合并代码，自动合并时一般不需要修改说明文字")]),s._v(" "),e("td")]),s._v(" "),e("tr",[e("td",[s._v("REVIEW")]),s._v(" "),e("td",[s._v("代码审核注释，需注明审核结果(需使用中括号括起)、@被审核者、被审核模块名称、文件名")]),s._v(" "),e("td",[s._v("REVIEW: [PASS], @zhanxy, for excel operation model")])]),s._v(" "),e("tr",[e("td",[s._v("REFACTOR")]),s._v(" "),e("td",[s._v("代码重构，需注明重构模块，及说明。一般重构需要使用新的独立分支处理。")]),s._v(" "),e("td")]),s._v(" "),e("tr",[e("td",[s._v("DOC")]),s._v(" "),e("td",[s._v("文档")]),s._v(" "),e("td")])])]),s._v(" "),e("ol",{attrs:{start:"3"}},[e("li",[s._v("代码提交流程\n"),e("ol",[e("li",[s._v("代码修改完成后，首先进行编码规范检查，注释检查，自我测试，单元测试、编译测试等。")]),s._v(" "),e("li",[s._v("测试通过后提交至本地，提交过程中检查修改的文件是否正确，有无遗漏文件等，注明修改说明后提交代码。")]),s._v(" "),e("li",[s._v("拉取服务器上的代码，如果本地代码是最新的提交，则直接推送到服务器。如果拉取到别人提交的代码，则需合并服务器的代码到本地，并仔细检查代码合并结果，如有冲突则需要找到相应的编码人员一起解决冲突。问题解决后，重新编译本地代码，并测试，通过测试后提交本地代码。")]),s._v(" "),e("li",[s._v("推送本地提交至服务器。服务器检测到有代码推送后会自行构建所有代码。")])])]),s._v(" "),e("li",[s._v("工作流程\n"),e("ol",[e("li",[s._v("每天早上开始工作前，请先拉取服务器代码，并编译，检查服务器代码是否有错误。检查无误后即可开始自己的工作。如果有误，请通知最后的代码提交者及项目负责人。")]),s._v(" "),e("li",[s._v("理论上没修改一个完整的功能点都可以提交代码并推送至服务器。")]),s._v(" "),e("li",[s._v("每天工作结束后或者下班前，请提交本地代码，并推送至服务器。")])])])])])}),[],!1,null,null,null);t.default=n.exports}}]);